# This is a pre-filled variables file for building Gmsh with Microsoft
# Visual C++ (MSVC) 2005 and 2008.
# 
# See doc/README.msvc for building instructions.

##################################################################

# Change this if you want to use a posix shell (e.g. in cygwin) instead 
# of the windows cmd shell
USE_WINDOWS_CMD_SHELL=1

ifeq (${USE_WINDOWS_CMD_SHELL},1)
  # Change this to match where the gmsh sources are installed
  MAKE="E:/src/gmsh/utils/misc/gmake.exe"
  UNAME=WIN32MSVC
  RM=erase
  MV=move
else
  # If you don't have all the MSVC variables defined in your POSIX shell 
  # you can use this to compile: 'cmd.exe /c "vcvars32.bat && make"'
  MAKE=make
  UNAME=WIN32
  RM=rm -f
  MV=mv -f
endif

# Change the following to select which version to build:
ENABLE_GUI=0
ENABLE_BLAS_LAPACK=1
ENABLE_PARSER=1
ENABLE_POSTPRO=1
ENABLE_TETGEN=1
ENABLE_NETGEN=0
ENABLE_METIS=0
ENABLE_OCC=0
ENABLE_MED=0

# If you selected ENABLE_GUI, specify where FLTK is installed
FLTK_PREFIX="E:/src/fltk-1.1.9"

# If you selected ENABLE_BLAS_LAPACK, specify where Blas/Lapack are installed
BLAS_LAPACK_PREFIX="E:/src/blaslapack"

# If you selected ENABLE_OCC, specify where OpenCASCADE is installed
ifneq ($(CASROOT),)
  OCC_PREFIX="${CASROOT}"
else
  OCC_PREFIX="E:/src/OpenCASCADE6.3.0/ros"
endif

# If you selected ENABLE_MED, specify where MED and HDF5 are installed
MED_PREFIX="E:/src/med-2.3.4"
HDF5_PREFIX="E:/src/hdf5-1.6.6"

##################################################################

# hostname
HOSTNAME=localhost

# The names of the C and C++ compilers
CC=cl /nologo /MT
CXX=cl /EHsc /nologo /GR /MT

# Debug/Release Single/Multi-threaded Lib/Dll flags:
# Rel-Sin-Lib: /ML
# Deb-Sin-Lib: /MLd
# Rel-Mul-Lib: /MT
# Deb-Mul-Lib: /MTd
# Rel-Mul-Dll: /MD
# Deb-Mul-Dll: /MDd

# append different suffix for release or debug version of library
ifneq (,${findstring MTd,${CXX}})
  LIBSUFFIX=_d
else
  LIBSUFFIX=_r
endif

# increase stack size to 16Mb to avoid stack overflows in recursive 
# tet classification for large 3D Delaunay grids
LINKER=cl /F16777216

# All compiler flags except optimization flags
FLAGS=/DWIN32 /D_USE_MATH_DEFINES /D_CRT_SECURE_NO_DEPRECATE /DHAVE_NO_DLL
FLAGS+=/DHAVE_ANN /DHAVE_MATH_EVAL

# Additional system includes ($INCLUDE is automatically defined by MSVC when
# you launch the MSVC command prompt)
SYSINCLUDE=/I"${INCLUDE}"

# Compiler optimization flags
OPTIM=/O2

# Gmsh subdirectories
GMSH_DIRS=Common Geo Mesh Numeric contrib/ANN contrib/MathEval

# Optional stuff
ifeq (${ENABLE_PARSER},1)
  GMSH_DIRS+=Parser
else
  FLAGS+=/DHAVE_NO_PARSER
endif
ifeq (${ENABLE_POSTPRO},1)
  GMSH_DIRS+=Post Plugin
else
  FLAGS+=/DHAVE_NO_POST
endif
ifeq (${ENABLE_NETGEN},1)
  FLAGS+=/DHAVE_NETGEN
  GMSH_DIRS+=contrib/Netgen
endif
ifeq (${ENABLE_TETGEN},1)
  FLAGS+=/DHAVE_TETGEN
  GMSH_DIRS+=contrib/Tetgen
endif
ifeq (${ENABLE_METIS},1)
  FLAGS+=/DHAVE_METIS
  GMSH_DIRS+=contrib/Metis
endif

ifeq (${ENABLE_BLAS_LAPACK},1)
  FLAGS+=/DHAVE_BLAS /DHAVE_LAPACK
  GMSH_LIBS+=${BLAS_LAPACK_PREFIX}/liblapack.a
  GMSH_LIBS+=${BLAS_LAPACK_PREFIX}/libblas.a
  GMSH_LIBS+=${BLAS_LAPACK_PREFIX}/libg2c.a
  GMSH_LIBS+=${BLAS_LAPACK_PREFIX}/libgcc.a
endif

ifeq (${ENABLE_OCC},1)
  FLAGS+=/DHAVE_OCC /DHAVE_NO_OCC_CONFIG_H /DWNT /I${OCC_PREFIX}/inc
  GMSH_LIBS+=${OCC_PREFIX}/win32/bin/*.lib
endif
ifeq (${ENABLE_MED},1)
  FLAGS+=/DHAVE_MED /I${HDF5_PREFIX}/include /I${MED_PREFIX}/include
  GMSH_LIBS+=${MED_PREFIX}/lib/med.lib
  GMSH_LIBS+=${HDF5_PREFIX}/lib/hdf5.lib ${HDF5_PREFIX}/lib/szlib.lib
endif

ifeq (${ENABLE_GUI},1)
  GMSH_DIRS+=Graphics Fltk contrib/NativeFileChooser contrib/TreeBrowser
  FLAGS+=/DHAVE_FLTK /I${FLTK_PREFIX} /I${FLTK_PREFIX}/FL/images
  FLAGS+=/DHAVE_LIBZ /DHAVE_LIBPNG /DHAVE_LIBJPEG
  FLAGS+=/DHAVE_NATIVE_FILE_CHOOSER /DHAVE_TREE_BROWSER
  GMSH_LIBS+=Fltk/Main.obj lib/*.lib ${FLTK_PREFIX}/lib/fltk*.lib
  GMSH_LIBS+=glu32.lib opengl32.lib advapi32.lib gdi32.lib user32.lib
  GMSH_LIBS+=shell32.lib ole32.lib comctl32.lib comdlg32.lib ws2_32.lib
  GMSH_LIBS+=Fltk/Win32Icon.res
  GMSH_LIBS+=/link /manifest:no /NODEFAULTLIB:msvcrt.lib
  GMSH_LIBS+=/SUBSYSTEM:WINDOWS
else
  GMSH_LIBS+=Common/Main.obj lib/*.lib
  GMSH_LIBS+=ws2_32.lib
  ifeq (${ENABLE_OCC},1)
    GMSH_LIBS+=advapi32.lib user32.lib
  endif
  GMSH_LIBS+=/link /manifest:no /NODEFAULTLIB:msvcrt.lib
endif

# How you create a static library on this machine
AR=LIB
ARFLAGS=/OUT:
RANLIB=echo

# The symbol used in front of compiler flags
DASH=/

# The extension to use for object files, libraries and executables
OBJEXT=.obj
LIBEXT=.lib
EXEEXT=.exe

# Installation directories
prefix="S:\Lib\gmsh"
exec_prefix=${prefix}
bindir=${exec_prefix}\bin
datadir=${datarootdir}
datarootdir=${prefix}\share
includedir=${prefix}\include
libdir=${exec_prefix}\lib
mandir=${datarootdir}\man
infodir=${datarootdir}\info
