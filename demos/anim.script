// A demo script to save mpeg or gif animations of post-processing views

all = GetValue("Animate one view at a time or all views together?

0: one at a time, 1: all together", 1) ;

oldw = General.GraphicsWidth;
General.GraphicsWidth = GetValue("Width of animation?", 640); 

oldh = General.GraphicsHeight;
General.GraphicsHeight = GetValue("Height of animation?", 640) ;

method = GetValue("Animation method?

0: mpeg_encode (MPEG1), 1: mencoder (MPEG4), 2: whirlgif (GIF89)", 0) ;
MPEG_ENCODE = 0;
MENCODER = 1;
WHIRLGIF = 2;

Print.JpegQuality = 100;

If(all)
  For i In {1:PostProcessing.NbViews}
    View[i-1].TimeStep = 0;
  EndFor
  // Use the first view as the reference
  For index In {1:View[0].NbTimeStep}
    Draw;
    If(method == WHIRLGIF)
      Print Sprintf("/tmp/tmp%03g.gif", index);
    EndIf
    If(method == MPEG_ENCODE || method == MENCODER)
      Print Sprintf("/tmp/tmp%03g.jpg", index);
    EndIf
    For i In {1:PostProcessing.NbViews}
      View[i-1].TimeStep++;
    EndFor
  EndFor
EndIf

If(!all)
  // Hide all views
  For i In {1:PostProcessing.NbViews}
    View[i-1].Visible = 0;
    View[i-1].TimeStep = 0;
  EndFor
  index = 0;
  For i In {1:PostProcessing.NbViews}
    // Display view i-1
    View[i-1].Visible = 1;
    // Loop on all solutions in view i-1
    For j In {1:View[i-1].NbTimeStep}
      index++;
      Draw;
      If(method == WHIRLGIF)
        Print Sprintf("/tmp/tmp%03g.gif", index);
      EndIf
      If(method == MPEG_ENCODE || method == MENCODER)
        Print Sprintf("/tmp/tmp%03g.jpg", index);
      EndIf
      View[i-1].TimeStep++;
    EndFor
    View[i-1].Visible = 0;
  EndFor
EndIf

If(method == WHIRLGIF)
  // Call whirlgif
  System "whirlgif -minimize -loop -o /tmp/animation.gif /tmp/tmp*.gif" ;
EndIf

If(method == MENCODER)
  // Call mencoder
  System "mencoder 'mf:///tmp/tmp*.jpg' -mf fps=5 -o /tmp/animation.mpg -ovc lavc -lavcopts vcodec=mpeg4:vhq";
  // System "mencoder 'mf:///tmp/tmp*.jpg' -mf fps=5 -o /tmp/animation.mpg -ovc lavc -lavcopts vcodec=mpeg1video:vhq";
EndIf

If(method == MPEG_ENCODE)
  // create the parameter file for mpeg_encode
  System 'echo "PATTERN          I"                > /tmp/tmp.par' ;
  System 'echo "BASE_FILE_FORMAT JPEG"            >> /tmp/tmp.par' ;
  System 'echo "GOP_SIZE         30"              >> /tmp/tmp.par' ;
  System 'echo "SLICES_PER_FRAME 1"               >> /tmp/tmp.par' ;
  System 'echo "PIXEL            HALF"            >> /tmp/tmp.par' ;
  System 'echo "RANGE            10"              >> /tmp/tmp.par' ;
  System 'echo "PSEARCH_ALG      TWOLEVEL"        >> /tmp/tmp.par' ;
  System 'echo "BSEARCH_ALG      CROSS2"          >> /tmp/tmp.par' ;
  System 'echo "IQSCALE          1"               >> /tmp/tmp.par' ;
  System 'echo "PQSCALE          10"              >> /tmp/tmp.par' ;
  System 'echo "BQSCALE          25"              >> /tmp/tmp.par' ;
  System 'echo "REFERENCE_FRAME  DECODED"         >> /tmp/tmp.par' ;
  System 'echo "OUTPUT      /tmp/animation.mpg"   >> /tmp/tmp.par' ;
  System 'echo "INPUT_CONVERT    *"               >> /tmp/tmp.par' ;
  System 'echo "INPUT_DIR        /tmp"            >> /tmp/tmp.par' ;
  System 'echo "INPUT"                            >> /tmp/tmp.par' ;
  System Sprintf('echo "tmp*.jpg [001-%03g]" >> /tmp/tmp.par', index) ;
  System 'echo "END_INPUT"                        >> /tmp/tmp.par' ;
  // Call mpeg_encode
  System "mpeg_encode /tmp/tmp.par" ;
EndIf

// Clean-up temp files?
cleanup = GetValue("Remove temporary files?

(The final animation has been saved in /tmp/animation.{gif.mpg})", 1);

If(cleanup)
  If(method == WHIRLGIF)
    System "rm -f /tmp/tmp*.gif" ;
  EndIf
  If(method == MPEG_ENCODE || method == MENCODER)
    System "rm -f /tmp/tmp*.jpg /tmp/tmp.par" ;
  EndIf
EndIf

General.GraphicsWidth = oldw;
General.GraphicsHeight = oldh;
