
/*  A Bison parser, made from Gmsh.y
    by GNU Bison version 1.28  */

#define YYBISON 1  /* Identify Bison output.  */

#define	tDOUBLE	257
#define	tSTRING	258
#define	tBIGSTR	259
#define	tEND	260
#define	tAFFECT	261
#define	tDOTS	262
#define	tPi	263
#define	tMPI_Rank	264
#define	tMPI_Size	265
#define	tExp	266
#define	tLog	267
#define	tLog10	268
#define	tSqrt	269
#define	tSin	270
#define	tAsin	271
#define	tCos	272
#define	tAcos	273
#define	tTan	274
#define	tRand	275
#define	tAtan	276
#define	tAtan2	277
#define	tSinh	278
#define	tCosh	279
#define	tTanh	280
#define	tFabs	281
#define	tFloor	282
#define	tCeil	283
#define	tFmod	284
#define	tModulo	285
#define	tHypot	286
#define	tPrintf	287
#define	tSprintf	288
#define	tStrCat	289
#define	tStrPrefix	290
#define	tDraw	291
#define	tPoint	292
#define	tCircle	293
#define	tEllipse	294
#define	tLine	295
#define	tSurface	296
#define	tSpline	297
#define	tVolume	298
#define	tCharacteristic	299
#define	tLength	300
#define	tParametric	301
#define	tElliptic	302
#define	tPlane	303
#define	tRuled	304
#define	tTriangulation	305
#define	tTransfinite	306
#define	tComplex	307
#define	tPhysical	308
#define	tUsing	309
#define	tBump	310
#define	tProgression	311
#define	tPlugin	312
#define	tRotate	313
#define	tTranslate	314
#define	tSymmetry	315
#define	tDilate	316
#define	tExtrude	317
#define	tDuplicata	318
#define	tLoop	319
#define	tRecombine	320
#define	tDelete	321
#define	tCoherence	322
#define	tIntersect	323
#define	tAttractor	324
#define	tLayers	325
#define	tScalarPoint	326
#define	tVectorPoint	327
#define	tTensorPoint	328
#define	tScalarLine	329
#define	tVectorLine	330
#define	tTensorLine	331
#define	tScalarTriangle	332
#define	tVectorTriangle	333
#define	tTensorTriangle	334
#define	tScalarQuadrangle	335
#define	tVectorQuadrangle	336
#define	tTensorQuadrangle	337
#define	tScalarTetrahedron	338
#define	tVectorTetrahedron	339
#define	tTensorTetrahedron	340
#define	tScalarHexahedron	341
#define	tVectorHexahedron	342
#define	tTensorHexahedron	343
#define	tScalarPrism	344
#define	tVectorPrism	345
#define	tTensorPrism	346
#define	tScalarPyramid	347
#define	tVectorPyramid	348
#define	tTensorPyramid	349
#define	tText2D	350
#define	tText3D	351
#define	tCombine	352
#define	tBSpline	353
#define	tBezier	354
#define	tNurbs	355
#define	tOrder	356
#define	tWith	357
#define	tBounds	358
#define	tKnots	359
#define	tColor	360
#define	tColorTable	361
#define	tFor	362
#define	tIn	363
#define	tEndFor	364
#define	tIf	365
#define	tEndIf	366
#define	tExit	367
#define	tReturn	368
#define	tCall	369
#define	tFunction	370
#define	tTrimmed	371
#define	tShow	372
#define	tHide	373
#define	tB_SPLINE_SURFACE_WITH_KNOTS	374
#define	tB_SPLINE_CURVE_WITH_KNOTS	375
#define	tCARTESIAN_POINT	376
#define	tTRUE	377
#define	tFALSE	378
#define	tUNSPECIFIED	379
#define	tU	380
#define	tV	381
#define	tEDGE_CURVE	382
#define	tVERTEX_POINT	383
#define	tORIENTED_EDGE	384
#define	tPLANE	385
#define	tFACE_OUTER_BOUND	386
#define	tEDGE_LOOP	387
#define	tADVANCED_FACE	388
#define	tVECTOR	389
#define	tDIRECTION	390
#define	tAXIS2_PLACEMENT_3D	391
#define	tISO	392
#define	tENDISO	393
#define	tENDSEC	394
#define	tDATA	395
#define	tHEADER	396
#define	tFILE_DESCRIPTION	397
#define	tFILE_SCHEMA	398
#define	tFILE_NAME	399
#define	tMANIFOLD_SOLID_BREP	400
#define	tCLOSED_SHELL	401
#define	tADVANCED_BREP_SHAPE_REPRESENTATION	402
#define	tFACE_BOUND	403
#define	tCYLINDRICAL_SURFACE	404
#define	tCONICAL_SURFACE	405
#define	tCIRCLE	406
#define	tTRIMMED_CURVE	407
#define	tGEOMETRIC_SET	408
#define	tCOMPOSITE_CURVE_SEGMENT	409
#define	tCONTINUOUS	410
#define	tCOMPOSITE_CURVE	411
#define	tTOROIDAL_SURFACE	412
#define	tPRODUCT_DEFINITION	413
#define	tPRODUCT_DEFINITION_SHAPE	414
#define	tSHAPE_DEFINITION_REPRESENTATION	415
#define	tELLIPSE	416
#define	tSolid	417
#define	tEndSolid	418
#define	tVertex	419
#define	tFacet	420
#define	tNormal	421
#define	tOuter	422
#define	tLoopSTL	423
#define	tEndLoop	424
#define	tEndFacet	425
#define	tAFFECTPLUS	426
#define	tAFFECTMINUS	427
#define	tAFFECTTIMES	428
#define	tAFFECTDIVIDE	429
#define	tOR	430
#define	tAND	431
#define	tEQUAL	432
#define	tNOTEQUAL	433
#define	tAPPROXEQUAL	434
#define	tLESSOREQUAL	435
#define	tGREATEROREQUAL	436
#define	tCROSSPRODUCT	437
#define	tPLUSPLUS	438
#define	tMINUSMINUS	439
#define	UNARYPREC	440

#line 1 "Gmsh.y"
 
// $Id: Gmsh.tab.cpp,v 1.180 2004-02-06 17:53:15 geuzaine Exp $
//
// Copyright (C) 1997-2003 C. Geuzaine, J.-F. Remacle
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
// USA.
// 
// Please report all bugs and problems to "gmsh@geuz.org".

#include <stdarg.h>
#include "PluginManager.h"
#include "ParUtil.h"
#include "Gmsh.h"
#include "Numeric.h"
#include "Context.h"
#include "Geo.h"
#include "CAD.h"
#include "DataBase.h"
#include "Mesh.h"
#include "Draw.h"
#include "Create.h"
#include "Views.h"
#include "StepGeomDatabase.h"
#include "Options.h"
#include "Colors.h"
#include "Parser.h"
#include "OpenFile.h"
#include "CommandLine.h"
#include "FunctionManager.h"
#include "ColorTable.h"
#include "Timer.h"
#include "CreateFile.h"
#include "STL.h"
#include "Visibility.h"

Tree_T *Symbol_T = NULL;

extern Context_T CTX;
extern Mesh *THEM;

static fpos_t yyposImbricatedLoopsTab[MAX_OPEN_FILES];
static int yylinenoImbricatedLoopsTab[MAX_OPEN_FILES];
static double LoopControlVariablesTab[MAX_OPEN_FILES][3];
static char *LoopControlVariablesNameTab[MAX_OPEN_FILES];
static char tmpstring[1024];
static Symbol TheSymbol, *pSymbol;
static Surface *STL_Surf;
static Shape TheShape;
static int i, j, k, flag, ImbricatedLoop = 0;
static int Last_NumberOfPoints = 0;
static double d, *pd;
static ExtrudeParams extr;
static char *str;
static StringXString *pStrCat;
static StringXNumber *pNumCat;
static StringXColor *pColCat;
static double (*pNumOpt)(int num, int action, double value);
static char* (*pStrOpt)(int num, int action, char *value);
static unsigned int (*pColOpt)(int num, int action, unsigned int value);
static Post_View *View;

char *strsave (char *ptr);
void yyerror (char *s);
void yymsg (int type, char *fmt, ...);
void skip_until (char *skip, char *until);
int PrintListOfDouble (char *format, List_T *list, char *buffer);

#line 82 "Gmsh.y"
typedef union {
  char *c;
  int i;
  unsigned int u;
  double d;
  double v[5];
  Shape s;
  List_T *l;
} YYSTYPE;
#include <stdio.h>

#ifndef __cplusplus
#ifndef __STDC__
#define const
#endif
#endif



#define	YYFINAL		2323
#define	YYFLAG		-32768
#define	YYNTBASE	206

#define YYTRANSLATE(x) ((unsigned)(x) <= 440 ? yytranslate[x] : 340)

static const short yytranslate[] = {     0,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,   192,     2,   202,     2,   190,     2,     2,   197,
   198,   188,   186,   203,   187,   201,   189,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,   182,
     2,   184,   176,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
   199,     2,   200,   196,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,   204,     2,   205,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     1,     3,     4,     5,     6,
     7,     8,     9,    10,    11,    12,    13,    14,    15,    16,
    17,    18,    19,    20,    21,    22,    23,    24,    25,    26,
    27,    28,    29,    30,    31,    32,    33,    34,    35,    36,
    37,    38,    39,    40,    41,    42,    43,    44,    45,    46,
    47,    48,    49,    50,    51,    52,    53,    54,    55,    56,
    57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
    67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
    77,    78,    79,    80,    81,    82,    83,    84,    85,    86,
    87,    88,    89,    90,    91,    92,    93,    94,    95,    96,
    97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
   107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
   117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
   127,   128,   129,   130,   131,   132,   133,   134,   135,   136,
   137,   138,   139,   140,   141,   142,   143,   144,   145,   146,
   147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
   157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
   167,   168,   169,   170,   171,   172,   173,   174,   175,   177,
   178,   179,   180,   181,   183,   185,   191,   193,   194,   195
};

#if YYDEBUG != 0
static const short yyprhs[] = {     0,
     0,     2,     4,     6,     9,    11,    14,    16,    38,    40,
    41,    44,    46,    48,    50,    53,    56,    59,    62,    65,
    73,    79,    97,   107,   131,   163,   179,   191,   203,   219,
   229,   243,   253,   265,   279,   289,   299,   311,   321,   333,
   343,   355,   369,   383,   395,   409,   427,   437,   449,   461,
   475,   487,   497,   498,   501,   503,   505,   507,   509,   511,
   513,   515,   517,   519,   521,   523,   525,   527,   529,   535,
   543,   550,   559,   560,   563,   566,   569,   572,   575,   578,
   581,   584,   587,   590,   593,   596,   599,   602,   605,   608,
   611,   614,   617,   620,   623,   626,   629,   632,   635,   638,
   640,   644,   645,   659,   661,   665,   666,   680,   682,   686,
   687,   701,   703,   707,   708,   728,   730,   734,   735,   755,
   757,   761,   762,   782,   784,   788,   789,   815,   817,   821,
   822,   848,   850,   854,   855,   881,   883,   887,   888,   920,
   922,   926,   927,   959,   961,   965,   966,   998,  1000,  1004,
  1005,  1037,  1039,  1043,  1044,  1076,  1078,  1082,  1083,  1115,
  1117,  1121,  1122,  1178,  1180,  1184,  1185,  1241,  1243,  1247,
  1248,  1304,  1306,  1310,  1311,  1355,  1357,  1361,  1362,  1406,
  1408,  1412,  1413,  1457,  1459,  1463,  1464,  1502,  1504,  1508,
  1509,  1547,  1549,  1553,  1554,  1592,  1594,  1598,  1599,  1613,
  1615,  1619,  1620,  1636,  1638,  1640,  1642,  1644,  1646,  1648,
  1650,  1655,  1663,  1673,  1680,  1684,  1691,  1698,  1708,  1715,
  1725,  1731,  1740,  1749,  1761,  1768,  1778,  1788,  1798,  1806,
  1815,  1828,  1835,  1843,  1851,  1864,  1872,  1880,  1890,  1908,
  1917,  1926,  1934,  1942,  1954,  1963,  1976,  1985,  2000,  2023,
  2044,  2053,  2062,  2071,  2079,  2088,  2094,  2106,  2112,  2122,
  2124,  2126,  2128,  2129,  2132,  2139,  2146,  2153,  2160,  2165,
  2172,  2177,  2184,  2188,  2194,  2198,  2202,  2207,  2212,  2216,
  2224,  2228,  2236,  2240,  2243,  2246,  2253,  2262,  2271,  2282,
  2284,  2287,  2289,  2293,  2298,  2300,  2309,  2322,  2337,  2338,
  2351,  2352,  2369,  2370,  2389,  2398,  2411,  2426,  2427,  2440,
  2441,  2458,  2459,  2478,  2487,  2500,  2515,  2516,  2529,  2530,
  2547,  2548,  2567,  2569,  2572,  2582,  2590,  2593,  2600,  2610,
  2620,  2629,  2638,  2647,  2654,  2659,  2662,  2665,  2667,  2669,
  2671,  2673,  2675,  2677,  2681,  2684,  2687,  2690,  2694,  2698,
  2702,  2706,  2710,  2714,  2718,  2722,  2726,  2730,  2734,  2738,
  2742,  2746,  2752,  2757,  2762,  2767,  2772,  2777,  2782,  2787,
  2792,  2797,  2802,  2809,  2814,  2819,  2824,  2829,  2834,  2839,
  2846,  2853,  2860,  2865,  2870,  2875,  2880,  2885,  2890,  2895,
  2900,  2905,  2910,  2915,  2922,  2927,  2932,  2937,  2942,  2947,
  2952,  2959,  2966,  2973,  2978,  2980,  2982,  2984,  2986,  2988,
  2993,  2998,  3001,  3007,  3011,  3018,  3023,  3031,  3033,  3036,
  3039,  3043,  3047,  3059,  3069,  3077,  3085,  3086,  3090,  3092,
  3096,  3097,  3101,  3105,  3107,  3111,  3113,  3115,  3119,  3124,
  3128,  3134,  3139,  3141,  3143,  3145,  3149,  3154,  3161,  3169,
  3171,  3173,  3177,  3181,  3191,  3199,  3201,  3207,  3211,  3218,
  3220,  3224,  3226,  3233,  3238,  3243,  3250,  3257
};

static const short yyrhs[] = {   209,
     0,   208,     0,   214,     0,     1,     6,     0,     3,     0,
   187,     3,     0,   163,     0,   166,   167,   207,   207,   207,
   168,   169,   165,   207,   207,   207,   165,   207,   207,   207,
   165,   207,   207,   207,   170,   171,     0,   164,     0,     0,
   209,   210,     0,   211,     0,   213,     0,   212,     0,   138,
     6,     0,   139,     6,     0,   141,     6,     0,   140,     6,
     0,   142,     6,     0,   143,   197,   329,   203,     5,   198,
     6,     0,   144,   197,   329,   198,     6,     0,   145,   197,
     5,   203,     5,   203,   329,   203,   329,   203,     5,   203,
     5,   203,     5,   198,     6,     0,     3,     7,   122,   197,
     5,   203,   327,   198,     6,     0,     3,     7,   121,   197,
     5,   203,   325,   203,   333,   203,   324,   203,   324,   203,
   324,   203,   333,   203,   333,   203,   324,   198,     6,     0,
     3,     7,   120,   197,     5,   203,   325,   203,   325,   203,
   331,   203,   324,   203,   324,   203,   324,   203,   324,   203,
   333,   203,   333,   203,   333,   203,   333,   203,   324,   198,
     6,     0,     3,     7,   128,   197,     5,   203,     3,   203,
     3,   203,     3,   203,   324,   198,     6,     0,     3,     7,
   132,   197,     5,   203,     3,   203,   324,   198,     6,     0,
     3,     7,   149,   197,     5,   203,     3,   203,   324,   198,
     6,     0,     3,     7,   130,   197,     5,   203,   188,   203,
   188,   203,   325,   203,   324,   198,     6,     0,     3,     7,
   133,   197,     5,   203,   333,   198,     6,     0,     3,     7,
   134,   197,     5,   203,   333,   203,     3,   203,   324,   198,
     6,     0,     3,     7,   129,   197,     5,   203,     3,   198,
     6,     0,     3,     7,   135,   197,     5,   203,     3,   203,
   325,   198,     6,     0,     3,     7,   137,   197,     5,   203,
     3,   203,     3,   203,     3,   198,     6,     0,     3,     7,
   136,   197,     5,   203,   327,   198,     6,     0,     3,     7,
   131,   197,     5,   203,     3,   198,     6,     0,     3,     7,
    41,   197,     5,   203,     3,   203,     3,   198,     6,     0,
     3,     7,   147,   197,     5,   203,   333,   198,     6,     0,
     3,     7,   148,   197,     5,   203,   333,   203,     3,   198,
     6,     0,     3,     7,   146,   197,     5,   203,     3,   198,
     6,     0,     3,     7,   150,   197,     5,   203,     3,   203,
   325,   198,     6,     0,     3,     7,   151,   197,     5,   203,
     3,   203,   325,   203,   325,   198,     6,     0,     3,     7,
   158,   197,     5,   203,     3,   203,   325,   203,   325,   198,
     6,     0,     3,     7,   152,   197,     5,   203,     3,   203,
   325,   198,     6,     0,     3,     7,   162,   197,     5,   203,
     3,   203,   325,   203,   325,   198,     6,     0,     3,     7,
   153,   197,     5,   203,     3,   203,   333,   203,   333,   203,
   324,   203,   324,   198,     6,     0,     3,     7,   154,   197,
     5,   203,   333,   198,     6,     0,     3,     7,   155,   197,
   156,   203,   324,   203,     3,   198,     6,     0,     3,     7,
   157,   197,     5,   203,   333,   203,   324,   198,     6,     0,
     3,     7,   159,   197,     5,   203,     5,   203,     3,   203,
     3,   198,     6,     0,     3,     7,   160,   197,     5,   203,
     5,   203,     3,   198,     6,     0,     3,     7,   161,   197,
     3,   203,     3,   198,     6,     0,     0,   214,   215,     0,
   217,     0,   216,     0,   299,     0,   300,     0,   301,     0,
   304,     0,   305,     0,   306,     0,   307,     0,   310,     0,
   322,     0,   323,     0,   309,     0,   308,     0,    33,   197,
     5,   198,     6,     0,    33,   197,     5,   203,   335,   198,
     6,     0,     4,     5,   204,   218,   205,     6,     0,     4,
     5,     4,   327,   204,   218,   205,     6,     0,     0,   218,
   220,     0,   218,   223,     0,   218,   226,     0,   218,   229,
     0,   218,   232,     0,   218,   235,     0,   218,   238,     0,
   218,   241,     0,   218,   244,     0,   218,   247,     0,   218,
   250,     0,   218,   253,     0,   218,   256,     0,   218,   259,
     0,   218,   262,     0,   218,   265,     0,   218,   268,     0,
   218,   271,     0,   218,   274,     0,   218,   277,     0,   218,
   280,     0,   218,   283,     0,   218,   286,     0,   218,   289,
     0,   218,   292,     0,   218,   295,     0,   325,     0,   219,
   203,   325,     0,     0,    72,   197,   325,   203,   325,   203,
   325,   198,   221,   204,   219,   205,     6,     0,   325,     0,
   222,   203,   325,     0,     0,    73,   197,   325,   203,   325,
   203,   325,   198,   224,   204,   222,   205,     6,     0,   325,
     0,   225,   203,   325,     0,     0,    74,   197,   325,   203,
   325,   203,   325,   198,   227,   204,   225,   205,     6,     0,
   325,     0,   228,   203,   325,     0,     0,    75,   197,   325,
   203,   325,   203,   325,   203,   325,   203,   325,   203,   325,
   198,   230,   204,   228,   205,     6,     0,   325,     0,   231,
   203,   325,     0,     0,    76,   197,   325,   203,   325,   203,
   325,   203,   325,   203,   325,   203,   325,   198,   233,   204,
   231,   205,     6,     0,   325,     0,   234,   203,   325,     0,
     0,    77,   197,   325,   203,   325,   203,   325,   203,   325,
   203,   325,   203,   325,   198,   236,   204,   234,   205,     6,
     0,   325,     0,   237,   203,   325,     0,     0,    78,   197,
   325,   203,   325,   203,   325,   203,   325,   203,   325,   203,
   325,   203,   325,   203,   325,   203,   325,   198,   239,   204,
   237,   205,     6,     0,   325,     0,   240,   203,   325,     0,
     0,    79,   197,   325,   203,   325,   203,   325,   203,   325,
   203,   325,   203,   325,   203,   325,   203,   325,   203,   325,
   198,   242,   204,   240,   205,     6,     0,   325,     0,   243,
   203,   325,     0,     0,    80,   197,   325,   203,   325,   203,
   325,   203,   325,   203,   325,   203,   325,   203,   325,   203,
   325,   203,   325,   198,   245,   204,   243,   205,     6,     0,
   325,     0,   246,   203,   325,     0,     0,    81,   197,   325,
   203,   325,   203,   325,   203,   325,   203,   325,   203,   325,
   203,   325,   203,   325,   203,   325,   203,   325,   203,   325,
   203,   325,   198,   248,   204,   246,   205,     6,     0,   325,
     0,   249,   203,   325,     0,     0,    82,   197,   325,   203,
   325,   203,   325,   203,   325,   203,   325,   203,   325,   203,
   325,   203,   325,   203,   325,   203,   325,   203,   325,   203,
   325,   198,   251,   204,   249,   205,     6,     0,   325,     0,
   252,   203,   325,     0,     0,    83,   197,   325,   203,   325,
   203,   325,   203,   325,   203,   325,   203,   325,   203,   325,
   203,   325,   203,   325,   203,   325,   203,   325,   203,   325,
   198,   254,   204,   252,   205,     6,     0,   325,     0,   255,
   203,   325,     0,     0,    84,   197,   325,   203,   325,   203,
   325,   203,   325,   203,   325,   203,   325,   203,   325,   203,
   325,   203,   325,   203,   325,   203,   325,   203,   325,   198,
   257,   204,   255,   205,     6,     0,   325,     0,   258,   203,
   325,     0,     0,    85,   197,   325,   203,   325,   203,   325,
   203,   325,   203,   325,   203,   325,   203,   325,   203,   325,
   203,   325,   203,   325,   203,   325,   203,   325,   198,   260,
   204,   258,   205,     6,     0,   325,     0,   261,   203,   325,
     0,     0,    86,   197,   325,   203,   325,   203,   325,   203,
   325,   203,   325,   203,   325,   203,   325,   203,   325,   203,
   325,   203,   325,   203,   325,   203,   325,   198,   263,   204,
   261,   205,     6,     0,   325,     0,   264,   203,   325,     0,
     0,    87,   197,   325,   203,   325,   203,   325,   203,   325,
   203,   325,   203,   325,   203,   325,   203,   325,   203,   325,
   203,   325,   203,   325,   203,   325,   203,   325,   203,   325,
   203,   325,   203,   325,   203,   325,   203,   325,   203,   325,
   203,   325,   203,   325,   203,   325,   203,   325,   203,   325,
   198,   266,   204,   264,   205,     6,     0,   325,     0,   267,
   203,   325,     0,     0,    88,   197,   325,   203,   325,   203,
   325,   203,   325,   203,   325,   203,   325,   203,   325,   203,
   325,   203,   325,   203,   325,   203,   325,   203,   325,   203,
   325,   203,   325,   203,   325,   203,   325,   203,   325,   203,
   325,   203,   325,   203,   325,   203,   325,   203,   325,   203,
   325,   203,   325,   198,   269,   204,   267,   205,     6,     0,
   325,     0,   270,   203,   325,     0,     0,    89,   197,   325,
   203,   325,   203,   325,   203,   325,   203,   325,   203,   325,
   203,   325,   203,   325,   203,   325,   203,   325,   203,   325,
   203,   325,   203,   325,   203,   325,   203,   325,   203,   325,
   203,   325,   203,   325,   203,   325,   203,   325,   203,   325,
   203,   325,   203,   325,   203,   325,   198,   272,   204,   270,
   205,     6,     0,   325,     0,   273,   203,   325,     0,     0,
    90,   197,   325,   203,   325,   203,   325,   203,   325,   203,
   325,   203,   325,   203,   325,   203,   325,   203,   325,   203,
   325,   203,   325,   203,   325,   203,   325,   203,   325,   203,
   325,   203,   325,   203,   325,   203,   325,   198,   275,   204,
   273,   205,     6,     0,   325,     0,   276,   203,   325,     0,
     0,    91,   197,   325,   203,   325,   203,   325,   203,   325,
   203,   325,   203,   325,   203,   325,   203,   325,   203,   325,
   203,   325,   203,   325,   203,   325,   203,   325,   203,   325,
   203,   325,   203,   325,   203,   325,   203,   325,   198,   278,
   204,   276,   205,     6,     0,   325,     0,   279,   203,   325,
     0,     0,    92,   197,   325,   203,   325,   203,   325,   203,
   325,   203,   325,   203,   325,   203,   325,   203,   325,   203,
   325,   203,   325,   203,   325,   203,   325,   203,   325,   203,
   325,   203,   325,   203,   325,   203,   325,   203,   325,   198,
   281,   204,   279,   205,     6,     0,   325,     0,   282,   203,
   325,     0,     0,    93,   197,   325,   203,   325,   203,   325,
   203,   325,   203,   325,   203,   325,   203,   325,   203,   325,
   203,   325,   203,   325,   203,   325,   203,   325,   203,   325,
   203,   325,   203,   325,   198,   284,   204,   282,   205,     6,
     0,   325,     0,   285,   203,   325,     0,     0,    94,   197,
   325,   203,   325,   203,   325,   203,   325,   203,   325,   203,
   325,   203,   325,   203,   325,   203,   325,   203,   325,   203,
   325,   203,   325,   203,   325,   203,   325,   203,   325,   198,
   287,   204,   285,   205,     6,     0,   325,     0,   288,   203,
   325,     0,     0,    95,   197,   325,   203,   325,   203,   325,
   203,   325,   203,   325,   203,   325,   203,   325,   203,   325,
   203,   325,   203,   325,   203,   325,   203,   325,   203,   325,
   203,   325,   203,   325,   198,   290,   204,   288,   205,     6,
     0,   339,     0,   291,   203,   339,     0,     0,    96,   197,
   325,   203,   325,   203,   325,   198,   293,   204,   291,   205,
     6,     0,   339,     0,   294,   203,   339,     0,     0,    97,
   197,   325,   203,   325,   203,   325,   203,   325,   198,   296,
   204,   294,   205,     6,     0,     7,     0,   172,     0,   173,
     0,   174,     0,   175,     0,   193,     0,   194,     0,     4,
   297,   325,     6,     0,     4,   199,   325,   200,   297,   325,
     6,     0,     4,   199,   204,   335,   205,   200,   297,   333,
     6,     0,     4,   199,   200,     7,   333,     6,     0,     4,
   298,     6,     0,     4,   199,   325,   200,   298,     6,     0,
     4,   201,     4,     7,   339,     6,     0,     4,   199,   325,
   200,   201,     4,     7,   339,     6,     0,     4,   201,     4,
   297,   325,     6,     0,     4,   199,   325,   200,   201,     4,
   297,   325,     6,     0,     4,   201,     4,   298,     6,     0,
     4,   199,   325,   200,   201,     4,   298,     6,     0,     4,
   201,   106,   201,     4,     7,   336,     6,     0,     4,   199,
   325,   200,   201,   106,   201,     4,     7,   336,     6,     0,
     4,   201,   107,     7,   337,     6,     0,     4,   199,   325,
   200,   201,   107,     7,   337,     6,     0,    58,   197,     4,
   198,   201,     4,     7,   325,     6,     0,    58,   197,     4,
   198,   201,     4,     7,   339,     6,     0,    38,   197,   325,
   198,     7,   327,     6,     0,    54,    38,   197,   325,   198,
     7,   333,     6,     0,    70,    38,   333,     7,   204,   325,
   203,   325,   203,   325,   205,     6,     0,    45,    46,   333,
     7,   325,     6,     0,    41,   197,   325,   198,     7,   333,
     6,     0,    43,   197,   325,   198,     7,   333,     6,     0,
    70,    41,   333,     7,   204,   325,   203,   325,   203,   325,
   205,     6,     0,    39,   197,   325,   198,     7,   333,     6,
     0,    40,   197,   325,   198,     7,   333,     6,     0,    39,
   197,   325,   198,     7,   333,    49,   327,     6,     0,    47,
   197,   325,   198,     7,   204,   325,   203,   325,   203,     5,
   203,     5,   203,     5,   205,     6,     0,    54,    41,   197,
   325,   198,     7,   333,     6,     0,    41,    65,   197,   325,
   198,     7,   333,     6,     0,    99,   197,   325,   198,     7,
   333,     6,     0,   100,   197,   325,   198,     7,   333,     6,
     0,   101,   197,   325,   198,     7,   333,   105,   333,   102,
   325,     6,     0,    49,    42,   197,   325,   198,     7,   333,
     6,     0,   117,    42,   197,   325,   198,     7,   204,   325,
   203,   333,   205,     6,     0,    50,    42,   197,   325,   198,
     7,   333,     6,     0,    51,    42,   197,   325,   198,     7,
   197,   325,   203,   325,   198,   333,   333,     6,     0,   101,
    42,   103,   104,   197,   325,   198,     7,   331,   105,   204,
   333,   203,   333,   205,   102,   204,   325,   203,   325,   205,
     6,     0,   101,    42,   197,   325,   198,     7,   331,   105,
   204,   333,   203,   333,   205,   102,   204,   325,   203,   325,
   205,     6,     0,    54,    42,   197,   325,   198,     7,   333,
     6,     0,    42,    65,   197,   325,   198,     7,   333,     6,
     0,    53,    44,   197,   325,   198,     7,   333,     6,     0,
    44,   197,   325,   198,     7,   333,     6,     0,    54,    44,
   197,   325,   198,     7,   333,     6,     0,    60,   327,   204,
   302,   205,     0,    59,   204,   327,   203,   327,   203,   325,
   205,   204,   302,   205,     0,    61,   327,   204,   302,   205,
     0,    62,   204,   327,   203,   325,   205,   204,   302,   205,
     0,   304,     0,   303,     0,   301,     0,     0,   303,   300,
     0,   303,    38,   204,   335,   205,     6,     0,   303,    41,
   204,   335,   205,     6,     0,   303,    42,   204,   335,   205,
     6,     0,   303,    44,   204,   335,   205,     6,     0,    64,
   204,   303,   205,     0,    64,     4,   199,   325,   200,     6,
     0,    67,   204,   303,   205,     0,    67,     4,   199,   325,
   200,     6,     0,    67,     4,     6,     0,   106,   336,   204,
   303,   205,     0,   118,   339,     6,     0,   119,   339,     6,
     0,   118,   204,   303,   205,     0,   119,   204,   303,   205,
     0,     4,   339,     6,     0,     4,     4,   199,   325,   200,
   339,     6,     0,     4,   325,     6,     0,    58,   197,     4,
   198,   201,     4,     6,     0,    98,     4,     6,     0,   113,
     6,     0,    37,     6,     0,   108,   197,   325,     8,   325,
   198,     0,   108,   197,   325,     8,   325,     8,   325,   198,
     0,   108,     4,   109,   204,   325,     8,   325,   205,     0,
   108,     4,   109,   204,   325,     8,   325,     8,   325,   205,
     0,   110,     0,   116,     4,     0,   114,     0,   115,     4,
     6,     0,   111,   197,   325,   198,     0,   112,     0,    63,
    38,   204,   325,   203,   327,   205,     6,     0,    63,    38,
   204,   325,   203,   327,   203,   327,   203,   325,   205,     6,
     0,    63,    38,   204,   325,   203,   327,   203,   327,   203,
   327,   203,   325,   205,     6,     0,     0,    63,    38,   204,
   325,   203,   327,   205,   311,   204,   320,   205,     6,     0,
     0,    63,    38,   204,   325,   203,   327,   203,   327,   203,
   325,   205,   312,   204,   320,   205,     6,     0,     0,    63,
    38,   204,   325,   203,   327,   203,   327,   203,   327,   203,
   325,   205,   313,   204,   320,   205,     6,     0,    63,    41,
   204,   325,   203,   327,   205,     6,     0,    63,    41,   204,
   325,   203,   327,   203,   327,   203,   325,   205,     6,     0,
    63,    41,   204,   325,   203,   327,   203,   327,   203,   327,
   203,   325,   205,     6,     0,     0,    63,    41,   204,   325,
   203,   327,   205,   314,   204,   320,   205,     6,     0,     0,
    63,    41,   204,   325,   203,   327,   203,   327,   203,   325,
   205,   315,   204,   320,   205,     6,     0,     0,    63,    41,
   204,   325,   203,   327,   203,   327,   203,   327,   203,   325,
   205,   316,   204,   320,   205,     6,     0,    63,    42,   204,
   325,   203,   327,   205,     6,     0,    63,    42,   204,   325,
   203,   327,   203,   327,   203,   325,   205,     6,     0,    63,
    42,   204,   325,   203,   327,   203,   327,   203,   327,   203,
   325,   205,     6,     0,     0,    63,    42,   204,   325,   203,
   327,   205,   317,   204,   320,   205,     6,     0,     0,    63,
    42,   204,   325,   203,   327,   203,   327,   203,   325,   205,
   318,   204,   320,   205,     6,     0,     0,    63,    42,   204,
   325,   203,   327,   203,   327,   203,   327,   203,   325,   205,
   319,   204,   320,   205,     6,     0,   321,     0,   320,   321,
     0,    71,   204,   333,   203,   333,   203,   333,   205,     6,
     0,    71,   204,   333,   203,   333,   205,     6,     0,    66,
     6,     0,    52,    41,   333,     7,   325,     6,     0,    52,
    41,   333,     7,   325,    55,    57,   325,     6,     0,    52,
    41,   333,     7,   325,    55,    56,   325,     6,     0,    52,
    42,   204,   325,   205,     7,   333,     6,     0,    48,    42,
   204,   325,   205,     7,   333,     6,     0,    52,    44,   204,
   325,   205,     7,   333,     6,     0,    66,    42,   333,     7,
   325,     6,     0,    66,    42,   333,     6,     0,    68,     6,
     0,    69,     6,     0,   123,     0,   124,     0,   125,     0,
   126,     0,   127,     0,   326,     0,   197,   325,   198,     0,
   187,   325,     0,   186,   325,     0,   192,   325,     0,   325,
   187,   325,     0,   325,   186,   325,     0,   325,   188,   325,
     0,   325,   189,   325,     0,   325,   190,   325,     0,   325,
   196,   325,     0,   325,   182,   325,     0,   325,   184,   325,
     0,   325,   183,   325,     0,   325,   185,   325,     0,   325,
   179,   325,     0,   325,   180,   325,     0,   325,   178,   325,
     0,   325,   177,   325,     0,   325,   176,   325,     8,   325,
     0,    12,   197,   325,   198,     0,    13,   197,   325,   198,
     0,    14,   197,   325,   198,     0,    15,   197,   325,   198,
     0,    16,   197,   325,   198,     0,    17,   197,   325,   198,
     0,    18,   197,   325,   198,     0,    19,   197,   325,   198,
     0,    20,   197,   325,   198,     0,    22,   197,   325,   198,
     0,    23,   197,   325,   203,   325,   198,     0,    24,   197,
   325,   198,     0,    25,   197,   325,   198,     0,    26,   197,
   325,   198,     0,    27,   197,   325,   198,     0,    28,   197,
   325,   198,     0,    29,   197,   325,   198,     0,    30,   197,
   325,   203,   325,   198,     0,    31,   197,   325,   203,   325,
   198,     0,    32,   197,   325,   203,   325,   198,     0,    21,
   197,   325,   198,     0,    12,   199,   325,   200,     0,    13,
   199,   325,   200,     0,    14,   199,   325,   200,     0,    15,
   199,   325,   200,     0,    16,   199,   325,   200,     0,    17,
   199,   325,   200,     0,    18,   199,   325,   200,     0,    19,
   199,   325,   200,     0,    20,   199,   325,   200,     0,    22,
   199,   325,   200,     0,    23,   199,   325,   203,   325,   200,
     0,    24,   199,   325,   200,     0,    25,   199,   325,   200,
     0,    26,   199,   325,   200,     0,    27,   199,   325,   200,
     0,    28,   199,   325,   200,     0,    29,   199,   325,   200,
     0,    30,   199,   325,   203,   325,   200,     0,    31,   199,
   325,   203,   325,   200,     0,    32,   199,   325,   203,   325,
   200,     0,    21,   199,   325,   200,     0,     3,     0,     9,
     0,    10,     0,    11,     0,     4,     0,     4,   199,   325,
   200,     0,   202,     4,   199,   200,     0,     4,   298,     0,
     4,   199,   325,   200,   298,     0,     4,   201,     4,     0,
     4,   199,   325,   200,   201,     4,     0,     4,   201,     4,
   298,     0,     4,   199,   325,   200,   201,     4,   298,     0,
   328,     0,   187,   327,     0,   186,   327,     0,   327,   187,
   327,     0,   327,   186,   327,     0,   204,   325,   203,   325,
   203,   325,   203,   325,   203,   325,   205,     0,   204,   325,
   203,   325,   203,   325,   203,   325,   205,     0,   204,   325,
   203,   325,   203,   325,   205,     0,   197,   325,   203,   325,
   203,   325,   198,     0,     0,   197,   330,   198,     0,     5,
     0,   330,   203,     5,     0,     0,   204,   332,   205,     0,
   197,   332,   198,     0,   333,     0,   332,   203,   333,     0,
   325,     0,   334,     0,   204,   335,   205,     0,   187,   204,
   335,   205,     0,   325,     8,   325,     0,   325,     8,   325,
     8,   325,     0,    38,   204,   325,   205,     0,   301,     0,
   304,     0,   310,     0,     4,   199,   200,     0,   187,     4,
   199,   200,     0,     4,   199,   204,   335,   205,   200,     0,
   187,     4,   199,   204,   335,   205,   200,     0,   325,     0,
   334,     0,   335,   203,   325,     0,   335,   203,   334,     0,
   204,   325,   203,   325,   203,   325,   203,   325,   205,     0,
   204,   325,   203,   325,   203,   325,   205,     0,     4,     0,
     4,   201,   106,   201,     4,     0,   204,   338,   205,     0,
     4,   199,   325,   200,   201,   107,     0,   336,     0,   338,
   203,   336,     0,     5,     0,    35,   197,   339,   203,   339,
   198,     0,    36,   197,   339,   198,     0,    34,   197,   339,
   198,     0,    34,   197,   339,   203,   335,   198,     0,    34,
   197,     4,   201,     4,   198,     0,    34,   197,     4,   199,
   325,   200,   201,     4,   198,     0
};

#endif

#if YYDEBUG != 0
static const short yyrline[] = { 0,
   167,   169,   170,   171,   176,   178,   181,   189,   203,   213,
   215,   218,   220,   221,   224,   230,   235,   236,   237,   240,
   244,   247,   253,   258,   264,   272,   277,   281,   287,   292,
   296,   301,   305,   308,   313,   317,   321,   325,   330,   334,
   337,   341,   345,   349,   353,   357,   361,   364,   368,   371,
   375,   378,   385,   389,   395,   397,   398,   399,   400,   401,
   402,   403,   404,   405,   406,   407,   408,   409,   412,   417,
   432,   437,   443,   448,   449,   450,   451,   452,   453,   454,
   455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
   465,   466,   467,   468,   469,   470,   471,   472,   473,   476,
   479,   483,   489,   495,   498,   502,   508,   514,   517,   521,
   527,   533,   536,   540,   548,   554,   557,   561,   569,   575,
   578,   582,   590,   596,   599,   603,   615,   621,   624,   628,
   640,   646,   649,   653,   665,   671,   674,   678,   691,   697,
   700,   704,   717,   723,   726,   730,   743,   749,   752,   756,
   769,   775,   778,   782,   795,   801,   804,   808,   821,   827,
   830,   834,   857,   863,   866,   870,   893,   899,   902,   906,
   929,   935,   938,   942,   960,   966,   969,   973,   991,   997,
  1000,  1004,  1022,  1028,  1031,  1035,  1052,  1058,  1061,  1065,
  1082,  1088,  1091,  1095,  1112,  1118,  1124,  1131,  1139,  1145,
  1151,  1158,  1166,  1175,  1177,  1178,  1179,  1180,  1183,  1185,
  1188,  1219,  1253,  1300,  1315,  1324,  1339,  1351,  1365,  1388,
  1412,  1424,  1438,  1450,  1464,  1484,  1506,  1516,  1530,  1541,
  1547,  1566,  1580,  1586,  1592,  1611,  1617,  1623,  1639,  1646,
  1652,  1658,  1669,  1680,  1705,  1711,  1730,  1752,  1758,  1766,
  1772,  1778,  1787,  1793,  1799,  1809,  1815,  1820,  1825,  1832,
  1834,  1835,  1838,  1843,  1847,  1861,  1875,  1889,  1907,  1918,
  1928,  1936,  1940,  1949,  1961,  1969,  1974,  1983,  1994,  2030,
  2043,  2060,  2069,  2078,  2082,  2102,  2114,  2124,  2145,  2166,
  2187,  2193,  2198,  2203,  2207,  2215,  2228,  2238,  2248,  2253,
  2263,  2268,  2278,  2283,  2295,  2312,  2329,  2346,  2351,  2368,
  2373,  2390,  2395,  2415,  2431,  2447,  2463,  2468,  2485,  2491,
  2508,  2514,  2533,  2537,  2542,  2569,  2593,  2601,  2620,  2638,
  2656,  2678,  2699,  2720,  2734,  2753,  2758,  2767,  2769,  2770,
  2771,  2772,  2775,  2777,  2778,  2779,  2780,  2781,  2782,  2783,
  2784,  2791,  2792,  2793,  2794,  2795,  2796,  2797,  2798,  2799,
  2800,  2801,  2802,  2803,  2804,  2805,  2806,  2807,  2808,  2809,
  2810,  2811,  2812,  2813,  2814,  2815,  2816,  2817,  2818,  2819,
  2820,  2821,  2822,  2824,  2825,  2826,  2827,  2828,  2829,  2830,
  2831,  2832,  2833,  2834,  2835,  2836,  2837,  2838,  2839,  2840,
  2841,  2842,  2843,  2844,  2849,  2854,  2855,  2856,  2860,  2871,
  2888,  2900,  2911,  2930,  2946,  2962,  2978,  2995,  3000,  3004,
  3008,  3012,  3018,  3023,  3027,  3031,  3037,  3041,  3046,  3050,
  3055,  3059,  3063,  3069,  3075,  3082,  3088,  3092,  3096,  3106,
  3113,  3124,  3144,  3153,  3162,  3173,  3187,  3203,  3223,  3247,
  3253,  3257,  3261,  3272,  3277,  3288,  3293,  3311,  3316,  3329,
  3335,  3341,  3346,  3354,  3367,  3371,  3389,  3403
};
#endif


#if YYDEBUG != 0 || defined (YYERROR_VERBOSE)

static const char * const yytname[] = {   "$","error","$undefined.","tDOUBLE",
"tSTRING","tBIGSTR","tEND","tAFFECT","tDOTS","tPi","tMPI_Rank","tMPI_Size","tExp",
"tLog","tLog10","tSqrt","tSin","tAsin","tCos","tAcos","tTan","tRand","tAtan",
"tAtan2","tSinh","tCosh","tTanh","tFabs","tFloor","tCeil","tFmod","tModulo",
"tHypot","tPrintf","tSprintf","tStrCat","tStrPrefix","tDraw","tPoint","tCircle",
"tEllipse","tLine","tSurface","tSpline","tVolume","tCharacteristic","tLength",
"tParametric","tElliptic","tPlane","tRuled","tTriangulation","tTransfinite",
"tComplex","tPhysical","tUsing","tBump","tProgression","tPlugin","tRotate","tTranslate",
"tSymmetry","tDilate","tExtrude","tDuplicata","tLoop","tRecombine","tDelete",
"tCoherence","tIntersect","tAttractor","tLayers","tScalarPoint","tVectorPoint",
"tTensorPoint","tScalarLine","tVectorLine","tTensorLine","tScalarTriangle","tVectorTriangle",
"tTensorTriangle","tScalarQuadrangle","tVectorQuadrangle","tTensorQuadrangle",
"tScalarTetrahedron","tVectorTetrahedron","tTensorTetrahedron","tScalarHexahedron",
"tVectorHexahedron","tTensorHexahedron","tScalarPrism","tVectorPrism","tTensorPrism",
"tScalarPyramid","tVectorPyramid","tTensorPyramid","tText2D","tText3D","tCombine",
"tBSpline","tBezier","tNurbs","tOrder","tWith","tBounds","tKnots","tColor","tColorTable",
"tFor","tIn","tEndFor","tIf","tEndIf","tExit","tReturn","tCall","tFunction",
"tTrimmed","tShow","tHide","tB_SPLINE_SURFACE_WITH_KNOTS","tB_SPLINE_CURVE_WITH_KNOTS",
"tCARTESIAN_POINT","tTRUE","tFALSE","tUNSPECIFIED","tU","tV","tEDGE_CURVE","tVERTEX_POINT",
"tORIENTED_EDGE","tPLANE","tFACE_OUTER_BOUND","tEDGE_LOOP","tADVANCED_FACE",
"tVECTOR","tDIRECTION","tAXIS2_PLACEMENT_3D","tISO","tENDISO","tENDSEC","tDATA",
"tHEADER","tFILE_DESCRIPTION","tFILE_SCHEMA","tFILE_NAME","tMANIFOLD_SOLID_BREP",
"tCLOSED_SHELL","tADVANCED_BREP_SHAPE_REPRESENTATION","tFACE_BOUND","tCYLINDRICAL_SURFACE",
"tCONICAL_SURFACE","tCIRCLE","tTRIMMED_CURVE","tGEOMETRIC_SET","tCOMPOSITE_CURVE_SEGMENT",
"tCONTINUOUS","tCOMPOSITE_CURVE","tTOROIDAL_SURFACE","tPRODUCT_DEFINITION","tPRODUCT_DEFINITION_SHAPE",
"tSHAPE_DEFINITION_REPRESENTATION","tELLIPSE","tSolid","tEndSolid","tVertex",
"tFacet","tNormal","tOuter","tLoopSTL","tEndLoop","tEndFacet","tAFFECTPLUS",
"tAFFECTMINUS","tAFFECTTIMES","tAFFECTDIVIDE","'?'","tOR","tAND","tEQUAL","tNOTEQUAL",
"tAPPROXEQUAL","'<'","tLESSOREQUAL","'>'","tGREATEROREQUAL","'+'","'-'","'*'",
"'/'","'%'","tCROSSPRODUCT","'!'","tPLUSPLUS","tMINUSMINUS","UNARYPREC","'^'",
"'('","')'","'['","']'","'.'","'#'","','","'{'","'}'","All","SignedDouble","STLFormatItem",
"StepFormatItems","StepFormatItem","StepSpecial","StepHeaderItem","StepDataItem",
"GeomFormatList","GeomFormat","Printf","View","Views","ScalarPointValues","ScalarPoint",
"@1","VectorPointValues","VectorPoint","@2","TensorPointValues","TensorPoint",
"@3","ScalarLineValues","ScalarLine","@4","VectorLineValues","VectorLine","@5",
"TensorLineValues","TensorLine","@6","ScalarTriangleValues","ScalarTriangle",
"@7","VectorTriangleValues","VectorTriangle","@8","TensorTriangleValues","TensorTriangle",
"@9","ScalarQuadrangleValues","ScalarQuadrangle","@10","VectorQuadrangleValues",
"VectorQuadrangle","@11","TensorQuadrangleValues","TensorQuadrangle","@12","ScalarTetrahedronValues",
"ScalarTetrahedron","@13","VectorTetrahedronValues","VectorTetrahedron","@14",
"TensorTetrahedronValues","TensorTetrahedron","@15","ScalarHexahedronValues",
"ScalarHexahedron","@16","VectorHexahedronValues","VectorHexahedron","@17","TensorHexahedronValues",
"TensorHexahedron","@18","ScalarPrismValues","ScalarPrism","@19","VectorPrismValues",
"VectorPrism","@20","TensorPrismValues","TensorPrism","@21","ScalarPyramidValues",
"ScalarPyramid","@22","VectorPyramidValues","VectorPyramid","@23","TensorPyramidValues",
"TensorPyramid","@24","Text2DValues","Text2D","@25","Text3DValues","Text3D",
"@26","NumericAffectation","NumericIncrement","Affectation","Shape","Transform",
"MultipleShape","ListOfShapes","Duplicata","Delete","Colorify","Visibility",
"Command","Loop","Extrude","@27","@28","@29","@30","@31","@32","@33","@34","@35",
"ExtrudeParameters","ExtrudeParameter","Transfini","Coherence","BoolExpr","FExpr",
"FExpr_Single","VExpr","VExpr_Single","ListOfStrings","RecursiveListOfStrings",
"ListOfListOfDouble","RecursiveListOfListOfDouble","ListOfDouble","FExpr_Multi",
"RecursiveListOfDouble","ColorExpr","ListOfColor","RecursiveListOfColor","StringExpr", NULL
};
#endif

static const short yyr1[] = {     0,
   206,   206,   206,   206,   207,   207,   208,   208,   208,   209,
   209,   210,   210,   210,   211,   211,   211,   211,   211,   212,
   212,   212,   213,   213,   213,   213,   213,   213,   213,   213,
   213,   213,   213,   213,   213,   213,   213,   213,   213,   213,
   213,   213,   213,   213,   213,   213,   213,   213,   213,   213,
   213,   213,   214,   214,   215,   215,   215,   215,   215,   215,
   215,   215,   215,   215,   215,   215,   215,   215,   216,   216,
   217,   217,   218,   218,   218,   218,   218,   218,   218,   218,
   218,   218,   218,   218,   218,   218,   218,   218,   218,   218,
   218,   218,   218,   218,   218,   218,   218,   218,   218,   219,
   219,   221,   220,   222,   222,   224,   223,   225,   225,   227,
   226,   228,   228,   230,   229,   231,   231,   233,   232,   234,
   234,   236,   235,   237,   237,   239,   238,   240,   240,   242,
   241,   243,   243,   245,   244,   246,   246,   248,   247,   249,
   249,   251,   250,   252,   252,   254,   253,   255,   255,   257,
   256,   258,   258,   260,   259,   261,   261,   263,   262,   264,
   264,   266,   265,   267,   267,   269,   268,   270,   270,   272,
   271,   273,   273,   275,   274,   276,   276,   278,   277,   279,
   279,   281,   280,   282,   282,   284,   283,   285,   285,   287,
   286,   288,   288,   290,   289,   291,   291,   293,   292,   294,
   294,   296,   295,   297,   297,   297,   297,   297,   298,   298,
   299,   299,   299,   299,   299,   299,   299,   299,   299,   299,
   299,   299,   299,   299,   299,   299,   299,   299,   300,   300,
   300,   300,   300,   300,   300,   300,   300,   300,   300,   300,
   300,   300,   300,   300,   300,   300,   300,   300,   300,   300,
   300,   300,   300,   300,   300,   301,   301,   301,   301,   302,
   302,   302,   303,   303,   303,   303,   303,   303,   304,   304,
   305,   305,   305,   306,   307,   307,   307,   307,   308,   308,
   308,   308,   308,   308,   308,   309,   309,   309,   309,   309,
   309,   309,   309,   309,   309,   310,   310,   310,   311,   310,
   312,   310,   313,   310,   310,   310,   310,   314,   310,   315,
   310,   316,   310,   310,   310,   310,   317,   310,   318,   310,
   319,   310,   320,   320,   321,   321,   321,   322,   322,   322,
   322,   322,   322,   322,   322,   323,   323,   324,   324,   324,
   324,   324,   325,   325,   325,   325,   325,   325,   325,   325,
   325,   325,   325,   325,   325,   325,   325,   325,   325,   325,
   325,   325,   325,   325,   325,   325,   325,   325,   325,   325,
   325,   325,   325,   325,   325,   325,   325,   325,   325,   325,
   325,   325,   325,   325,   325,   325,   325,   325,   325,   325,
   325,   325,   325,   325,   325,   325,   325,   325,   325,   325,
   325,   325,   325,   325,   326,   326,   326,   326,   326,   326,
   326,   326,   326,   326,   326,   326,   326,   327,   327,   327,
   327,   327,   328,   328,   328,   328,   329,   329,   330,   330,
   331,   331,   331,   332,   332,   333,   333,   333,   333,   334,
   334,   334,   334,   334,   334,   334,   334,   334,   334,   335,
   335,   335,   335,   336,   336,   336,   336,   337,   337,   338,
   338,   339,   339,   339,   339,   339,   339,   339
};

static const short yyr2[] = {     0,
     1,     1,     1,     2,     1,     2,     1,    21,     1,     0,
     2,     1,     1,     1,     2,     2,     2,     2,     2,     7,
     5,    17,     9,    23,    31,    15,    11,    11,    15,     9,
    13,     9,    11,    13,     9,     9,    11,     9,    11,     9,
    11,    13,    13,    11,    13,    17,     9,    11,    11,    13,
    11,     9,     0,     2,     1,     1,     1,     1,     1,     1,
     1,     1,     1,     1,     1,     1,     1,     1,     5,     7,
     6,     8,     0,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     1,
     3,     0,    13,     1,     3,     0,    13,     1,     3,     0,
    13,     1,     3,     0,    19,     1,     3,     0,    19,     1,
     3,     0,    19,     1,     3,     0,    25,     1,     3,     0,
    25,     1,     3,     0,    25,     1,     3,     0,    31,     1,
     3,     0,    31,     1,     3,     0,    31,     1,     3,     0,
    31,     1,     3,     0,    31,     1,     3,     0,    31,     1,
     3,     0,    55,     1,     3,     0,    55,     1,     3,     0,
    55,     1,     3,     0,    43,     1,     3,     0,    43,     1,
     3,     0,    43,     1,     3,     0,    37,     1,     3,     0,
    37,     1,     3,     0,    37,     1,     3,     0,    13,     1,
     3,     0,    15,     1,     1,     1,     1,     1,     1,     1,
     4,     7,     9,     6,     3,     6,     6,     9,     6,     9,
     5,     8,     8,    11,     6,     9,     9,     9,     7,     8,
    12,     6,     7,     7,    12,     7,     7,     9,    17,     8,
     8,     7,     7,    11,     8,    12,     8,    14,    22,    20,
     8,     8,     8,     7,     8,     5,    11,     5,     9,     1,
     1,     1,     0,     2,     6,     6,     6,     6,     4,     6,
     4,     6,     3,     5,     3,     3,     4,     4,     3,     7,
     3,     7,     3,     2,     2,     6,     8,     8,    10,     1,
     2,     1,     3,     4,     1,     8,    12,    14,     0,    12,
     0,    16,     0,    18,     8,    12,    14,     0,    12,     0,
    16,     0,    18,     8,    12,    14,     0,    12,     0,    16,
     0,    18,     1,     2,     9,     7,     2,     6,     9,     9,
     8,     8,     8,     6,     4,     2,     2,     1,     1,     1,
     1,     1,     1,     3,     2,     2,     2,     3,     3,     3,
     3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
     3,     5,     4,     4,     4,     4,     4,     4,     4,     4,
     4,     4,     6,     4,     4,     4,     4,     4,     4,     6,
     6,     6,     4,     4,     4,     4,     4,     4,     4,     4,
     4,     4,     4,     6,     4,     4,     4,     4,     4,     4,
     6,     6,     6,     4,     1,     1,     1,     1,     1,     4,
     4,     2,     5,     3,     6,     4,     7,     1,     2,     2,
     3,     3,    11,     9,     7,     7,     0,     3,     1,     3,
     0,     3,     3,     1,     3,     1,     1,     3,     4,     3,
     5,     4,     1,     1,     1,     3,     4,     6,     7,     1,
     1,     3,     3,     9,     7,     1,     5,     3,     6,     1,
     3,     1,     6,     4,     4,     6,     6,     9
};

static const short yydefact[] = {     0,
     0,     7,     9,     0,     2,     1,     3,     4,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,    11,    12,
    14,    13,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,   290,
     0,   295,     0,   292,     0,     0,     0,     0,     0,    54,
    56,    55,    57,    58,    59,    60,    61,    62,    63,    68,
    67,    64,    65,    66,     5,     0,     0,     0,    15,    16,
    18,    17,    19,   427,   427,     0,   405,   409,   462,   204,
   406,   407,   408,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   205,   206,   207,
   208,     0,     0,     0,   209,   210,     0,     0,     0,     0,
     0,     0,     0,   343,     0,     0,   285,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,   418,     0,     0,     0,
     0,     0,     0,   263,     0,     0,   263,   336,   337,     0,
     0,     0,     0,     0,     0,     0,   456,     0,     0,     0,
     0,     0,   284,     0,   291,     0,   462,   263,     0,   263,
     0,     6,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,   412,
     0,    73,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   409,   346,   345,
   347,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   215,   281,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   279,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   409,     0,     0,
     0,   443,   444,   445,   436,     0,   437,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   420,   419,     0,     0,     0,     0,   263,   263,
     0,     0,     0,     0,     0,     0,     0,   273,     0,     0,
     0,     0,   283,     0,     0,     0,     0,     0,     0,     0,
   263,     0,     0,     0,   293,     0,     0,   275,     0,   276,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   429,     0,     0,     0,     0,     0,   414,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   344,     0,     0,
   450,   451,     0,     0,   204,     0,     0,     0,     0,     0,
   211,     0,   361,   360,   358,   359,   354,   356,   355,   357,
   349,   348,   350,   351,   352,   353,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,   409,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   422,   421,   262,     0,   261,   260,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,   269,   264,   335,     0,
     0,   271,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   294,     0,   277,   278,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,   428,
     0,     0,    21,     0,   410,   416,    73,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,    74,    75,    76,    77,    78,    79,
    80,    81,    82,    83,    84,    85,    86,    87,    88,    89,
    90,    91,    92,    93,    94,    95,    96,    97,    98,    99,
   363,   384,   364,   385,   365,   386,   366,   387,   367,   388,
   368,   389,   369,   390,   370,   391,   371,   392,   383,   404,
   372,   393,     0,     0,   374,   395,   375,   396,   376,   397,
   377,   398,   378,   399,   379,   400,     0,     0,     0,     0,
     0,     0,     0,     0,   465,     0,     0,   464,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   221,     0,     0,
     0,     0,   411,     0,    69,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   446,     0,     0,     0,     0,   438,
   440,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,   256,
   258,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   274,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,   430,     0,   427,     0,
   413,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,    71,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   410,   214,   452,   453,     0,     0,     0,     0,
     0,   216,   217,   219,     0,     0,   460,     0,   225,   362,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   442,   447,     0,   439,     0,   232,     0,     0,     0,     0,
     0,   328,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,   270,     0,
     0,     0,     0,   334,   272,     0,     0,     0,     0,     0,
   431,     0,   457,     0,     0,     0,   286,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   338,   339,   340,   341,   342,     0,     0,     0,
     0,     0,     0,     0,    20,     0,   415,   280,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   373,   394,   380,   401,   381,
   402,   382,   403,     0,   467,   466,   463,     0,   204,     0,
     0,     0,     0,   212,     0,     0,     0,   458,    70,   229,
   236,     0,   237,     0,   233,     0,   234,   254,     0,     0,
   441,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   282,     0,     0,     0,     0,
   263,     0,   299,     0,   308,     0,   317,     0,     0,     0,
     0,     0,     0,   242,   243,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   427,   417,    72,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,   222,     0,
     0,   223,     0,   461,     0,   241,   252,   448,     0,     0,
   332,   245,   247,     0,     0,     0,   331,   333,   253,   230,
   240,   251,   255,     0,     0,     0,   426,     0,   425,     0,
     0,   296,     0,     0,   305,     0,     0,   314,     0,   265,
   266,   267,   268,     0,     0,   431,     0,   434,     0,     0,
     0,     0,   455,     0,   288,   287,     0,     0,     0,     0,
     0,    23,     0,    32,     0,    36,     0,    30,     0,     0,
    35,     0,    40,    38,     0,     0,     0,     0,     0,     0,
    47,     0,     0,     0,     0,     0,    52,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,   213,   218,   220,     0,
   226,     0,   238,   449,     0,     0,   330,   329,   227,   228,
   263,     0,   259,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   433,     0,   432,     0,     0,     0,     0,     0,
     0,     0,   431,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,   468,
     0,   459,     0,     0,     0,     0,   424,     0,     0,     0,
     0,     0,     0,     0,     0,   323,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   435,     0,     0,   454,   289,
     0,     0,    37,     0,     0,     0,     0,    27,     0,    33,
     0,    39,    28,    41,     0,    44,     0,    48,    49,     0,
     0,    51,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   224,     0,     0,   257,     0,     0,   301,     0,   327,     0,
     0,   324,   310,     0,     0,   319,     0,     0,     0,     0,
     0,     0,   244,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   102,   106,   110,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   198,     0,     0,     0,   423,   297,     0,     0,     0,
   300,   306,     0,     0,   309,   315,     0,     0,   318,   231,
   235,     0,     0,   246,     0,     0,     0,     0,     0,    31,
    34,    42,     0,    43,    50,    45,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,   303,     0,     0,   312,
     0,   321,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,   202,     0,   248,     0,
   298,     0,     0,     0,   307,     0,     0,   316,     0,     0,
     0,     0,     0,     0,    26,    29,     0,     0,     0,   100,
     0,   104,     0,   108,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,   196,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   302,     0,     0,   326,   311,
     0,   320,     0,     0,     0,     0,     0,     0,    46,    22,
   101,   103,   105,   107,   109,   111,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   197,   199,     0,
   200,   239,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   114,   118,   122,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   304,   325,   313,   322,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   201,   203,     0,     0,     8,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   250,     0,     0,     0,   112,     0,   116,
     0,   120,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   249,     0,    24,
   113,   115,   117,   119,   121,   123,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   126,   130,   134,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   124,     0,   128,     0,   132,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,   125,   127,   129,   131,
   133,   135,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,   138,   142,
   146,   150,   154,   158,     0,     0,     0,     0,     0,     0,
     0,     0,     0,    25,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   136,     0,   140,     0,   144,
     0,   148,     0,   152,     0,   156,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,   137,   139,   141,   143,
   145,   147,   149,   151,   153,   155,   157,   159,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   186,   190,   194,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   184,     0,   188,     0,   192,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   185,   187,   189,   191,   193,   195,
     0,     0,     0,   174,   178,   182,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   172,     0,   176,     0,   180,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,   173,
   175,   177,   179,   181,   183,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   162,   166,   170,     0,     0,     0,     0,
     0,     0,     0,   160,     0,   164,     0,   168,     0,     0,
     0,     0,     0,     0,   161,   163,   165,   167,   169,   171,
     0,     0,     0
};

static const short yydefgoto[] = {  2321,
    87,     5,     6,    19,    20,    21,    22,     7,    70,    71,
    72,   440,  1639,   655,  1548,  1641,   656,  1549,  1643,   657,
  1550,  1857,   658,  1804,  1859,   659,  1805,  1861,   660,  1806,
  1993,   661,  1955,  1995,   662,  1956,  1997,   663,  1957,  2105,
   664,  2075,  2107,   665,  2076,  2109,   666,  2077,  2111,   667,
  2078,  2113,   668,  2079,  2115,   669,  2080,  2303,   670,  2297,
  2305,   671,  2298,  2307,   672,  2299,  2252,   673,  2240,  2254,
   674,  2241,  2256,   675,  2242,  2201,   676,  2183,  2203,   677,
  2184,  2205,   678,  2185,  1666,   679,  1572,  1760,   680,  1668,
   141,   250,    73,   568,   342,   554,   555,   343,    77,    78,
    79,    80,    81,   344,  1203,  1518,  1622,  1206,  1523,  1626,
  1209,  1527,  1629,  1385,  1386,    83,    84,   988,   345,   144,
   363,   177,   245,   433,  1099,  1217,  1218,   347,   493,   199,
   742,   898,   145
};

static const short yypact[] = {  2832,
    65,-32768,-32768,  -123,-32768,   424,  3114,-32768,    21,    47,
    82,   110,   139,   156,   168,   -49,    32,    76,-32768,-32768,
-32768,-32768,  2290,    88,   205,   108,   118,   149,   -44,   103,
   172,   175,   262,   184,   282,   351,   357,   417,   575,   352,
   470,   296,   302,   -80,   -80,   309,   384,     6,   475,     8,
   512,   518,    63,   521,   331,   362,   -14,    10,    19,-32768,
   373,-32768,   565,-32768,   545,   571,   532,    15,    22,-32768,
-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,
-32768,-32768,-32768,-32768,-32768,   579,    21,  2942,-32768,-32768,
-32768,-32768,-32768,   393,   393,   608,-32768,  -132,    13,-32768,
-32768,-32768,-32768,   -99,   -60,    -8,   162,   221,   300,   349,
   358,   403,   404,   469,   479,   490,   491,   494,   510,   513,
   516,   517,   523,   526,   462,   482,   495,-32768,-32768,-32768,
-32768,  2324,  2324,  2324,-32768,-32768,  2324,   972,    60,   697,
  2324,   661,   671,-32768,   698,   714,-32768,  2324,  2324,  2324,
   531,  2324,   534,  2324,  2324,   611,  2324,   553,   566,   572,
   587,   611,   558,   568,   591,   598,   599,   609,   617,   748,
   -80,   -80,   -80,  2324,  2324,   -64,-32768,   167,   -80,   600,
   616,   648,   672,-32768,   611,    25,-32768,-32768,-32768,   611,
   611,   856,  2324,  2324,   -84,  2324,   673,  2324,   676,   790,
  2324,  2324,-32768,   906,-32768,   732,-32768,-32768,   929,-32768,
   937,-32768,    21,   783,   812,   814,   815,   816,   817,   818,
   819,   822,   823,   824,   825,   827,   828,   834,   844,   851,
   852,   854,   855,   861,   862,   863,   864,   865,   866,   867,
   868,   869,   870,   969,   871,   849,   872,  2324,  1064,-32768,
   -80,-32768,  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,
  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,
  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,
  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,
  2324,  2324,  2324,  2324,    38,    48,    48,   209,   875,   875,
   875, 11052,  1065,  1828,   850,   307,   877,  1069,   881,   699,
-32768,-32768,  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,
  2324,  2324,  2324,  2324,  2324,  2324,  2324,-32768,  -135, 11075,
 11098, 11121,  2324, 11144,  2324, 11167, 11190,   222,   878,  1503,
  1828,-32768,-32768,-32768,    17,  1076,-32768, 11213,  2324,  2324,
  2324,  2324,  1078,  2324,  2324,  2324,  2324,  2324,  2324,  2324,
   888,   -95,-32768,-32768,  3538,  3560,   -80,   -80,   601,   601,
   -91,  2324,  2324,  2324,  2324,  2545,   405,-32768,  2324,  2579,
  1080,  1083,-32768, 11236, 11259,   985,  2324, 11282,   986,  3582,
-32768,   887,   468, 11305,-32768,  2324,  2614,-32768,  2648,-32768,
   925,  1090,  1091,  1092,  1093,  1094,  1095,  1099,  1100,  1101,
  1102,  1104,  1105,  1106,  1108,  1109,  1110,  1142,  1155,  1156,
  1158,  1160,  1161,  1162,  1012,  1165,  1166,  1168,  1172,  1175,
  1174,-32768,   -70,  1180,  1196,  1225,  1906,   272,   193,  2927,
 11328, 10402, 11351, 10427, 11374, 10452, 11397, 10477, 11420, 10502,
 11443, 10527, 11466, 10552, 11489, 10577, 11512, 10602, 11535, 10627,
 11558, 10652,  3604,  3626, 11581, 10677, 11604, 10702, 11627, 10727,
 11650, 10752, 11673, 10777, 11696, 10802,  3648,  3670,  3692,  3714,
  3736,  3758,   525,    86,  1026,  1033,  2324,-32768,   611,  2414,
    17,-32768,   524,   169,    48,  2324,  1226,  1253,    14,  1063,
-32768,  1718,   718,   249,   554,   554,   422,   422,   422,   422,
   333,   333,   875,   875,   875,   875,  1268,  1828,  1273,  1275,
  1277, 11719,  1279, 11742,  1282,  1283,  1194,  2324,   297,  1828,
   529,  2324,  2324,  1284,  2731, 11765, 11788, 11811,  2324,  3073,
  3107, 11834, 11857, 11880, 11903, 11926,  1097,   -80,  2324,  2324,
-32768,-32768,-32768,  1087,  3147,-32768,  1088,  2324,  3780,  3802,
  3824, 10827,   -40,   -39,   -20,   -12,-32768,-32768,-32768,  2324,
 10852,-32768,  1096,  1098,  1288,  1289,  1107, 11949,  1294,  1111,
  2324,  2751,  2324,  2324,-32768, 11972,-32768,-32768,  1136,  1103,
  1112,  1114,  1115,  1117,  1144,  1145,  1146,  1148,  1149,  1151,
  1157,  1159,  1179,  1181,  1184,  1185,  1186,  1187,  1190,  1192,
  1197,  1198,  1199,  1200,  1201,  1202,  1203,  1204,  1205,-32768,
  1302,  1116,-32768,  1206,    85,-32768,-32768,  1113,  1164,  1167,
  1195,  1215,  1216,  1217,  1218,  1220,  1221,  1222,  1223,  1228,
  1230,  1232,  1233,  1234,  1235,  1236,  1237,  1239,  1240,  1241,
  1243,  1245,  1248,  1303,-32768,-32768,-32768,-32768,-32768,-32768,
-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,
-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,
-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,
-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,
-32768,-32768,  2324,  2324,-32768,-32768,-32768,-32768,-32768,-32768,
-32768,-32768,-32768,-32768,-32768,-32768,  2324,  2324,  2324,  2324,
  2324,  2324,  2324,  1304,-32768,  1828,    48,-32768, 10877,  1307,
  1828,  1163,    81,  2324,  1352,  1353,   762,-32768,  1376,  1252,
    10,  1391,-32768,  2324,-32768,   127,   -80,   611,   611,  1392,
   611,  1415,   611,   611,-32768,  1828,  3131,  1224,   543,-32768,
  1793,   777,  1219,  1454,  1455,  1456,  1457,   354,  1458,  1460,
  1482,  1484,  1485,  1486,  1487,  1491,   171,  3846,  3868,-32768,
-32768,  3161,   -80,   -80,   -80,  1490,  1828,  1828,  1828,  1828,
   966,  1492,  2324,  2324,   611,   611,  2324,  1493,   611,  1495,
  3890,-32768,  2352,   409,  1494,  1332,  1499,  2324,  2324,   -80,
  1501,  1502,  1320,  1506,  1507,   611,   611,  1508,   -80,  1535,
  1536,   611,   611,  1537,  1538,  1563,  1564,  1565,   611,   559,
   611,  1590,  1589,  1591,  1594,  1595,-32768,  1593,   393,  1598,
-32768,  1599,  2964,  2324,  2324,  2324,  2324,  2324,  2324,  2324,
  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,
  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,-32768,
 11995, 10902, 12018, 10927, 12041, 10952, 12064, 10977, 11002,  1403,
   142,  1406,   154,-32768,    17,-32768,   148,   379,  1405,  1600,
  1004,-32768,-32768,-32768,    10,  2324,-32768,   544,-32768, 12915,
  1618,    34,    30,  1619,   611,  1620,   611,  1621,  1622,   548,
-32768,-32768,  1828,-32768,  2324,-32768,  2324,   611,   611,   611,
  1434,-32768,   427,   611,   611,   611,   611,   611,   611,   611,
   496,  2324,  2324,  2324,  1426,  -127,  -106,  -100,-32768,   555,
   556,   570,   573,-32768,-32768,  3912,  3934,  1626,  1627, 12087,
   188,  1529,-32768,  2324,  2324,  2324,-32768,  1431,    21,  1435,
  3956,  3978,  -121,  1436,  1438,  1437,  1443,  1441,  1447,  1444,
  1446,   -51,  1448,  1459,  1461,  1449,  1450,  1451,  1462,  1464,
  1489,  1463,-32768,-32768,-32768,-32768,-32768,  1496,  1498,  1500,
  1505,  1509,  1465,  1510,-32768,  1511,   272,-32768,  1640,  4000,
  4022,  4044,  4066,  4088,  4110,  4132,  4154,  4176,  4198,  4220,
  4242,  4264,  4286,  4308,  4330,  4352,  4374,  4396,  4418,  4440,
  4462,  4484,  4506,  4528,  4550,-32768,-32768,-32768,-32768,-32768,
-32768,-32768,-32768,  1497,-32768,-32768,-32768,   611,    48,  2324,
  1644,  1651,    14,-32768,  1652, 11027,    10,-32768,-32768,-32768,
-32768,   -80,-32768,  1654,-32768,  1690,-32768,-32768,  1504,   574,
 12915,  4572,  1691,  1696,  1700,  2324,  2324,  2324,  1703,  1704,
  1705,  1709,  1710,  1711,  1712,-32768,  2380,  3185, 12110,  1948,
   601,   -80,  1715,   -80,  1716,   -80,  1717,  1721,  1722,  1723,
  1725,  2324,  2324,-32768,-32768,  1726,   611,   611,  1629,   611,
  2317,   264, 12133,  2324,    21,  1729,  2324,   611,  1730,  1735,
  1733,  1552,  1736,   559,  1737,  1738,  2324,  1740,  1744,  1742,
  1743,  1747,   559,  2324,  2324,  2324,   611,  1745,  1767,   559,
  2324,  1768,  1775,  1782,  2324,   393,-32768,-32768,  2324,  2324,
  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,
  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,
  2324,  2324,  2324,  2324,  1720,  1783,  1784,  1082,-32768,  1785,
  1788,-32768,  1596,-32768,    96,-32768,-32768,-32768,  1602,  2324,
-32768,-32768,-32768,  4594,  1189,  1270,-32768,-32768,-32768,-32768,
-32768,-32768,-32768,  1433,  1789,  1587,-32768,  2324,-32768,  1601,
   197,-32768,  1592,   201,-32768,  1603,   203,-32768,  1604,-32768,
-32768,-32768,-32768,  4616,  4638,   188,   265,-32768,   577,  1630,
  1697,  2324,-32768,  2324,-32768,-32768,  4660,    21,  1605,  4682,
  1632,-32768,  1633,-32768,  1659,-32768,  1607,-32768,  1661, 12156,
-32768,  1682,-32768,-32768,  1635,  1688, 12179,  4704, 12202,  1706,
-32768,  1695,  1701,  4726,  1707,  1713,-32768,  4748,  1728,  4770,
  4792,  4814,  4836,  4858,  4880,  4902,  4924,  4946,  4968,  4990,
  5012,  5034,  5056,  5078,  5100,  5122,  5144,  5166,  5188,  5210,
  5232,  5254,  5276,  5298,  5320,  1714,-32768,-32768,-32768,    10,
-32768,  1693,-32768,-32768,  5342,  2324,-32768,-32768,-32768,-32768,
   601,  2550,-32768,  1533,   406,  1533,   406,  1533,   406,  2324,
  2324,  1808,-32768,   611,-32768,   611,  2324,  3215,  3250,   611,
  1665,  1792,   188,   559,  1912,  2324,  1926,   559,  1927,  1931,
  1929,  1930,  1932,  2324,  1933,   611,  1934,  1936,  2324,  1940,
  1938,  2324,  1941,  2324,  2324,  2324,  2324,  2324,  2324,  2324,
  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,
  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,-32768,
  1939,-32768,  1942, 12225,  1732,  2324,-32768,  1533,  1533,  2324,
  3274,   227,  1943,  1746,   -36,-32768,  3298,   275,   -33,  3322,
   284,   -25,  3346,  3370,  1770,-32768,  1781,  1597,-32768,-32768,
  1780,    21,-32768,  1787,  1790,  1794,  5364,-32768,  1750,-32768,
  1797,-32768,-32768,-32768, 12248,-32768,  1810,-32768,-32768, 12271,
  1818,-32768, 12294,  1814, 12317, 12340, 12363,  5386,  5408,  5430,
  5452,  5474,  5496,  5518,  5540,  5562,  5584,  5606,  5628,  5650,
  5672,  5694,  5716,  5738,  5760,  5782,  5804,  5826, 12386,  5848,
-32768,  1815,   611,-32768,  3394,  2271,  1980,  2324,-32768,   611,
  1981,-32768,  1982,  2324,  1985,  2013,  2324,  2015,  2016,  2017,
   611,   611,-32768,  2018,    21,   559,   559,   559,   559,  2020,
  2021,  2022,   559,  2023,  2025,  2026,  2028,-32768,-32768,-32768,
  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,
  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,
  2324,-32768,  2324,  2029,   611,-32768,-32768,  1831,  3418,  1833,
-32768,-32768,  1834,  3442,-32768,-32768,  1835,  3466,-32768,-32768,
-32768,  1837,  1832,-32768,    21,  1838,  1848,  1854,  1855,-32768,
-32768,-32768,  1851,-32768,-32768,-32768,  1852,  1853,  1856,  1857,
  5870,  5892,  5914,  5936,  5958,  5980,  6002,  6024,  6046,  6068,
  6090,  6112,  6134,  6156,  6178,  6200,  6222,  6244,  6266,  6288,
  6310,  1858, 12409,  1860,  2050,   406,  2052,   611,   406,  2053,
   406,  2058,   611,  1963,  1901,   559,   559,  2081,  2091,   559,
  2093,  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,
  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,
  2324,  2324,  2324,  2324,  2324,    48,-32768,  2094,-32768,     4,
-32768,  1896,   584,    23,-32768,  1897,    72,-32768,  1900,  1903,
  1908,    21,  1907,  1911,-32768,-32768,  1944,  1945,   588, 12915,
   589, 12915,   596, 12915,  6332,  6354,  6376,  6398,  6420,  6442,
  6464,  6486,  6508,  6530,  6552,  6574,  6596,  6618,  6640,  6662,
  6684,  6706,  6728,  6750,  6772,   597,-32768,  1925,  1935,  2133,
   406,   611,  2135,  2146,   406,  2148,   406,  2054,  2324,    21,
   559,   611,  2149,  2151,  2324,  2152,  2324,  2153,  2324,  2154,
  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,
  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,
  2324,    48,  2155,    48,  2156,-32768,    75,  1967,-32768,-32768,
    83,-32768,   111,  1969,  6794,    21,  1971,  1972,-32768,-32768,
 12915,-32768, 12915,-32768, 12915,-32768, 12432, 12455, 12478,  6816,
  6838,  6860,  6882,  6904,  6926,  6948,  6970,  6992,  7014,  7036,
  7058,  7080,  7102,  7124,  7146,  7168,  7190,-32768,-32768,   602,
-32768,-32768,  2170,  2171,  2172,  2173,  2324,  2324,  2010,   559,
   611,-32768,-32768,-32768,  2324,  2324,  2324,  2324,  2324,  2324,
  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,
  2324,  2324,    48,  2175,-32768,-32768,-32768,-32768,  7212,  3490,
  2011,  1988,  1990,  1979,  1991,  1992,  7234,  7256,  7278,  7300,
  7322,  7344,  7366,  7388,  7410,  7432,  7454,  7476,  7498,  7520,
  7542,  7564,  7586,  7608,-32768,-32768,  2324,  2191,-32768,   611,
   559,  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,
  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,
  2324,  2324,  3514,-32768,  1995,  2001,   606, 12915,   607, 12915,
   613, 12915,  7630,  7652,  7674,  7696,  7718,  7740,  7762,  7784,
  7806,  7828,  7850,  7872,  7894,  7916,  7938,  7960,  7982,  8004,
  2196,   611,  2198,  2324,  2201,  2324,  2205,  2324,  2206,  2324,
  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,
  2324,  2324,  2324,  2324,  2324,  2324,  2324,-32768,  2012,-32768,
 12915,-32768, 12915,-32768, 12915,-32768, 12501, 12524, 12547,  8026,
  8048,  8070,  8092,  8114,  8136,  8158,  8180,  8202,  8224,  8246,
  8268,  8290,  8312,  8334,   611,-32768,-32768,-32768,  2324,  2324,
  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,
  2324,  2324,  2324,  2014,  2009,  2024,  2027,  8356,  8378,  8400,
  8422,  8444,  8466,  8488,  8510,  8532,  8554,  8576,  8598,  8620,
  8642,  8664,   611,  2324,  2324,  2324,  2324,  2324,  2324,  2324,
  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,
  2324,  2030,   614, 12915,   660, 12915,   663, 12915,  8686,  8708,
  8730,  8752,  8774,  8796,  8818,  8840,  8862,  8884,  8906,  8928,
  8950,  8972,  8994,   559,  2324,  2208,  2324,  2210,  2324,  2212,
  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,
  2324,  2324,  2324,  2324,  2324,  2031, 12915,-32768, 12915,-32768,
 12915,-32768, 12570, 12593, 12616, 12639, 12662, 12685,  9016,  9038,
  9060,  9082,  9104,  9126,  9148,  9170,  9192,  2213,-32768,-32768,
-32768,-32768,-32768,-32768,  2324,  2324,  2324,  2324,  2324,  2324,
  2324,  2324,  2324,-32768,  2035,  2037,  2039,  2040,  2041,  2042,
  9214,  9236,  9258,  9280,  9302,  9324,  9346,  9368,  9390,  2324,
  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,  2324,
  2324,  2324,  2324,  2324,   667, 12915,   688, 12915,   712, 12915,
   713, 12915,   716, 12915,   717, 12915,  9412,  9434,  9456,  9478,
  9500,  9522,  9544,  9566,  9588,  2324,  2220,  2324,  2221,  2324,
  2224,  2324,  2226,  2324,  2228,  2324,  2243,  2324,  2324,  2324,
  2324,  2324,  2324,  2324,  2324,  2324, 12915,-32768, 12915,-32768,
 12915,-32768, 12915,-32768, 12915,-32768, 12915,-32768,  9610,  9632,
  9654,  9676,  9698,  9720, 12708, 12731, 12754,  2324,  2324,  2324,
  2324,  2324,  2324,-32768,-32768,-32768,  9742,  9764,  9786,  9808,
  9830,  9852,  2046,  2048,  2059,  2324,  2324,  2324,  2324,  2324,
  2324,  2324,  2324,  2324,  9874,  9896,  9918,  9940,  9962,  9984,
   720, 12915,   721, 12915,   725, 12915,  2324,  2324,  2324,  2324,
  2324,  2324,  2324,  2250,  2324,  2251,  2324,  2252, 10006, 10028,
 10050, 12777, 12800, 12823, 12915,-32768, 12915,-32768, 12915,-32768,
  2324,  2324,  2324,-32768,-32768,-32768, 10072, 10094, 10116,  2060,
  2066,  2067,  2324,  2324,  2324,  2324,  2324,  2324, 10138, 10160,
 10182,   731, 12915,   765, 12915,   766, 12915,  2324,  2324,  2324,
  2324,  2256,  2324,  2266,  2324,  2267, 10204, 10226, 10248, 12915,
-32768, 12915,-32768, 12915,-32768,  2324,  2324,  2324, 10270, 10292,
 10314,  2324,  2324,  2324, 10336, 10358, 10380,  2324,  2324,  2324,
 12846, 12869, 12892,-32768,-32768,-32768,  2072,  2076,  2078,  2324,
  2324,  2324,   774, 12915,   802, 12915,   803, 12915,  2324,  2278,
  2324,  2279,  2324,  2281, 12915,-32768, 12915,-32768, 12915,-32768,
  2289,  2291,-32768
};

static const short yypgoto[] = {-32768,
   -32,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,
-32768,  1669,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,
-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,
-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,
-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,
-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,
-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,
-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,
-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,
  -304,   -19,-32768,  2285,    -4,  -364,  -176,    -2,-32768,-32768,
-32768,-32768,-32768,  2316,-32768,-32768,-32768,-32768,-32768,-32768,
-32768,-32768,-32768, -1270, -1229,-32768,-32768, -1101,   -23,-32768,
   -29,-32768,   -94,-32768, -1164,  1231,  1452,  -211,  -332,  -734,
  1255,-32768,   -21
};


#define	YYLAST		13111


static const short yytable[] = {   143,
   246,   496,    75,   142,    76,   557,   897,   376,   531,   183,
   380,   186,  1237,   197,   176,   178,   251,   740,   386,   207,
   151,  1246,   200,    85,   532,   151,   207,   195,  1253,  1383,
   378,   397,  1383,   399,  1384,  1051,  1389,  1384,  1392,  1050,
  1383,   483,   207,     9,   153,  1384,   209,   211,   125,   126,
   127,  1312,   207,    88,   213,   125,   126,   127,   367,   368,
   135,   136,   517,   306,   367,   368,   248,   518,   249,  1383,
     8,   125,   126,   127,  1384,  1082,  1109,  1083,  1052,   367,
   368,   125,   126,   127,   888,   367,   368,    89,  1383,   207,
   367,   368,   492,  1384,   367,   368,  1084,   253,  1085,   254,
   190,  1293,  1086,   191,  1087,   172,   173,   548,   299,   300,
   301,   558,   387,   302,   305,    90,   174,   310,   125,   126,
   127,   367,   368,   175,   330,   331,   332,   620,   334,   492,
   336,   337,   621,   348,   367,   368,   255,  1383,   256,   369,
  1383,   362,  1384,   364,    91,  1384,  1118,    94,  1383,   371,
   365,   366,   152,  1384,   100,  1462,   148,   152,  1404,  1462,
  1045,    92,  1462,   787,   788,   307,   308,   153,  1461,   384,
   385,  1465,   388,    93,   390,   100,  1383,   393,   394,  1468,
   401,  1384,   196,   789,   155,   746,   889,   890,   257,   734,
   258,   790,   313,   314,   315,   316,   317,   759,   318,   319,
   320,   321,   322,   323,   324,   325,   326,    86,  1670,   184,
   147,   187,   327,   198,   582,   201,   252,   741,   208,   367,
   368,   439,  1405,   379,   437,   210,  1409,  1674,    95,   441,
   442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
   452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
   462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
   472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
   482,  1224,    96,   484,   485,   486,  1676,   135,   136,  1763,
   491,   367,   368,   725,   146,   840,   497,  1765,   726,   502,
   503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
   513,   514,   515,   516,   148,  1620,   492,   156,  1624,   522,
  1627,   524,  1174,   495,   149,  1766,   300,   491,   492,   128,
   129,   130,   131,   158,   901,   535,   536,   537,   538,   731,
   540,   541,   542,   543,   544,   545,   546,   551,   552,  1036,
   128,   129,   130,   131,   731,   150,   135,   136,   559,   560,
   561,   562,   367,   368,   840,   571,   367,   368,   259,   922,
   260,   135,   136,   578,   553,   553,   556,   556,   154,   733,
   370,   155,   586,   932,  1536,  1537,  1538,  1539,   367,   368,
   157,  1543,   367,   368,  1097,  1039,   367,   368,   367,   368,
  1462,  1098,   159,   881,  1462,   165,   627,  1462,   160,  1304,
  1717,   135,   136,  1306,  1721,  1308,  1723,   487,   923,   249,
   569,   570,   367,   368,   135,   136,   956,   261,   626,   262,
   527,   180,   249,   910,   181,   182,    10,   316,   317,  1458,
   318,   319,   320,   321,   322,   323,   324,   325,   326,   313,
   314,   315,   316,   317,   327,   318,   319,   320,   321,   322,
   323,   324,   325,   326,   940,   941,   942,   943,   161,   327,
   367,   368,  1313,   729,   135,   136,   300,  1314,  1225,   367,
   368,  1383,   737,   736,   735,   584,  1384,  1464,   128,   129,
   130,   131,  1067,  1068,  1633,  1634,  1467,  1462,  1637,   135,
   136,  1462,   170,  1462,   491,   758,   263,   249,   264,   135,
   136,  1076,  1077,   729,   757,   171,   491,   166,   761,   762,
   167,   168,   179,   169,   492,   768,   185,   188,   777,   886,
   324,   325,   326,   189,   192,   778,   779,   193,   327,   313,
   314,   315,   316,   317,   782,   318,   319,   320,   321,   322,
   323,   324,   325,   326,   492,   265,   791,   266,   204,   327,
   128,   129,   130,   131,   267,  1371,   268,   801,   194,   803,
   804,    11,    12,    13,    14,    15,    16,    17,    18,   202,
   203,   135,   136,   206,   205,   492,   492,   492,   492,  1727,
  1060,   212,  1038,  1040,   313,   314,   315,   316,   317,   244,
   318,   319,   320,   321,   322,   323,   324,   325,   326,   269,
   271,   270,   272,   842,   327,   841,   957,   322,   323,   324,
   325,   326,   247,    97,   338,   162,   163,   327,   164,   101,
   102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
   112,   113,   114,   115,   116,   117,   118,   119,   120,   121,
   122,   123,   124,   313,   314,   315,   316,   317,   339,   318,
   319,   320,   321,   322,   323,   324,   325,   326,   295,    43,
    44,    45,    46,   327,    48,   273,   311,   274,  1802,    43,
    44,    45,    46,    47,    48,   275,   312,   276,   296,   871,
   872,   983,   984,   985,   986,   987,   277,   279,   278,   280,
   281,   297,   282,   873,   874,   875,   876,   877,   878,   879,
   309,   492,   491,   328,   501,   882,   283,   885,   284,   285,
   891,   286,   287,   289,   288,   290,  1200,   902,   329,   291,
   900,   292,   293,   723,   294,   724,   731,   333,   732,  1856,
   335,   731,   491,   760,   729,   318,   319,   320,   321,   322,
   323,   324,   325,   326,   996,   731,  1047,   914,  1048,   327,
   731,   361,  1059,   936,   937,   938,   349,   731,   731,  1088,
  1089,   354,   350,   491,   491,   491,   491,   894,   351,   946,
   947,   355,   731,   950,  1090,   731,   731,  1091,  1179,  1314,
   963,  1315,   916,   352,   961,   962,  1672,   356,  1673,   972,
  1685,  1687,  1686,  1688,   357,   358,   132,   340,  1689,  1712,
  1690,  1713,   134,   372,  1793,   359,  1794,   137,  1884,  1886,
  1885,  1887,   140,   360,   341,  1888,  2015,  1889,  2016,   373,
  1000,  1001,  1002,  1003,  1004,  1005,  1006,  1007,  1008,  1009,
  1010,  1011,  1012,  1013,  1014,  1015,  1016,  1017,  1018,  1019,
  1020,  1021,  1022,  1023,  1024,  1025,   313,   314,   315,   316,
   317,   374,   318,   319,   320,   321,   322,   323,   324,   325,
   326,   383,  2017,   841,  2018,  2019,   327,  2020,  1041,  2126,
   375,  2127,  1046,   389,   313,   314,   315,   316,   317,   391,
   318,   319,   320,   321,   322,   323,   324,   325,   326,   491,
  2128,  1061,  2129,  1062,   327,   315,   316,   317,   392,   318,
   319,   320,   321,   322,   323,   324,   325,   326,  1078,  1079,
  1080,   395,  2036,   327,  2130,  2132,  2131,  2133,  2134,  2136,
  2135,  2137,  2213,  2215,  2214,  2216,  1105,  2217,   396,  2218,
  1101,  1102,  1103,  2261,   398,  2262,  1375,   313,   314,   315,
   316,   317,   400,   318,   319,   320,   321,   322,   323,   324,
   325,   326,   313,   314,   315,   316,   317,   327,   318,   319,
   320,   321,   322,   323,   324,   325,   326,  2263,  2265,  2264,
  2266,   944,   327,   432,    97,   298,  2309,  1137,  2310,   402,
   101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
   111,   112,   113,   114,   115,   116,   117,   118,   119,   120,
   121,   122,   123,   124,  2311,  2313,  2312,  2314,   403,  1044,
   404,   405,   406,   407,   408,   409,  1168,  1167,   410,   411,
   412,   413,  1175,   414,   415,   313,   314,   315,   316,   317,
   416,   318,   319,   320,   321,   322,   323,   324,   325,   326,
   417,  1259,  1184,  1185,  1186,   327,   435,   418,   419,   494,
   420,   421,  1201,  1194,  1204,  1195,  1207,   422,   423,   424,
   425,   426,   427,   428,   429,   430,   431,   438,  1214,  1215,
   327,   489,  1228,   434,   436,   499,   553,   498,   556,   500,
  1227,   528,   533,  1230,   539,   547,   573,  1289,   577,   574,
   583,   580,   589,  1240,   590,   591,   592,   593,   594,   595,
  1247,  1248,  1249,   596,   597,   598,   599,  1254,   600,   601,
   602,  1258,   603,   604,   605,  1260,  1261,  1262,  1263,  1264,
  1265,  1266,  1267,  1268,  1269,  1270,  1271,  1272,  1273,  1274,
  1275,  1276,  1277,  1278,  1279,  1280,  1281,  1282,  1283,  1284,
  1285,   313,   314,   315,   316,   317,   606,   318,   319,   320,
   321,   322,   323,   324,   325,   326,  1295,   132,   133,   607,
   608,   327,   609,   134,   610,   611,   612,   613,   137,   614,
   615,   303,   616,   140,  1302,   304,   617,   618,   619,   313,
   314,   315,   316,   317,   622,   318,   319,   320,   321,   322,
   323,   324,   325,   326,  1297,  1321,    97,   298,  1318,   327,
  1319,   623,   101,   102,   103,   104,   105,   106,   107,   108,
   109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
   119,   120,   121,   122,   123,   124,    97,   298,   727,   624,
   728,   738,   101,   102,   103,   104,   105,   106,   107,   108,
   109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
   119,   120,   121,   122,   123,   124,   739,   313,   314,   315,
   316,   317,   743,   318,   319,   320,   321,   322,   323,   324,
   325,   326,  1374,   745,  1382,  1298,  1388,   327,  1391,   747,
  1381,   748,  1387,   749,  1390,   751,  1393,  1394,   753,   754,
   763,   780,   781,  1398,   795,   796,   553,   776,   556,   793,
   799,   794,  1407,   797,   806,   807,   837,   880,   870,   844,
  1415,   800,   884,   838,   808,  1420,   809,   810,  1423,   811,
  1425,  1426,  1427,  1428,  1429,  1430,  1431,  1432,  1433,  1434,
  1435,  1436,  1437,  1438,  1439,  1440,  1441,  1442,  1443,  1444,
  1445,  1446,  1447,  1448,  1449,  1450,   812,   813,   814,   364,
   815,   816,  1455,   817,   299,   300,  1456,   892,   893,   818,
   845,   819,   887,   846,   313,   314,   315,   316,   317,  1475,
   318,   319,   320,   321,   322,   323,   324,   325,   326,   132,
   133,   820,   895,   821,   327,   134,   822,   823,   824,   825,
   137,   847,   826,   755,   827,   140,   899,   756,   905,   828,
   829,   830,   831,   832,   833,   834,   835,   836,   839,   132,
   133,   848,   849,   850,   851,   134,   852,   853,   854,   855,
   137,   907,   917,   912,   856,   140,   857,   913,   858,   859,
   860,   861,   862,   863,  1519,   864,   865,   866,  1299,   867,
  1524,   868,  1535,  1528,   869,   313,   314,   315,   316,   317,
   896,   318,   319,   320,   321,   322,   323,   324,   325,   326,
   918,   919,   920,   921,   924,   327,   925,  1551,  1552,  1553,
  1554,  1555,  1556,  1557,  1558,  1559,  1560,  1561,  1562,  1563,
  1564,  1565,  1566,  1567,  1568,  1569,  1570,  1571,   926,  1573,
   927,   928,   929,   930,   931,   939,   959,   945,   953,   951,
   958,   960,  1585,   964,   965,    97,   529,   966,   967,   968,
   971,   101,   102,   103,   104,   105,   106,   107,   108,   109,
   110,   111,   112,   113,   114,   115,   116,   117,   118,   119,
   120,   121,   122,   123,   124,    97,   298,   973,   974,   977,
   978,   101,   102,   103,   104,   105,   106,   107,   108,   109,
   110,   111,   112,   113,   114,   115,   116,   117,   118,   119,
   120,   121,   122,   123,   124,   979,   980,   981,  1640,  1642,
  1644,  1645,  1646,  1647,  1648,  1649,  1650,  1651,  1652,  1653,
  1654,  1655,  1656,  1657,  1658,  1659,  1660,  1661,  1662,  1663,
  1664,  1665,   990,   991,  1667,   992,   993,   994,   995,  1680,
  1035,   997,  1473,  1037,   998,  1042,  1043,   346,   313,   314,
   315,   316,   317,   353,   318,   319,   320,   321,   322,   323,
   324,   325,   326,  1049,  1053,  1055,  1057,  1058,   327,  1081,
  1066,  1094,  1095,  1100,  1104,  1111,   377,  1106,  1110,  1112,
  1113,   381,   382,  1114,  1115,  1138,  1116,  1726,  1117,  1169,
  1119,  1122,  1123,  1124,  1170,  1725,  1120,  1172,  1121,  1176,
  1128,  1731,  1134,  1733,  1125,  1735,  1126,  1737,  1738,  1739,
  1740,  1741,  1742,  1743,  1744,  1745,  1746,  1747,  1748,  1749,
  1750,  1751,  1752,  1753,  1754,  1755,  1756,  1757,   132,   133,
  1758,  1127,  1761,  1769,   134,  1177,  1181,  1165,  1129,   137,
  1130,  1182,  1131,  1178,   140,  1183,   530,  1132,  1187,  1188,
  1189,  1133,  1135,  1136,  1190,  1191,  1192,  1193,  1378,  1379,
  1202,  1205,  1208,  1286,   134,   744,  1210,  1211,  1212,  1380,
  1213,  1229,  1216,  1220,   140,  1232,   175,  1233,  1234,  1235,
  1239,  1236,  1238,  1799,  1800,  1241,  1242,  1243,  1244,  1245,
  1251,  1807,  1808,  1809,  1810,  1811,  1812,  1813,  1814,  1815,
  1816,  1817,  1818,  1819,  1820,  1821,  1822,  1823,  1824,  1252,
  1255,  1825,   313,   314,   315,   316,   317,  1256,   318,   319,
   320,   321,   322,   323,   324,   325,   326,  1257,  1287,  1288,
  1301,  1290,   327,  1291,  1300,  1305,  1292,  1403,  1317,  1372,
   915,  1294,  1322,  1853,  1327,  1303,  1307,  1309,  1858,  1860,
  1862,  1863,  1864,  1865,  1866,  1867,  1868,  1869,  1870,  1871,
  1872,  1873,  1874,  1875,  1876,  1877,  1878,  1879,  1880,  1402,
    97,   338,  1331,  1316,  1324,  1325,   101,   102,   103,   104,
   105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
   115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
  1911,  1326,  1913,  1328,  1915,   339,  1917,  1918,  1919,  1920,
  1921,  1922,  1923,  1924,  1925,  1926,  1927,  1928,  1929,  1930,
  1931,  1932,  1933,  1934,  1330,  1332,    43,    44,    45,    46,
    47,    48,  1337,   313,   314,   315,   316,   317,  1338,   318,
   319,   320,   321,   322,   323,   324,   325,   326,  1336,  1340,
  1341,  1370,  1395,   327,  1406,  1958,  1959,  1960,  1961,  1962,
  1963,  1964,  1965,  1966,  1967,  1968,  1969,  1970,  1971,  1972,
  1343,  1408,  1410,  1411,  1412,  1413,  1454,  1414,  1416,  1418,
   730,  1419,  1421,  1422,  1451,  1424,  1452,  1480,  1459,  1460,
  1994,  1996,  1998,  1999,  2000,  2001,  2002,  2003,  2004,  2005,
  2006,  2007,  2008,  2009,  2010,  2011,  2012,  2013,   313,   314,
   315,   316,   317,  1471,   318,   319,   320,   321,   322,   323,
   324,   325,   326,  1472,  1474,  1517,  1521,  1522,   327,  1476,
  1525,  2037,  1477,  2039,  1481,  2041,  1478,  2043,  2044,  2045,
  2046,  2047,  2048,  2049,  2050,  2051,  2052,  2053,  2054,  2055,
  2056,  2057,  1483,   132,   490,  1485,  1487,  1514,  1526,   134,
  1529,  1530,  1531,  1534,   137,  1540,  1541,  1542,  1544,   140,
  1545,  1546,  1547,  1574,  1576,  1578,  1584,  1579,  1581,  1583,
  1586,  2081,  2082,  2083,  2084,  2085,  2086,  2087,  2088,  2089,
  1587,  1588,  1589,  1590,  1591,  1619,  1592,  1621,  1625,  1593,
  1594,  1616,  1618,  1628,  1631,  1632,  2106,  2108,  2110,  2112,
  2114,  2116,  2117,  2118,  2119,  2120,  2121,  2122,  2123,  2124,
  2125,   313,   314,   315,   316,   317,  1635,   318,   319,   320,
   321,   322,   323,   324,   325,   326,  1636,  1638,  1669,  1671,
  1675,   327,  2147,  1677,  2149,   625,  2151,  1678,  2153,  1681,
  2155,  1679,  2157,  1682,  2159,  2160,  2161,  2162,  2163,  2164,
  2165,  2166,  2167,   313,   314,   315,   316,   317,  1714,   318,
   319,   320,   321,   322,   323,   324,   325,   326,  1716,  1715,
  1719,  1683,  1684,   327,  2177,  2178,  2179,  2180,  2181,  2182,
  1198,  1720,  1199,  1722,  1729,  1724,  1730,  1732,  1734,  1736,
  1759,  1762,  2195,  2196,  2197,  2198,  2199,  2200,  2202,  2204,
  2206,  1764,  1767,  1770,  1771,  1795,  1796,  1797,  1798,  1801,
  1826,  1829,  1832,  2219,  2220,  2221,  2222,  2223,  2224,  2225,
  1830,  2227,  1831,  2229,  1833,  1834,  1854,  1882,  1883,   903,
   904,  1908,   906,  1910,   908,   909,  1912,  2237,  2238,  2239,
  1914,  1916,  1974,  2038,  1935,  2040,  1973,  2042,  2074,  2249,
  2250,  2251,  2253,  2255,  2257,  2148,  2150,  1975,  2058,  2152,
  1976,  2154,  2014,  2156,  2267,  2268,  2269,  2270,  2090,  2272,
  2091,  2274,  2092,  2093,  2094,  2095,   948,   949,  2158,  2192,
   952,  2193,  2279,  2280,  2281,  2226,  2228,  2230,  2285,  2286,
  2287,  2271,  2194,  2246,  2291,  2292,  2293,   969,   970,  2247,
  2248,  2273,  2275,   975,   976,  2300,  2304,  2306,  2308,  2301,
   982,  2302,   989,  2316,  2318,  2315,  2320,  2317,  2322,  2319,
  2323,    74,    97,    98,    99,   843,   100,  1171,   101,   102,
   103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
   113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
   123,   124,    82,   125,   126,   127,    97,   298,  1219,     0,
     0,     0,   101,   102,   103,   104,   105,   106,   107,   108,
   109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
   119,   120,   121,   122,   123,   124,  1054,     0,  1056,   955,
     0,     0,     0,     0,     0,     0,     0,     0,     0,  1063,
  1064,  1065,     0,     0,     0,  1069,  1070,  1071,  1072,  1073,
  1074,  1075,    97,   298,   207,     0,     0,     0,   101,   102,
   103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
   113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
   123,   124,     0,   125,   126,   127,    97,   529,     0,     0,
     0,     0,   101,   102,   103,   104,   105,   106,   107,   108,
   109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
   119,   120,   121,   122,   123,   124,   313,   314,   315,   316,
   317,     0,   318,   319,   320,   321,   322,   323,   324,   325,
   326,   128,   129,   130,   131,     0,   327,     0,   488,     0,
     0,     0,     0,   549,     0,   132,   133,     0,     0,     0,
     0,   134,   135,   136,     0,     0,   137,     0,   138,  1166,
   139,   140,   313,   314,   315,   316,   317,     0,   318,   319,
   320,   321,   322,   323,   324,   325,   326,     0,     0,   132,
   133,     0,   327,     0,     0,   134,     0,     0,     0,  1222,
   137,  1223,     0,     0,     0,   140,     0,   313,   314,   315,
   316,   317,     0,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,     0,
     0,  1221,     0,     0,     0,     0,     0,     0,     0,  1231,
     0,     0,     0,     0,     0,   132,   133,     0,     0,     0,
     0,   134,     0,     0,     0,     0,   137,     0,  1250,     0,
     0,   140,   563,    27,    28,   564,   565,    31,   566,    33,
     0,    34,     0,    36,    37,    38,     0,    40,    41,   132,
   133,     0,     0,     0,     0,   134,     0,     0,     0,     0,
   137,     0,     0,     0,    53,   140,   563,    27,    28,   564,
   565,    31,   566,    33,     0,    34,     0,    36,    37,    38,
     0,    40,    41,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,    55,    56,    57,     0,     0,    53,     0,
     0,   563,    27,    28,   564,   565,    31,   566,    33,     0,
    34,    67,    36,    37,    38,     0,    40,    41,     0,     0,
     0,     0,     0,     0,     0,     0,     0,    55,    56,    57,
     0,     0,     0,    53,     0,   563,    27,    28,   564,   565,
    31,   566,    33,     0,    34,    67,    36,    37,    38,     0,
    40,    41,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,    55,    56,    57,     0,     0,    53,     0,     0,
     0,     0,     0,     0,     0,   313,   314,   315,   316,   317,
    67,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,    55,    56,    57,   567,
     0,     0,  1376,     0,  1377,     0,     0,     0,     0,     0,
     0,     0,     0,     0,    67,  1396,     0,  1397,     0,     0,
     0,  1401,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   572,     0,     0,     0,  1417,   563,    27,
    28,   564,   565,    31,   566,    33,     0,    34,     0,    36,
    37,    38,     0,    40,    41,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,   587,     0,
    53,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   -10,     1,     0,   -10,   -53,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,    55,
    56,    57,   588,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   -53,     0,     0,    67,   -53,   -53,
   -53,   -53,   -53,   -53,   -53,   -53,   -53,     0,   -53,   -53,
   -53,   -53,   -53,   -53,   -53,   -53,     0,     0,     0,   -53,
   -53,   -53,   -53,   -53,   -53,   -53,     0,   -53,   -53,   -53,
   -53,   -53,     0,     0,  1515,     0,   313,   314,   315,   316,
   317,  1520,   318,   319,   320,   321,   322,   323,   324,   325,
   326,     0,  1532,  1533,     0,     0,   327,     0,     0,   -53,
   -53,   -53,   -53,     0,     0,   764,     0,   -53,     0,   -53,
     0,   -53,   -53,   -53,   -53,   -53,   -53,   -53,   -53,   -53,
   -53,     0,     0,     0,     0,   802,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,  1575,     0,     0,   -10,
   -10,   -10,   -10,   -10,   -10,   -10,   -10,     0,     0,     0,
     0,     0,   214,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     2,     3,     0,     4,   628,   629,
   630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
   640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
   650,   651,   652,   653,     0,     0,     0,     0,     0,  1623,
     0,     0,     0,     0,  1630,   628,   629,   630,   631,   632,
   633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
   643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
   653,   215,   216,   217,     0,     0,     0,     0,     0,   218,
   219,   220,   221,   222,   223,   224,   225,   226,   227,     0,
     0,     0,     0,     0,     0,     0,     0,   228,   229,   230,
   231,   232,   233,   234,   235,   236,   237,     0,   238,   239,
   240,   241,   242,   243,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,    23,     0,     0,
     0,     0,     0,  1718,     0,     0,     0,     0,     0,     0,
     0,   654,     0,  1728,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,    24,     0,     0,     0,
    25,    26,    27,    28,    29,    30,    31,    32,    33,     0,
    34,    35,    36,    37,    38,    39,    40,    41,   999,     0,
     0,    42,    43,    44,    45,    46,    47,    48,     0,    49,
    50,    51,    52,    53,   563,    27,    28,   564,   565,    31,
   566,    33,     0,    34,     0,    36,    37,    38,     0,    40,
    41,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,    54,    55,    56,    57,     0,    53,     0,     0,    58,
     0,    59,  1803,    60,    61,    62,    63,    64,    65,    66,
    67,    68,    69,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,    55,    56,    57,   313,   314,
   315,   316,   317,     0,   318,   319,   320,   321,   322,   323,
   324,   325,   326,    67,     0,     0,     0,     0,   327,     0,
     0,     0,     0,     0,     0,     0,     0,   769,     0,     0,
     0,  1855,   313,   314,   315,   316,   317,     0,   318,   319,
   320,   321,   322,   323,   324,   325,   326,     0,     0,     0,
     0,     0,   327,     0,     0,     0,   313,   314,   315,   316,
   317,   770,   318,   319,   320,   321,   322,   323,   324,   325,
   326,     0,     0,     0,     0,     0,   327,     0,     0,     0,
     0,     0,     0,  1909,     0,   911,   313,   314,   315,   316,
   317,     0,   318,   319,   320,   321,   322,   323,   324,   325,
   326,     0,     0,     0,     0,     0,   327,     0,     0,     0,
   313,   314,   315,   316,   317,   935,   318,   319,   320,   321,
   322,   323,   324,   325,   326,     0,     0,     0,     0,     0,
   327,     0,     0,     0,     0,     0,  1954,     0,     0,  1196,
   313,   314,   315,   316,   317,     0,   318,   319,   320,   321,
   322,   323,   324,   325,   326,     0,     0,     0,     0,     0,
   327,     0,     0,     0,     0,     0,     0,     0,     0,  1399,
     0,     0,     0,     0,  1992,   313,   314,   315,   316,   317,
     0,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,     0,     0,   313,
   314,   315,   316,   317,  1400,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,     0,     0,   313,   314,   315,   316,   317,  1457,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,     0,     0,   313,   314,   315,
   316,   317,  1463,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,     0,
     0,   313,   314,   315,   316,   317,  1466,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,     0,     0,   313,   314,   315,   316,   317,
  1469,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,     0,     0,   313,
   314,   315,   316,   317,  1470,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,     0,     0,   313,   314,   315,   316,   317,  1516,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,     0,     0,   313,   314,   315,
   316,   317,  1577,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,     0,
     0,   313,   314,   315,   316,   317,  1580,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,     0,     0,   313,   314,   315,   316,   317,
  1582,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,     0,     0,   313,
   314,   315,   316,   317,  1828,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,     0,     0,   313,   314,   315,   316,   317,  1881,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
   549,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,   550,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,   581,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,   703,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,   704,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
   717,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,   718,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,   719,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,   720,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,   721,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
   722,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,   783,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,   784,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,   785,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,   933,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
   934,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,   954,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  1092,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  1093,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  1107,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  1108,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  1139,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  1140,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  1141,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  1142,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  1143,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  1144,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  1145,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  1146,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  1147,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  1148,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  1149,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  1150,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  1151,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  1152,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  1153,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  1154,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  1155,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  1156,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  1157,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  1158,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  1159,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  1160,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  1161,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  1162,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  1163,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  1164,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  1180,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  1296,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  1310,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  1311,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  1320,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  1323,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  1334,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  1339,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  1342,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  1344,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  1345,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  1346,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  1347,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  1348,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  1349,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  1350,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  1351,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  1352,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  1353,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  1354,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  1355,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  1356,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  1357,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  1358,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  1359,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  1360,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  1361,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  1362,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  1363,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  1364,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  1365,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  1366,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  1367,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  1368,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  1369,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  1373,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  1479,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  1491,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  1492,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  1493,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  1494,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  1495,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  1496,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  1497,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  1498,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  1499,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  1500,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  1501,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  1502,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  1503,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  1504,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  1505,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  1506,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  1507,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  1508,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  1509,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  1510,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  1511,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  1513,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  1595,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  1596,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  1597,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  1598,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  1599,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  1600,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  1601,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  1602,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  1603,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  1604,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  1605,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  1606,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  1607,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  1608,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  1609,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  1610,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  1611,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  1612,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  1613,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  1614,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  1615,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  1691,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  1692,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  1693,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  1694,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  1695,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  1696,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  1697,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  1698,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  1699,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  1700,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  1701,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  1702,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  1703,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  1704,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  1705,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  1706,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  1707,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  1708,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  1709,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  1710,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  1711,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  1768,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  1775,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  1776,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  1777,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  1778,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  1779,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  1780,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  1781,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  1782,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  1783,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  1784,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  1785,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  1786,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  1787,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  1788,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  1789,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  1790,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  1791,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  1792,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  1827,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  1835,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  1836,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  1837,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  1838,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  1839,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  1840,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  1841,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  1842,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  1843,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  1844,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  1845,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  1846,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  1847,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  1848,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  1849,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  1850,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  1851,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  1852,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  1890,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  1891,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  1892,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  1893,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  1894,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  1895,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  1896,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  1897,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  1898,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  1899,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  1900,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  1901,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  1902,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  1903,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  1904,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  1905,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  1906,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  1907,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  1939,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  1940,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  1941,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  1942,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  1943,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  1944,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  1945,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  1946,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  1947,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  1948,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  1949,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  1950,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  1951,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  1952,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  1953,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  1977,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  1978,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  1979,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  1980,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  1981,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  1982,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  1983,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  1984,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  1985,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  1986,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  1987,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  1988,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  1989,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  1990,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  1991,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  2021,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  2022,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  2023,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  2024,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  2025,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  2026,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  2027,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  2028,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  2029,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  2030,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  2031,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  2032,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  2033,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  2034,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  2035,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  2065,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  2066,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  2067,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  2068,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  2069,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  2070,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  2071,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  2072,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  2073,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  2096,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  2097,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  2098,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  2099,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  2100,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  2101,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  2102,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  2103,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  2104,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  2138,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  2139,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  2140,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  2141,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  2142,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  2143,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  2144,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  2145,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  2146,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  2168,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  2169,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  2170,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  2171,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  2172,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  2173,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  2186,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  2187,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  2188,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  2189,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  2190,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  2191,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  2207,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  2208,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  2209,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  2210,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  2211,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  2212,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  2231,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  2232,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  2233,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  2243,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  2244,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  2245,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  2258,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  2259,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  2260,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  2276,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  2277,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  2278,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  2282,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   313,
   314,   315,   316,   317,  2283,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   313,   314,   315,   316,   317,  2284,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   313,   314,   315,   316,   317,  2288,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   313,   314,   315,   316,   317,
  2289,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   313,   314,   315,
   316,   317,  2290,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,     0,
     0,   682,   313,   314,   315,   316,   317,     0,   318,   319,
   320,   321,   322,   323,   324,   325,   326,     0,     0,     0,
     0,     0,   327,     0,     0,     0,   684,   313,   314,   315,
   316,   317,     0,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,     0,
     0,   686,   313,   314,   315,   316,   317,     0,   318,   319,
   320,   321,   322,   323,   324,   325,   326,     0,     0,     0,
     0,     0,   327,     0,     0,     0,   688,   313,   314,   315,
   316,   317,     0,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,     0,
     0,   690,   313,   314,   315,   316,   317,     0,   318,   319,
   320,   321,   322,   323,   324,   325,   326,     0,     0,     0,
     0,     0,   327,     0,     0,     0,   692,   313,   314,   315,
   316,   317,     0,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,     0,
     0,   694,   313,   314,   315,   316,   317,     0,   318,   319,
   320,   321,   322,   323,   324,   325,   326,     0,     0,     0,
     0,     0,   327,     0,     0,     0,   696,   313,   314,   315,
   316,   317,     0,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,     0,
     0,   698,   313,   314,   315,   316,   317,     0,   318,   319,
   320,   321,   322,   323,   324,   325,   326,     0,     0,     0,
     0,     0,   327,     0,     0,     0,   700,   313,   314,   315,
   316,   317,     0,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,     0,
     0,   702,   313,   314,   315,   316,   317,     0,   318,   319,
   320,   321,   322,   323,   324,   325,   326,     0,     0,     0,
     0,     0,   327,     0,     0,     0,   706,   313,   314,   315,
   316,   317,     0,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,     0,
     0,   708,   313,   314,   315,   316,   317,     0,   318,   319,
   320,   321,   322,   323,   324,   325,   326,     0,     0,     0,
     0,     0,   327,     0,     0,     0,   710,   313,   314,   315,
   316,   317,     0,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,     0,
     0,   712,   313,   314,   315,   316,   317,     0,   318,   319,
   320,   321,   322,   323,   324,   325,   326,     0,     0,     0,
     0,     0,   327,     0,     0,     0,   714,   313,   314,   315,
   316,   317,     0,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,     0,
     0,   716,   313,   314,   315,   316,   317,     0,   318,   319,
   320,   321,   322,   323,   324,   325,   326,     0,     0,     0,
     0,     0,   327,     0,     0,     0,   786,   313,   314,   315,
   316,   317,     0,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,     0,
     0,   792,   313,   314,   315,   316,   317,     0,   318,   319,
   320,   321,   322,   323,   324,   325,   326,     0,     0,     0,
     0,     0,   327,     0,     0,     0,   883,   313,   314,   315,
   316,   317,     0,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,     0,
     0,  1027,   313,   314,   315,   316,   317,     0,   318,   319,
   320,   321,   322,   323,   324,   325,   326,     0,     0,     0,
     0,     0,   327,     0,     0,     0,  1029,   313,   314,   315,
   316,   317,     0,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,     0,
     0,  1031,   313,   314,   315,   316,   317,     0,   318,   319,
   320,   321,   322,   323,   324,   325,   326,     0,     0,     0,
     0,     0,   327,     0,     0,     0,  1033,   313,   314,   315,
   316,   317,     0,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,     0,
     0,  1034,   313,   314,   315,   316,   317,     0,   318,   319,
   320,   321,   322,   323,   324,   325,   326,     0,     0,     0,
     0,     0,   327,     0,     0,     0,  1173,   313,   314,   315,
   316,   317,     0,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   488,
   313,   314,   315,   316,   317,     0,   318,   319,   320,   321,
   322,   323,   324,   325,   326,     0,     0,     0,     0,     0,
   327,     0,   519,   313,   314,   315,   316,   317,     0,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   520,   313,   314,   315,   316,
   317,     0,   318,   319,   320,   321,   322,   323,   324,   325,
   326,     0,     0,     0,     0,     0,   327,     0,   521,   313,
   314,   315,   316,   317,     0,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   523,   313,   314,   315,   316,   317,     0,   318,   319,
   320,   321,   322,   323,   324,   325,   326,     0,     0,     0,
     0,     0,   327,     0,   525,   313,   314,   315,   316,   317,
     0,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   526,   313,   314,
   315,   316,   317,     0,   318,   319,   320,   321,   322,   323,
   324,   325,   326,     0,     0,     0,     0,     0,   327,     0,
   534,   313,   314,   315,   316,   317,     0,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   575,   313,   314,   315,   316,   317,     0,
   318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     0,     0,     0,     0,   327,     0,   576,   313,   314,   315,
   316,   317,     0,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   579,
   313,   314,   315,   316,   317,     0,   318,   319,   320,   321,
   322,   323,   324,   325,   326,     0,     0,     0,     0,     0,
   327,     0,   585,   313,   314,   315,   316,   317,     0,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   681,   313,   314,   315,   316,
   317,     0,   318,   319,   320,   321,   322,   323,   324,   325,
   326,     0,     0,     0,     0,     0,   327,     0,   683,   313,
   314,   315,   316,   317,     0,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   685,   313,   314,   315,   316,   317,     0,   318,   319,
   320,   321,   322,   323,   324,   325,   326,     0,     0,     0,
     0,     0,   327,     0,   687,   313,   314,   315,   316,   317,
     0,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   689,   313,   314,
   315,   316,   317,     0,   318,   319,   320,   321,   322,   323,
   324,   325,   326,     0,     0,     0,     0,     0,   327,     0,
   691,   313,   314,   315,   316,   317,     0,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   693,   313,   314,   315,   316,   317,     0,
   318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     0,     0,     0,     0,   327,     0,   695,   313,   314,   315,
   316,   317,     0,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   697,
   313,   314,   315,   316,   317,     0,   318,   319,   320,   321,
   322,   323,   324,   325,   326,     0,     0,     0,     0,     0,
   327,     0,   699,   313,   314,   315,   316,   317,     0,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   701,   313,   314,   315,   316,
   317,     0,   318,   319,   320,   321,   322,   323,   324,   325,
   326,     0,     0,     0,     0,     0,   327,     0,   705,   313,
   314,   315,   316,   317,     0,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   707,   313,   314,   315,   316,   317,     0,   318,   319,
   320,   321,   322,   323,   324,   325,   326,     0,     0,     0,
     0,     0,   327,     0,   709,   313,   314,   315,   316,   317,
     0,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   711,   313,   314,
   315,   316,   317,     0,   318,   319,   320,   321,   322,   323,
   324,   325,   326,     0,     0,     0,     0,     0,   327,     0,
   713,   313,   314,   315,   316,   317,     0,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   715,   313,   314,   315,   316,   317,     0,
   318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     0,     0,     0,     0,   327,     0,   750,   313,   314,   315,
   316,   317,     0,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   752,
   313,   314,   315,   316,   317,     0,   318,   319,   320,   321,
   322,   323,   324,   325,   326,     0,     0,     0,     0,     0,
   327,     0,   765,   313,   314,   315,   316,   317,     0,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,   766,   313,   314,   315,   316,
   317,     0,   318,   319,   320,   321,   322,   323,   324,   325,
   326,     0,     0,     0,     0,     0,   327,     0,   767,   313,
   314,   315,   316,   317,     0,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,   771,   313,   314,   315,   316,   317,     0,   318,   319,
   320,   321,   322,   323,   324,   325,   326,     0,     0,     0,
     0,     0,   327,     0,   772,   313,   314,   315,   316,   317,
     0,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,   773,   313,   314,
   315,   316,   317,     0,   318,   319,   320,   321,   322,   323,
   324,   325,   326,     0,     0,     0,     0,     0,   327,     0,
   774,   313,   314,   315,   316,   317,     0,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,   775,   313,   314,   315,   316,   317,     0,
   318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     0,     0,     0,     0,   327,     0,   798,   313,   314,   315,
   316,   317,     0,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,   805,
   313,   314,   315,   316,   317,     0,   318,   319,   320,   321,
   322,   323,   324,   325,   326,     0,     0,     0,     0,     0,
   327,     0,  1026,   313,   314,   315,   316,   317,     0,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,  1028,   313,   314,   315,   316,
   317,     0,   318,   319,   320,   321,   322,   323,   324,   325,
   326,     0,     0,     0,     0,     0,   327,     0,  1030,   313,
   314,   315,   316,   317,     0,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,  1032,   313,   314,   315,   316,   317,     0,   318,   319,
   320,   321,   322,   323,   324,   325,   326,     0,     0,     0,
     0,     0,   327,     0,  1096,   313,   314,   315,   316,   317,
     0,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,  1197,   313,   314,
   315,   316,   317,     0,   318,   319,   320,   321,   322,   323,
   324,   325,   326,     0,     0,     0,     0,     0,   327,     0,
  1226,   313,   314,   315,   316,   317,     0,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,  1329,   313,   314,   315,   316,   317,     0,
   318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     0,     0,     0,     0,   327,     0,  1333,   313,   314,   315,
   316,   317,     0,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,  1335,
   313,   314,   315,   316,   317,     0,   318,   319,   320,   321,
   322,   323,   324,   325,   326,     0,     0,     0,     0,     0,
   327,     0,  1453,   313,   314,   315,   316,   317,     0,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,  1482,   313,   314,   315,   316,
   317,     0,   318,   319,   320,   321,   322,   323,   324,   325,
   326,     0,     0,     0,     0,     0,   327,     0,  1484,   313,
   314,   315,   316,   317,     0,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,  1486,   313,   314,   315,   316,   317,     0,   318,   319,
   320,   321,   322,   323,   324,   325,   326,     0,     0,     0,
     0,     0,   327,     0,  1488,   313,   314,   315,   316,   317,
     0,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,  1489,   313,   314,
   315,   316,   317,     0,   318,   319,   320,   321,   322,   323,
   324,   325,   326,     0,     0,     0,     0,     0,   327,     0,
  1490,   313,   314,   315,   316,   317,     0,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,  1512,   313,   314,   315,   316,   317,     0,
   318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     0,     0,     0,     0,   327,     0,  1617,   313,   314,   315,
   316,   317,     0,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,  1772,
   313,   314,   315,   316,   317,     0,   318,   319,   320,   321,
   322,   323,   324,   325,   326,     0,     0,     0,     0,     0,
   327,     0,  1773,   313,   314,   315,   316,   317,     0,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,  1774,   313,   314,   315,   316,
   317,     0,   318,   319,   320,   321,   322,   323,   324,   325,
   326,     0,     0,     0,     0,     0,   327,     0,  1936,   313,
   314,   315,   316,   317,     0,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,  1937,   313,   314,   315,   316,   317,     0,   318,   319,
   320,   321,   322,   323,   324,   325,   326,     0,     0,     0,
     0,     0,   327,     0,  1938,   313,   314,   315,   316,   317,
     0,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,  2059,   313,   314,
   315,   316,   317,     0,   318,   319,   320,   321,   322,   323,
   324,   325,   326,     0,     0,     0,     0,     0,   327,     0,
  2060,   313,   314,   315,   316,   317,     0,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,  2061,   313,   314,   315,   316,   317,     0,
   318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     0,     0,     0,     0,   327,     0,  2062,   313,   314,   315,
   316,   317,     0,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,  2063,
   313,   314,   315,   316,   317,     0,   318,   319,   320,   321,
   322,   323,   324,   325,   326,     0,     0,     0,     0,     0,
   327,     0,  2064,   313,   314,   315,   316,   317,     0,   318,
   319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     0,     0,     0,   327,     0,  2174,   313,   314,   315,   316,
   317,     0,   318,   319,   320,   321,   322,   323,   324,   325,
   326,     0,     0,     0,     0,     0,   327,     0,  2175,   313,
   314,   315,   316,   317,     0,   318,   319,   320,   321,   322,
   323,   324,   325,   326,     0,     0,     0,     0,     0,   327,
     0,  2176,   313,   314,   315,   316,   317,     0,   318,   319,
   320,   321,   322,   323,   324,   325,   326,     0,     0,     0,
     0,     0,   327,     0,  2234,   313,   314,   315,   316,   317,
     0,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     0,     0,     0,     0,     0,   327,     0,  2235,   313,   314,
   315,   316,   317,     0,   318,   319,   320,   321,   322,   323,
   324,   325,   326,     0,     0,     0,     0,     0,   327,     0,
  2236,   313,   314,   315,   316,   317,     0,   318,   319,   320,
   321,   322,   323,   324,   325,   326,     0,     0,     0,     0,
     0,   327,     0,  2294,   313,   314,   315,   316,   317,     0,
   318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     0,     0,     0,     0,   327,     0,  2295,   313,   314,   315,
   316,   317,     0,   318,   319,   320,   321,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,   327,     0,  2296,
   313,   314,   315,   316,   317,     0,   318,   319,   320,   321,
   322,   323,   324,   325,   326,     0,     0,     0,     0,     0,
   327
};

static const short yycheck[] = {    23,
    95,   306,     7,    23,     7,   370,   741,   184,   341,     4,
   187,     4,  1114,     4,    44,    45,     4,     4,   103,     5,
    65,  1123,     4,     3,     8,    65,     5,    42,  1130,    66,
     6,   208,    66,   210,    71,     6,  1307,    71,  1309,     6,
    66,     4,     5,   167,    65,    71,    68,    69,    34,    35,
    36,  1216,     5,     7,    87,    34,    35,    36,   186,   187,
   193,   194,   198,     4,   186,   187,   199,   203,   201,    66,
     6,    34,    35,    36,    71,   203,   198,   205,    49,   186,
   187,    34,    35,    36,     4,   186,   187,     6,    66,     5,
   186,   187,   304,    71,   186,   187,   203,   197,   205,   199,
    38,     6,   203,    41,   205,   186,   187,   203,   132,   133,
   134,   203,   197,   137,   138,     6,   197,   141,    34,    35,
    36,   186,   187,   204,   148,   149,   150,   198,   152,   341,
   154,   155,   203,   157,   186,   187,   197,    66,   199,   204,
    66,   171,    71,   173,     6,    71,   198,   197,    66,   179,
   174,   175,   197,    71,     7,  1385,   197,   197,  1323,  1389,
   895,     6,  1392,   204,   204,   106,   107,    65,   205,   193,
   194,   205,   196,     6,   198,     7,    66,   201,   202,   205,
   213,    71,   197,   204,   197,   518,   106,   107,   197,   494,
   199,   204,   176,   177,   178,   179,   180,   530,   182,   183,
   184,   185,   186,   187,   188,   189,   190,   187,   205,   204,
     6,   204,   196,   204,   391,   197,   204,   204,   204,   186,
   187,   251,  1324,   199,   248,   204,  1328,   205,   197,   253,
   254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
   264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
   274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
   284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
   294,     8,   197,   295,   296,   297,   205,   193,   194,   205,
   304,   186,   187,   198,   197,   201,   306,   205,   203,   313,
   314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
   324,   325,   326,   327,   197,  1576,   518,    46,  1579,   333,
  1581,   335,  1047,     7,   197,   205,   340,   341,   530,   172,
   173,   174,   175,    42,   198,   349,   350,   351,   352,   203,
   354,   355,   356,   357,   358,   359,   360,   367,   368,   198,
   172,   173,   174,   175,   203,   197,   193,   194,   372,   373,
   374,   375,   186,   187,   201,   379,   186,   187,   197,     6,
   199,   193,   194,   387,   369,   370,   369,   370,   197,   201,
   204,   197,   396,   203,  1476,  1477,  1478,  1479,   186,   187,
   197,  1483,   186,   187,   197,     7,   186,   187,   186,   187,
  1620,   204,    42,   726,  1624,    44,   204,  1627,    42,   203,
  1671,   193,   194,   203,  1675,   203,  1677,   199,    55,   201,
     6,     7,   186,   187,   193,   194,     8,   197,   438,   199,
   199,    38,   201,   756,    41,    42,     3,   179,   180,   203,
   182,   183,   184,   185,   186,   187,   188,   189,   190,   176,
   177,   178,   179,   180,   196,   182,   183,   184,   185,   186,
   187,   188,   189,   190,   787,   788,   789,   790,    42,   196,
   186,   187,   198,   487,   193,   194,   490,   203,   205,   186,
   187,    66,   496,   495,   494,     8,    71,   203,   172,   173,
   174,   175,    56,    57,  1586,  1587,   203,  1717,  1590,   193,
   194,  1721,   197,  1723,   518,   199,   197,   201,   199,   193,
   194,     6,     7,   527,   528,   204,   530,    38,   532,   533,
    41,    42,   204,    44,   726,   539,    42,     6,   548,   731,
   188,   189,   190,     6,     4,   549,   550,   197,   196,   176,
   177,   178,   179,   180,   558,   182,   183,   184,   185,   186,
   187,   188,   189,   190,   756,   197,   570,   199,     4,   196,
   172,   173,   174,   175,   197,  1290,   199,   581,   197,   583,
   584,   138,   139,   140,   141,   142,   143,   144,   145,   197,
     6,   193,   194,    42,     4,   787,   788,   789,   790,  1681,
   913,     3,   887,   888,   176,   177,   178,   179,   180,   197,
   182,   183,   184,   185,   186,   187,   188,   189,   190,   197,
   197,   199,   199,   625,   196,   625,   198,   186,   187,   188,
   189,   190,     5,     3,     4,    41,    42,   196,    44,     9,
    10,    11,    12,    13,    14,    15,    16,    17,    18,    19,
    20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
    30,    31,    32,   176,   177,   178,   179,   180,    38,   182,
   183,   184,   185,   186,   187,   188,   189,   190,   197,    59,
    60,    61,    62,   196,    64,   197,     6,   199,  1770,    59,
    60,    61,    62,    63,    64,   197,     6,   199,   197,   703,
   704,   123,   124,   125,   126,   127,   197,   197,   199,   199,
   197,   197,   199,   717,   718,   719,   720,   721,   722,   723,
     4,   913,   726,     6,     6,   727,   197,   731,   199,   197,
   734,   199,   197,   197,   199,   199,  1081,   747,     5,   197,
   744,   199,   197,   199,   199,   201,   203,   197,   205,  1831,
   197,   203,   756,   205,   758,   182,   183,   184,   185,   186,
   187,   188,   189,   190,   839,   203,   203,   205,   205,   196,
   203,     4,   205,   783,   784,   785,   204,   203,   203,   205,
   205,   204,   197,   787,   788,   789,   790,     6,   197,   793,
   794,   204,   203,   797,   205,   203,   203,   205,   205,   203,
   810,   205,     6,   197,   808,   809,   203,   197,   205,   819,
   203,   203,   205,   205,   197,   197,   186,   187,   203,   203,
   205,   205,   192,   204,   203,   197,   205,   197,   203,   203,
   205,   205,   202,   197,   204,   203,   203,   205,   205,   204,
   844,   845,   846,   847,   848,   849,   850,   851,   852,   853,
   854,   855,   856,   857,   858,   859,   860,   861,   862,   863,
   864,   865,   866,   867,   868,   869,   176,   177,   178,   179,
   180,   204,   182,   183,   184,   185,   186,   187,   188,   189,
   190,     6,   203,   883,   205,   203,   196,   205,   888,   203,
   199,   205,   896,   201,   176,   177,   178,   179,   180,   204,
   182,   183,   184,   185,   186,   187,   188,   189,   190,   913,
   203,   915,   205,   917,   196,   178,   179,   180,   109,   182,
   183,   184,   185,   186,   187,   188,   189,   190,   932,   933,
   934,     6,  2014,   196,   203,   203,   205,   205,   203,   203,
   205,   205,   203,   203,   205,   205,   959,   203,   197,   205,
   954,   955,   956,   203,     6,   205,  1301,   176,   177,   178,
   179,   180,     6,   182,   183,   184,   185,   186,   187,   188,
   189,   190,   176,   177,   178,   179,   180,   196,   182,   183,
   184,   185,   186,   187,   188,   189,   190,   203,   203,   205,
   205,     6,   196,     5,     3,     4,   203,   997,   205,   197,
     9,    10,    11,    12,    13,    14,    15,    16,    17,    18,
    19,    20,    21,    22,    23,    24,    25,    26,    27,    28,
    29,    30,    31,    32,   203,   203,   205,   205,   197,     6,
   197,   197,   197,   197,   197,   197,  1040,  1039,   197,   197,
   197,   197,  1052,   197,   197,   176,   177,   178,   179,   180,
   197,   182,   183,   184,   185,   186,   187,   188,   189,   190,
   197,  1136,  1066,  1067,  1068,   196,   198,   197,   197,   200,
   197,   197,  1082,  1077,  1084,  1077,  1086,   197,   197,   197,
   197,   197,   197,   197,   197,   197,   197,     4,  1092,  1093,
   196,     7,  1105,   203,   203,     7,  1081,   201,  1081,   199,
  1104,   204,     7,  1107,     7,   198,     7,     6,   104,     7,
   204,   106,   168,  1117,     5,     5,     5,     5,     5,     5,
  1124,  1125,  1126,     5,     5,     5,     5,  1131,     5,     5,
     5,  1135,     5,     5,     5,  1139,  1140,  1141,  1142,  1143,
  1144,  1145,  1146,  1147,  1148,  1149,  1150,  1151,  1152,  1153,
  1154,  1155,  1156,  1157,  1158,  1159,  1160,  1161,  1162,  1163,
  1164,   176,   177,   178,   179,   180,     5,   182,   183,   184,
   185,   186,   187,   188,   189,   190,  1180,   186,   187,     5,
     5,   196,     5,   192,     5,     5,     5,   156,   197,     5,
     5,   200,     5,   202,  1198,   204,     5,     3,     5,   176,
   177,   178,   179,   180,     5,   182,   183,   184,   185,   186,
   187,   188,   189,   190,     6,  1228,     3,     4,  1222,   196,
  1224,     6,     9,    10,    11,    12,    13,    14,    15,    16,
    17,    18,    19,    20,    21,    22,    23,    24,    25,    26,
    27,    28,    29,    30,    31,    32,     3,     4,   203,     5,
   198,     6,     9,    10,    11,    12,    13,    14,    15,    16,
    17,    18,    19,    20,    21,    22,    23,    24,    25,    26,
    27,    28,    29,    30,    31,    32,     4,   176,   177,   178,
   179,   180,   200,   182,   183,   184,   185,   186,   187,   188,
   189,   190,  1296,     6,  1304,     6,  1306,   196,  1308,     7,
  1304,     7,  1306,     7,  1308,     7,  1310,  1311,     7,     7,
     7,   205,   205,  1317,     7,     7,  1301,   201,  1301,   204,
     7,   204,  1326,   197,   169,   203,     5,     4,     6,   197,
  1334,   201,     6,   198,   203,  1339,   203,   203,  1342,   203,
  1344,  1345,  1346,  1347,  1348,  1349,  1350,  1351,  1352,  1353,
  1354,  1355,  1356,  1357,  1358,  1359,  1360,  1361,  1362,  1363,
  1364,  1365,  1366,  1367,  1368,  1369,   203,   203,   203,  1379,
   203,   203,  1376,   203,  1378,  1379,  1380,     6,     6,   203,
   197,   203,   200,   197,   176,   177,   178,   179,   180,  1402,
   182,   183,   184,   185,   186,   187,   188,   189,   190,   186,
   187,   203,     7,   203,   196,   192,   203,   203,   203,   203,
   197,   197,   203,   200,   203,   202,     6,   204,     7,   203,
   203,   203,   203,   203,   203,   203,   203,   203,   203,   186,
   187,   197,   197,   197,   197,   192,   197,   197,   197,   197,
   197,     7,   204,   200,   197,   202,   197,   204,   197,   197,
   197,   197,   197,   197,  1458,   197,   197,   197,     6,   197,
  1464,   197,  1475,  1467,   197,   176,   177,   178,   179,   180,
   199,   182,   183,   184,   185,   186,   187,   188,   189,   190,
     7,     7,     7,     7,     7,   196,     7,  1491,  1492,  1493,
  1494,  1495,  1496,  1497,  1498,  1499,  1500,  1501,  1502,  1503,
  1504,  1505,  1506,  1507,  1508,  1509,  1510,  1511,     7,  1513,
     7,     7,     7,     7,     4,     6,   165,     6,     4,     7,
     7,     3,  1535,     3,     3,     3,     4,   188,     3,     3,
     3,     9,    10,    11,    12,    13,    14,    15,    16,    17,
    18,    19,    20,    21,    22,    23,    24,    25,    26,    27,
    28,    29,    30,    31,    32,     3,     4,     3,     3,     3,
     3,     9,    10,    11,    12,    13,    14,    15,    16,    17,
    18,    19,    20,    21,    22,    23,    24,    25,    26,    27,
    28,    29,    30,    31,    32,     3,     3,     3,  1592,  1593,
  1594,  1595,  1596,  1597,  1598,  1599,  1600,  1601,  1602,  1603,
  1604,  1605,  1606,  1607,  1608,  1609,  1610,  1611,  1612,  1613,
  1614,  1615,     3,     5,  1616,     5,     3,     3,     6,  1632,
   198,     4,     6,   198,     6,   201,     7,   156,   176,   177,
   178,   179,   180,   162,   182,   183,   184,   185,   186,   187,
   188,   189,   190,     6,     6,     6,     6,     6,   196,   204,
   197,     6,     6,   105,   204,   198,   185,   203,   203,   203,
   198,   190,   191,   203,   198,     6,   203,  1680,   203,     6,
   203,   203,   203,   203,     4,  1679,   198,     6,   198,     6,
   198,  1685,   198,  1687,   203,  1689,   203,  1691,  1692,  1693,
  1694,  1695,  1696,  1697,  1698,  1699,  1700,  1701,  1702,  1703,
  1704,  1705,  1706,  1707,  1708,  1709,  1710,  1711,   186,   187,
  1712,   203,  1714,  1726,   192,     6,     6,   201,   203,   197,
   203,     6,   203,   200,   202,     6,   204,   203,     6,     6,
     6,   203,   203,   203,     6,     6,     6,     6,   186,   187,
     6,     6,     6,     4,   192,     8,     6,     6,     6,   197,
     6,     3,     7,   105,   202,     6,   204,     3,     6,   188,
     3,     6,     6,  1767,  1768,     6,     3,     6,     6,     3,
     6,  1775,  1776,  1777,  1778,  1779,  1780,  1781,  1782,  1783,
  1784,  1785,  1786,  1787,  1788,  1789,  1790,  1791,  1792,     3,
     3,  1793,   176,   177,   178,   179,   180,     3,   182,   183,
   184,   185,   186,   187,   188,   189,   190,     6,     6,     6,
   204,     7,   196,     6,     6,   204,   201,     6,   102,   107,
     8,   200,   198,  1827,   198,   205,   204,   204,  1832,  1833,
  1834,  1835,  1836,  1837,  1838,  1839,  1840,  1841,  1842,  1843,
  1844,  1845,  1846,  1847,  1848,  1849,  1850,  1851,  1852,   165,
     3,     4,   198,   204,   203,   203,     9,    10,    11,    12,
    13,    14,    15,    16,    17,    18,    19,    20,    21,    22,
    23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
  1884,   203,  1886,   203,  1888,    38,  1890,  1891,  1892,  1893,
  1894,  1895,  1896,  1897,  1898,  1899,  1900,  1901,  1902,  1903,
  1904,  1905,  1906,  1907,   203,   198,    59,    60,    61,    62,
    63,    64,   198,   176,   177,   178,   179,   180,   198,   182,
   183,   184,   185,   186,   187,   188,   189,   190,   203,   203,
   198,   198,   105,   196,     3,  1939,  1940,  1941,  1942,  1943,
  1944,  1945,  1946,  1947,  1948,  1949,  1950,  1951,  1952,  1953,
   203,     6,     6,     3,     6,     6,   205,     6,     6,     6,
   489,     6,     3,     6,     6,     5,     5,   198,     6,   204,
  1974,  1975,  1976,  1977,  1978,  1979,  1980,  1981,  1982,  1983,
  1984,  1985,  1986,  1987,  1988,  1989,  1990,  1991,   176,   177,
   178,   179,   180,   204,   182,   183,   184,   185,   186,   187,
   188,   189,   190,   203,   205,     6,     6,     6,   196,   203,
     6,  2015,   203,  2017,   198,  2019,   203,  2021,  2022,  2023,
  2024,  2025,  2026,  2027,  2028,  2029,  2030,  2031,  2032,  2033,
  2034,  2035,   203,   186,   187,   198,   203,   203,     6,   192,
     6,     6,     6,     6,   197,     6,     6,     6,     6,   202,
     6,     6,     5,     5,   204,   203,   205,   204,   204,   203,
   203,  2065,  2066,  2067,  2068,  2069,  2070,  2071,  2072,  2073,
   203,   198,   198,   203,   203,     6,   204,     6,     6,   204,
   204,   204,   203,     6,   102,   165,  2090,  2091,  2092,  2093,
  2094,  2095,  2096,  2097,  2098,  2099,  2100,  2101,  2102,  2103,
  2104,   176,   177,   178,   179,   180,     6,   182,   183,   184,
   185,   186,   187,   188,   189,   190,     6,     5,     5,   204,
   204,   196,  2126,   204,  2128,   200,  2130,   205,  2132,   203,
  2134,   204,  2136,   203,  2138,  2139,  2140,  2141,  2142,  2143,
  2144,  2145,  2146,   176,   177,   178,   179,   180,   204,   182,
   183,   184,   185,   186,   187,   188,   189,   190,     6,   205,
     6,   198,   198,   196,  2168,  2169,  2170,  2171,  2172,  2173,
   203,     6,   205,     6,     6,   102,     6,     6,     6,     6,
     6,     6,  2186,  2187,  2188,  2189,  2190,  2191,  2192,  2193,
  2194,   205,   204,   203,   203,     6,     6,     6,     6,   170,
     6,   171,   204,  2207,  2208,  2209,  2210,  2211,  2212,  2213,
   203,  2215,   203,  2217,   204,   204,     6,   203,   198,   748,
   749,     6,   751,     6,   753,   754,     6,  2231,  2232,  2233,
     6,     6,   204,     6,   203,     6,   203,     6,     6,  2243,
  2244,  2245,  2246,  2247,  2248,     6,     6,   204,   198,     6,
   204,     6,   203,     6,  2258,  2259,  2260,  2261,   204,  2263,
   204,  2265,   204,   204,   204,   204,   795,   796,     6,   204,
   799,   204,  2276,  2277,  2278,     6,     6,     6,  2282,  2283,
  2284,     6,   204,   204,  2288,  2289,  2290,   816,   817,   204,
   204,     6,     6,   822,   823,   204,  2300,  2301,  2302,   204,
   829,   204,   831,     6,     6,  2309,     6,  2311,     0,  2313,
     0,     7,     3,     4,     5,   627,     7,  1043,     9,    10,
    11,    12,    13,    14,    15,    16,    17,    18,    19,    20,
    21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
    31,    32,     7,    34,    35,    36,     3,     4,  1098,    -1,
    -1,    -1,     9,    10,    11,    12,    13,    14,    15,    16,
    17,    18,    19,    20,    21,    22,    23,    24,    25,    26,
    27,    28,    29,    30,    31,    32,   905,    -1,   907,     8,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   918,
   919,   920,    -1,    -1,    -1,   924,   925,   926,   927,   928,
   929,   930,     3,     4,     5,    -1,    -1,    -1,     9,    10,
    11,    12,    13,    14,    15,    16,    17,    18,    19,    20,
    21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
    31,    32,    -1,    34,    35,    36,     3,     4,    -1,    -1,
    -1,    -1,     9,    10,    11,    12,    13,    14,    15,    16,
    17,    18,    19,    20,    21,    22,    23,    24,    25,    26,
    27,    28,    29,    30,    31,    32,   176,   177,   178,   179,
   180,    -1,   182,   183,   184,   185,   186,   187,   188,   189,
   190,   172,   173,   174,   175,    -1,   196,    -1,   198,    -1,
    -1,    -1,    -1,   203,    -1,   186,   187,    -1,    -1,    -1,
    -1,   192,   193,   194,    -1,    -1,   197,    -1,   199,  1038,
   201,   202,   176,   177,   178,   179,   180,    -1,   182,   183,
   184,   185,   186,   187,   188,   189,   190,    -1,    -1,   186,
   187,    -1,   196,    -1,    -1,   192,    -1,    -1,    -1,   203,
   197,   205,    -1,    -1,    -1,   202,    -1,   176,   177,   178,
   179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,
    -1,  1100,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1108,
    -1,    -1,    -1,    -1,    -1,   186,   187,    -1,    -1,    -1,
    -1,   192,    -1,    -1,    -1,    -1,   197,    -1,  1127,    -1,
    -1,   202,    38,    39,    40,    41,    42,    43,    44,    45,
    -1,    47,    -1,    49,    50,    51,    -1,    53,    54,   186,
   187,    -1,    -1,    -1,    -1,   192,    -1,    -1,    -1,    -1,
   197,    -1,    -1,    -1,    70,   202,    38,    39,    40,    41,
    42,    43,    44,    45,    -1,    47,    -1,    49,    50,    51,
    -1,    53,    54,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    99,   100,   101,    -1,    -1,    70,    -1,
    -1,    38,    39,    40,    41,    42,    43,    44,    45,    -1,
    47,   117,    49,    50,    51,    -1,    53,    54,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,   100,   101,
    -1,    -1,    -1,    70,    -1,    38,    39,    40,    41,    42,
    43,    44,    45,    -1,    47,   117,    49,    50,    51,    -1,
    53,    54,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    99,   100,   101,    -1,    -1,    70,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,   176,   177,   178,   179,   180,
   117,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    99,   100,   101,   205,
    -1,    -1,   203,    -1,   205,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,   117,  1314,    -1,  1316,    -1,    -1,
    -1,  1320,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,   205,    -1,    -1,    -1,  1336,    38,    39,
    40,    41,    42,    43,    44,    45,    -1,    47,    -1,    49,
    50,    51,    -1,    53,    54,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   205,    -1,
    70,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,     0,     1,    -1,     3,     4,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,
   100,   101,   205,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    33,    -1,    -1,   117,    37,    38,
    39,    40,    41,    42,    43,    44,    45,    -1,    47,    48,
    49,    50,    51,    52,    53,    54,    -1,    -1,    -1,    58,
    59,    60,    61,    62,    63,    64,    -1,    66,    67,    68,
    69,    70,    -1,    -1,  1453,    -1,   176,   177,   178,   179,
   180,  1460,   182,   183,   184,   185,   186,   187,   188,   189,
   190,    -1,  1471,  1472,    -1,    -1,   196,    -1,    -1,    98,
    99,   100,   101,    -1,    -1,   205,    -1,   106,    -1,   108,
    -1,   110,   111,   112,   113,   114,   115,   116,   117,   118,
   119,    -1,    -1,    -1,    -1,   205,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,  1515,    -1,    -1,   138,
   139,   140,   141,   142,   143,   144,   145,    -1,    -1,    -1,
    -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,   163,   164,    -1,   166,    72,    73,
    74,    75,    76,    77,    78,    79,    80,    81,    82,    83,
    84,    85,    86,    87,    88,    89,    90,    91,    92,    93,
    94,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,  1578,
    -1,    -1,    -1,    -1,  1583,    72,    73,    74,    75,    76,
    77,    78,    79,    80,    81,    82,    83,    84,    85,    86,
    87,    88,    89,    90,    91,    92,    93,    94,    95,    96,
    97,   120,   121,   122,    -1,    -1,    -1,    -1,    -1,   128,
   129,   130,   131,   132,   133,   134,   135,   136,   137,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,
   149,   150,   151,   152,   153,   154,   155,    -1,   157,   158,
   159,   160,   161,   162,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,     4,    -1,    -1,
    -1,    -1,    -1,  1672,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,   205,    -1,  1682,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    33,    -1,    -1,    -1,
    37,    38,    39,    40,    41,    42,    43,    44,    45,    -1,
    47,    48,    49,    50,    51,    52,    53,    54,   205,    -1,
    -1,    58,    59,    60,    61,    62,    63,    64,    -1,    66,
    67,    68,    69,    70,    38,    39,    40,    41,    42,    43,
    44,    45,    -1,    47,    -1,    49,    50,    51,    -1,    53,
    54,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    98,    99,   100,   101,    -1,    70,    -1,    -1,   106,
    -1,   108,  1771,   110,   111,   112,   113,   114,   115,   116,
   117,   118,   119,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    99,   100,   101,   176,   177,
   178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
   188,   189,   190,   117,    -1,    -1,    -1,    -1,   196,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,   205,    -1,    -1,
    -1,  1830,   176,   177,   178,   179,   180,    -1,   182,   183,
   184,   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,
    -1,    -1,   196,    -1,    -1,    -1,   176,   177,   178,   179,
   180,   205,   182,   183,   184,   185,   186,   187,   188,   189,
   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,
    -1,    -1,    -1,  1882,    -1,   205,   176,   177,   178,   179,
   180,    -1,   182,   183,   184,   185,   186,   187,   188,   189,
   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,
   176,   177,   178,   179,   180,   205,   182,   183,   184,   185,
   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,
   196,    -1,    -1,    -1,    -1,    -1,  1935,    -1,    -1,   205,
   176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,
   196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   205,
    -1,    -1,    -1,    -1,  1973,   176,   177,   178,   179,   180,
    -1,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,   176,
   177,   178,   179,   180,   205,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,    -1,    -1,   176,   177,   178,   179,   180,   205,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,    -1,    -1,   176,   177,   178,
   179,   180,   205,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,
    -1,   176,   177,   178,   179,   180,   205,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,    -1,    -1,   176,   177,   178,   179,   180,
   205,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,   176,
   177,   178,   179,   180,   205,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,    -1,    -1,   176,   177,   178,   179,   180,   205,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,    -1,    -1,   176,   177,   178,
   179,   180,   205,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,
    -1,   176,   177,   178,   179,   180,   205,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,    -1,    -1,   176,   177,   178,   179,   180,
   205,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,   176,
   177,   178,   179,   180,   205,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,    -1,    -1,   176,   177,   178,   179,   180,   205,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,
   177,   178,   179,   180,   203,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   176,   177,   178,   179,   180,   203,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   176,   177,   178,   179,   180,   203,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   176,   177,   178,   179,   180,
   203,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   176,   177,   178,
   179,   180,   203,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,
    -1,   200,   176,   177,   178,   179,   180,    -1,   182,   183,
   184,   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,
    -1,    -1,   196,    -1,    -1,    -1,   200,   176,   177,   178,
   179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,
    -1,   200,   176,   177,   178,   179,   180,    -1,   182,   183,
   184,   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,
    -1,    -1,   196,    -1,    -1,    -1,   200,   176,   177,   178,
   179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,
    -1,   200,   176,   177,   178,   179,   180,    -1,   182,   183,
   184,   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,
    -1,    -1,   196,    -1,    -1,    -1,   200,   176,   177,   178,
   179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,
    -1,   200,   176,   177,   178,   179,   180,    -1,   182,   183,
   184,   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,
    -1,    -1,   196,    -1,    -1,    -1,   200,   176,   177,   178,
   179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,
    -1,   200,   176,   177,   178,   179,   180,    -1,   182,   183,
   184,   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,
    -1,    -1,   196,    -1,    -1,    -1,   200,   176,   177,   178,
   179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,
    -1,   200,   176,   177,   178,   179,   180,    -1,   182,   183,
   184,   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,
    -1,    -1,   196,    -1,    -1,    -1,   200,   176,   177,   178,
   179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,
    -1,   200,   176,   177,   178,   179,   180,    -1,   182,   183,
   184,   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,
    -1,    -1,   196,    -1,    -1,    -1,   200,   176,   177,   178,
   179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,
    -1,   200,   176,   177,   178,   179,   180,    -1,   182,   183,
   184,   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,
    -1,    -1,   196,    -1,    -1,    -1,   200,   176,   177,   178,
   179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,
    -1,   200,   176,   177,   178,   179,   180,    -1,   182,   183,
   184,   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,
    -1,    -1,   196,    -1,    -1,    -1,   200,   176,   177,   178,
   179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,
    -1,   200,   176,   177,   178,   179,   180,    -1,   182,   183,
   184,   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,
    -1,    -1,   196,    -1,    -1,    -1,   200,   176,   177,   178,
   179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,
    -1,   200,   176,   177,   178,   179,   180,    -1,   182,   183,
   184,   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,
    -1,    -1,   196,    -1,    -1,    -1,   200,   176,   177,   178,
   179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,
    -1,   200,   176,   177,   178,   179,   180,    -1,   182,   183,
   184,   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,
    -1,    -1,   196,    -1,    -1,    -1,   200,   176,   177,   178,
   179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,
    -1,   200,   176,   177,   178,   179,   180,    -1,   182,   183,
   184,   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,
    -1,    -1,   196,    -1,    -1,    -1,   200,   176,   177,   178,
   179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   198,
   176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,
   196,    -1,   198,   176,   177,   178,   179,   180,    -1,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   198,   176,   177,   178,   179,
   180,    -1,   182,   183,   184,   185,   186,   187,   188,   189,
   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   198,   176,
   177,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   198,   176,   177,   178,   179,   180,    -1,   182,   183,
   184,   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,
    -1,    -1,   196,    -1,   198,   176,   177,   178,   179,   180,
    -1,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   198,   176,   177,
   178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,
   198,   176,   177,   178,   179,   180,    -1,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   198,   176,   177,   178,   179,   180,    -1,
   182,   183,   184,   185,   186,   187,   188,   189,   190,    -1,
    -1,    -1,    -1,    -1,   196,    -1,   198,   176,   177,   178,
   179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   198,
   176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,
   196,    -1,   198,   176,   177,   178,   179,   180,    -1,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   198,   176,   177,   178,   179,
   180,    -1,   182,   183,   184,   185,   186,   187,   188,   189,
   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   198,   176,
   177,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   198,   176,   177,   178,   179,   180,    -1,   182,   183,
   184,   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,
    -1,    -1,   196,    -1,   198,   176,   177,   178,   179,   180,
    -1,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   198,   176,   177,
   178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,
   198,   176,   177,   178,   179,   180,    -1,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   198,   176,   177,   178,   179,   180,    -1,
   182,   183,   184,   185,   186,   187,   188,   189,   190,    -1,
    -1,    -1,    -1,    -1,   196,    -1,   198,   176,   177,   178,
   179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   198,
   176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,
   196,    -1,   198,   176,   177,   178,   179,   180,    -1,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   198,   176,   177,   178,   179,
   180,    -1,   182,   183,   184,   185,   186,   187,   188,   189,
   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   198,   176,
   177,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   198,   176,   177,   178,   179,   180,    -1,   182,   183,
   184,   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,
    -1,    -1,   196,    -1,   198,   176,   177,   178,   179,   180,
    -1,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   198,   176,   177,
   178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,
   198,   176,   177,   178,   179,   180,    -1,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   198,   176,   177,   178,   179,   180,    -1,
   182,   183,   184,   185,   186,   187,   188,   189,   190,    -1,
    -1,    -1,    -1,    -1,   196,    -1,   198,   176,   177,   178,
   179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   198,
   176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,
   196,    -1,   198,   176,   177,   178,   179,   180,    -1,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   198,   176,   177,   178,   179,
   180,    -1,   182,   183,   184,   185,   186,   187,   188,   189,
   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   198,   176,
   177,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   198,   176,   177,   178,   179,   180,    -1,   182,   183,
   184,   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,
    -1,    -1,   196,    -1,   198,   176,   177,   178,   179,   180,
    -1,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   198,   176,   177,
   178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,
   198,   176,   177,   178,   179,   180,    -1,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   198,   176,   177,   178,   179,   180,    -1,
   182,   183,   184,   185,   186,   187,   188,   189,   190,    -1,
    -1,    -1,    -1,    -1,   196,    -1,   198,   176,   177,   178,
   179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   198,
   176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,
   196,    -1,   198,   176,   177,   178,   179,   180,    -1,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   198,   176,   177,   178,   179,
   180,    -1,   182,   183,   184,   185,   186,   187,   188,   189,
   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   198,   176,
   177,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   198,   176,   177,   178,   179,   180,    -1,   182,   183,
   184,   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,
    -1,    -1,   196,    -1,   198,   176,   177,   178,   179,   180,
    -1,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   198,   176,   177,
   178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,
   198,   176,   177,   178,   179,   180,    -1,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   198,   176,   177,   178,   179,   180,    -1,
   182,   183,   184,   185,   186,   187,   188,   189,   190,    -1,
    -1,    -1,    -1,    -1,   196,    -1,   198,   176,   177,   178,
   179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   198,
   176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,
   196,    -1,   198,   176,   177,   178,   179,   180,    -1,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   198,   176,   177,   178,   179,
   180,    -1,   182,   183,   184,   185,   186,   187,   188,   189,
   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   198,   176,
   177,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   198,   176,   177,   178,   179,   180,    -1,   182,   183,
   184,   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,
    -1,    -1,   196,    -1,   198,   176,   177,   178,   179,   180,
    -1,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   198,   176,   177,
   178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,
   198,   176,   177,   178,   179,   180,    -1,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   198,   176,   177,   178,   179,   180,    -1,
   182,   183,   184,   185,   186,   187,   188,   189,   190,    -1,
    -1,    -1,    -1,    -1,   196,    -1,   198,   176,   177,   178,
   179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   198,
   176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,
   196,    -1,   198,   176,   177,   178,   179,   180,    -1,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   198,   176,   177,   178,   179,
   180,    -1,   182,   183,   184,   185,   186,   187,   188,   189,
   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   198,   176,
   177,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   198,   176,   177,   178,   179,   180,    -1,   182,   183,
   184,   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,
    -1,    -1,   196,    -1,   198,   176,   177,   178,   179,   180,
    -1,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   198,   176,   177,
   178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,
   198,   176,   177,   178,   179,   180,    -1,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   198,   176,   177,   178,   179,   180,    -1,
   182,   183,   184,   185,   186,   187,   188,   189,   190,    -1,
    -1,    -1,    -1,    -1,   196,    -1,   198,   176,   177,   178,
   179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   198,
   176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,
   196,    -1,   198,   176,   177,   178,   179,   180,    -1,   182,
   183,   184,   185,   186,   187,   188,   189,   190,    -1,    -1,
    -1,    -1,    -1,   196,    -1,   198,   176,   177,   178,   179,
   180,    -1,   182,   183,   184,   185,   186,   187,   188,   189,
   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   198,   176,
   177,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,
    -1,   198,   176,   177,   178,   179,   180,    -1,   182,   183,
   184,   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,
    -1,    -1,   196,    -1,   198,   176,   177,   178,   179,   180,
    -1,   182,   183,   184,   185,   186,   187,   188,   189,   190,
    -1,    -1,    -1,    -1,    -1,   196,    -1,   198,   176,   177,
   178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
   188,   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,
   198,   176,   177,   178,   179,   180,    -1,   182,   183,   184,
   185,   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,
    -1,   196,    -1,   198,   176,   177,   178,   179,   180,    -1,
   182,   183,   184,   185,   186,   187,   188,   189,   190,    -1,
    -1,    -1,    -1,    -1,   196,    -1,   198,   176,   177,   178,
   179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
   189,   190,    -1,    -1,    -1,    -1,    -1,   196,    -1,   198,
   176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
   186,   187,   188,   189,   190,    -1,    -1,    -1,    -1,    -1,
   196
};
/* -*-C-*-  Note some compilers choke on comments on `#line' lines.  */
#line 3 "/usr/share/bison.simple"
/* This file comes from bison-1.28.  */

/* Skeleton output parser for bison,
   Copyright (C) 1984, 1989, 1990 Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */

/* As a special exception, when this file is copied by Bison into a
   Bison output file, you may use that output file without restriction.
   This special exception was added by the Free Software Foundation
   in version 1.24 of Bison.  */

/* This is the parser code that is written into each bison parser
  when the %semantic_parser declaration is not specified in the grammar.
  It was written by Richard Stallman by simplifying the hairy parser
  used when %semantic_parser is specified.  */

#ifndef YYSTACK_USE_ALLOCA
#ifdef alloca
#define YYSTACK_USE_ALLOCA
#else /* alloca not defined */
#ifdef __GNUC__
#define YYSTACK_USE_ALLOCA
#define alloca __builtin_alloca
#else /* not GNU C.  */
#if (!defined (__STDC__) && defined (sparc)) || defined (__sparc__) || defined (__sparc) || defined (__sgi) || (defined (__sun) && defined (__i386))
#define YYSTACK_USE_ALLOCA
#include <alloca.h>
#else /* not sparc */
/* We think this test detects Watcom and Microsoft C.  */
/* This used to test MSDOS, but that is a bad idea
   since that symbol is in the user namespace.  */
#if (defined (_MSDOS) || defined (_MSDOS_)) && !defined (__TURBOC__)
#if 0 /* No need for malloc.h, which pollutes the namespace;
	 instead, just don't use alloca.  */
#include <malloc.h>
#endif
#else /* not MSDOS, or __TURBOC__ */
#if defined(_AIX)
/* I don't know what this was needed for, but it pollutes the namespace.
   So I turned it off.   rms, 2 May 1997.  */
/* #include <malloc.h>  */
 #pragma alloca
#define YYSTACK_USE_ALLOCA
#else /* not MSDOS, or __TURBOC__, or _AIX */
#if 0
#ifdef __hpux /* haible@ilog.fr says this works for HPUX 9.05 and up,
		 and on HPUX 10.  Eventually we can turn this on.  */
#define YYSTACK_USE_ALLOCA
#define alloca __builtin_alloca
#endif /* __hpux */
#endif
#endif /* not _AIX */
#endif /* not MSDOS, or __TURBOC__ */
#endif /* not sparc */
#endif /* not GNU C */
#endif /* alloca not defined */
#endif /* YYSTACK_USE_ALLOCA not defined */

#ifdef YYSTACK_USE_ALLOCA
#define YYSTACK_ALLOC alloca
#else
#define YYSTACK_ALLOC malloc
#endif

/* Note: there must be only one dollar sign in this file.
   It is replaced by the list of actions, each action
   as one case of the switch.  */

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		-2
#define YYEOF		0
#define YYACCEPT	goto yyacceptlab
#define YYABORT 	goto yyabortlab
#define YYERROR		goto yyerrlab1
/* Like YYERROR except do call yyerror.
   This remains here temporarily to ease the
   transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */
#define YYFAIL		goto yyerrlab
#define YYRECOVERING()  (!!yyerrstatus)
#define YYBACKUP(token, value) \
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    { yychar = (token), yylval = (value);			\
      yychar1 = YYTRANSLATE (yychar);				\
      YYPOPSTACK;						\
      goto yybackup;						\
    }								\
  else								\
    { yyerror ("syntax error: cannot back up"); YYERROR; }	\
while (0)

#define YYTERROR	1
#define YYERRCODE	256

#ifndef YYPURE
#define YYLEX		yylex()
#endif

#ifdef YYPURE
#ifdef YYLSP_NEEDED
#ifdef YYLEX_PARAM
#define YYLEX		yylex(&yylval, &yylloc, YYLEX_PARAM)
#else
#define YYLEX		yylex(&yylval, &yylloc)
#endif
#else /* not YYLSP_NEEDED */
#ifdef YYLEX_PARAM
#define YYLEX		yylex(&yylval, YYLEX_PARAM)
#else
#define YYLEX		yylex(&yylval)
#endif
#endif /* not YYLSP_NEEDED */
#endif

/* If nonreentrant, generate the variables here */

#ifndef YYPURE

int	yychar;			/*  the lookahead symbol		*/
YYSTYPE	yylval;			/*  the semantic value of the		*/
				/*  lookahead symbol			*/

#ifdef YYLSP_NEEDED
YYLTYPE yylloc;			/*  location data for the lookahead	*/
				/*  symbol				*/
#endif

int yynerrs;			/*  number of parse errors so far       */
#endif  /* not YYPURE */

#if YYDEBUG != 0
int yydebug;			/*  nonzero means print parse trace	*/
/* Since this is uninitialized, it does not stop multiple parsers
   from coexisting.  */
#endif

/*  YYINITDEPTH indicates the initial size of the parser's stacks	*/

#ifndef	YYINITDEPTH
#define YYINITDEPTH 200
#endif

/*  YYMAXDEPTH is the maximum size the stacks can grow to
    (effective only if the built-in stack extension method is used).  */

#if YYMAXDEPTH == 0
#undef YYMAXDEPTH
#endif

#ifndef YYMAXDEPTH
#define YYMAXDEPTH 10000
#endif

/* Define __yy_memcpy.  Note that the size argument
   should be passed with type unsigned int, because that is what the non-GCC
   definitions require.  With GCC, __builtin_memcpy takes an arg
   of type size_t, but it can handle unsigned int.  */

#if __GNUC__ > 1		/* GNU C and GNU C++ define this.  */
#define __yy_memcpy(TO,FROM,COUNT)	__builtin_memcpy(TO,FROM,COUNT)
#else				/* not GNU C or C++ */
#ifndef __cplusplus

/* This is the most reliable way to avoid incompatibilities
   in available built-in functions on various systems.  */
static void
__yy_memcpy (to, from, count)
     char *to;
     char *from;
     unsigned int count;
{
  register char *f = from;
  register char *t = to;
  register int i = count;

  while (i-- > 0)
    *t++ = *f++;
}

#else /* __cplusplus */

/* This is the most reliable way to avoid incompatibilities
   in available built-in functions on various systems.  */
static void
__yy_memcpy (char *to, char *from, unsigned int count)
{
  register char *t = to;
  register char *f = from;
  register int i = count;

  while (i-- > 0)
    *t++ = *f++;
}

#endif
#endif

#line 217 "/usr/share/bison.simple"

/* The user can define YYPARSE_PARAM as the name of an argument to be passed
   into yyparse.  The argument should have type void *.
   It should actually point to an object.
   Grammar actions can access the variable by casting it
   to the proper pointer type.  */

#ifdef YYPARSE_PARAM
#ifdef __cplusplus
#define YYPARSE_PARAM_ARG void *YYPARSE_PARAM
#define YYPARSE_PARAM_DECL
#else /* not __cplusplus */
#define YYPARSE_PARAM_ARG YYPARSE_PARAM
#define YYPARSE_PARAM_DECL void *YYPARSE_PARAM;
#endif /* not __cplusplus */
#else /* not YYPARSE_PARAM */
#define YYPARSE_PARAM_ARG
#define YYPARSE_PARAM_DECL
#endif /* not YYPARSE_PARAM */

/* Prevent warning if -Wstrict-prototypes.  */
#ifdef __GNUC__
#ifdef YYPARSE_PARAM
int yyparse (void *);
#else
int yyparse (void);
#endif
#endif

int
yyparse(YYPARSE_PARAM_ARG)
     YYPARSE_PARAM_DECL
{
  register int yystate;
  register int yyn;
  register short *yyssp;
  register YYSTYPE *yyvsp;
  int yyerrstatus;	/*  number of tokens to shift before error messages enabled */
  int yychar1 = 0;		/*  lookahead token as an internal (translated) token number */

  short	yyssa[YYINITDEPTH];	/*  the state stack			*/
  YYSTYPE yyvsa[YYINITDEPTH];	/*  the semantic value stack		*/

  short *yyss = yyssa;		/*  refer to the stacks thru separate pointers */
  YYSTYPE *yyvs = yyvsa;	/*  to allow yyoverflow to reallocate them elsewhere */

#ifdef YYLSP_NEEDED
  YYLTYPE yylsa[YYINITDEPTH];	/*  the location stack			*/
  YYLTYPE *yyls = yylsa;
  YYLTYPE *yylsp;

#define YYPOPSTACK   (yyvsp--, yyssp--, yylsp--)
#else
#define YYPOPSTACK   (yyvsp--, yyssp--)
#endif

  int yystacksize = YYINITDEPTH;
  int yyfree_stacks = 0;

#ifdef YYPURE
  int yychar;
  YYSTYPE yylval;
  int yynerrs;
#ifdef YYLSP_NEEDED
  YYLTYPE yylloc;
#endif
#endif

  YYSTYPE yyval;		/*  the variable used to return		*/
				/*  semantic values from the action	*/
				/*  routines				*/

  int yylen;

#if YYDEBUG != 0
  if (yydebug)
    fprintf(stderr, "Starting parse\n");
#endif

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY;		/* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */

  yyssp = yyss - 1;
  yyvsp = yyvs;
#ifdef YYLSP_NEEDED
  yylsp = yyls;
#endif

/* Push a new state, which is found in  yystate  .  */
/* In all cases, when you get here, the value and location stacks
   have just been pushed. so pushing a state here evens the stacks.  */
yynewstate:

  *++yyssp = yystate;

  if (yyssp >= yyss + yystacksize - 1)
    {
      /* Give user a chance to reallocate the stack */
      /* Use copies of these so that the &'s don't force the real ones into memory. */
      YYSTYPE *yyvs1 = yyvs;
      short *yyss1 = yyss;
#ifdef YYLSP_NEEDED
      YYLTYPE *yyls1 = yyls;
#endif

      /* Get the current used size of the three stacks, in elements.  */
      int size = yyssp - yyss + 1;

#ifdef yyoverflow
      /* Each stack pointer address is followed by the size of
	 the data in use in that stack, in bytes.  */
#ifdef YYLSP_NEEDED
      /* This used to be a conditional around just the two extra args,
	 but that might be undefined if yyoverflow is a macro.  */
      yyoverflow("parser stack overflow",
		 &yyss1, size * sizeof (*yyssp),
		 &yyvs1, size * sizeof (*yyvsp),
		 &yyls1, size * sizeof (*yylsp),
		 &yystacksize);
#else
      yyoverflow("parser stack overflow",
		 &yyss1, size * sizeof (*yyssp),
		 &yyvs1, size * sizeof (*yyvsp),
		 &yystacksize);
#endif

      yyss = yyss1; yyvs = yyvs1;
#ifdef YYLSP_NEEDED
      yyls = yyls1;
#endif
#else /* no yyoverflow */
      /* Extend the stack our own way.  */
      if (yystacksize >= YYMAXDEPTH)
	{
	  yyerror("parser stack overflow");
	  if (yyfree_stacks)
	    {
	      free (yyss);
	      free (yyvs);
#ifdef YYLSP_NEEDED
	      free (yyls);
#endif
	    }
	  return 2;
	}
      yystacksize *= 2;
      if (yystacksize > YYMAXDEPTH)
	yystacksize = YYMAXDEPTH;
#ifndef YYSTACK_USE_ALLOCA
      yyfree_stacks = 1;
#endif
      yyss = (short *) YYSTACK_ALLOC (yystacksize * sizeof (*yyssp));
      __yy_memcpy ((char *)yyss, (char *)yyss1,
		   size * (unsigned int) sizeof (*yyssp));
      yyvs = (YYSTYPE *) YYSTACK_ALLOC (yystacksize * sizeof (*yyvsp));
      __yy_memcpy ((char *)yyvs, (char *)yyvs1,
		   size * (unsigned int) sizeof (*yyvsp));
#ifdef YYLSP_NEEDED
      yyls = (YYLTYPE *) YYSTACK_ALLOC (yystacksize * sizeof (*yylsp));
      __yy_memcpy ((char *)yyls, (char *)yyls1,
		   size * (unsigned int) sizeof (*yylsp));
#endif
#endif /* no yyoverflow */

      yyssp = yyss + size - 1;
      yyvsp = yyvs + size - 1;
#ifdef YYLSP_NEEDED
      yylsp = yyls + size - 1;
#endif

#if YYDEBUG != 0
      if (yydebug)
	fprintf(stderr, "Stack size increased to %d\n", yystacksize);
#endif

      if (yyssp >= yyss + yystacksize - 1)
	YYABORT;
    }

#if YYDEBUG != 0
  if (yydebug)
    fprintf(stderr, "Entering state %d\n", yystate);
#endif

  goto yybackup;
 yybackup:

/* Do appropriate processing given the current state.  */
/* Read a lookahead token if we need one and don't already have one.  */
/* yyresume: */

  /* First try to decide what to do without reference to lookahead token.  */

  yyn = yypact[yystate];
  if (yyn == YYFLAG)
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* yychar is either YYEMPTY or YYEOF
     or a valid token in external form.  */

  if (yychar == YYEMPTY)
    {
#if YYDEBUG != 0
      if (yydebug)
	fprintf(stderr, "Reading a token: ");
#endif
      yychar = YYLEX;
    }

  /* Convert token to internal form (in yychar1) for indexing tables with */

  if (yychar <= 0)		/* This means end of input. */
    {
      yychar1 = 0;
      yychar = YYEOF;		/* Don't call YYLEX any more */

#if YYDEBUG != 0
      if (yydebug)
	fprintf(stderr, "Now at end of input.\n");
#endif
    }
  else
    {
      yychar1 = YYTRANSLATE(yychar);

#if YYDEBUG != 0
      if (yydebug)
	{
	  fprintf (stderr, "Next token is %d (%s", yychar, yytname[yychar1]);
	  /* Give the individual parser a way to print the precise meaning
	     of a token, for further debugging info.  */
#ifdef YYPRINT
	  YYPRINT (stderr, yychar, yylval);
#endif
	  fprintf (stderr, ")\n");
	}
#endif
    }

  yyn += yychar1;
  if (yyn < 0 || yyn > YYLAST || yycheck[yyn] != yychar1)
    goto yydefault;

  yyn = yytable[yyn];

  /* yyn is what to do for this token type in this state.
     Negative => reduce, -yyn is rule number.
     Positive => shift, yyn is new state.
       New state is final state => don't bother to shift,
       just return success.
     0, or most negative number => error.  */

  if (yyn < 0)
    {
      if (yyn == YYFLAG)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }
  else if (yyn == 0)
    goto yyerrlab;

  if (yyn == YYFINAL)
    YYACCEPT;

  /* Shift the lookahead token.  */

#if YYDEBUG != 0
  if (yydebug)
    fprintf(stderr, "Shifting token %d (%s), ", yychar, yytname[yychar1]);
#endif

  /* Discard the token being shifted unless it is eof.  */
  if (yychar != YYEOF)
    yychar = YYEMPTY;

  *++yyvsp = yylval;
#ifdef YYLSP_NEEDED
  *++yylsp = yylloc;
#endif

  /* count tokens shifted since error; after three, turn off error status.  */
  if (yyerrstatus) yyerrstatus--;

  yystate = yyn;
  goto yynewstate;

/* Do the default action for the current state.  */
yydefault:

  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;

/* Do a reduction.  yyn is the number of a rule to reduce with.  */
yyreduce:
  yylen = yyr2[yyn];
  if (yylen > 0)
    yyval = yyvsp[1-yylen]; /* implement default value of the action */

#if YYDEBUG != 0
  if (yydebug)
    {
      int i;

      fprintf (stderr, "Reducing via rule %d (line %d), ",
	       yyn, yyrline[yyn]);

      /* Print the symbols being reduced, and their result.  */
      for (i = yyprhs[yyn]; yyrhs[i] > 0; i++)
	fprintf (stderr, "%s ", yytname[yyrhs[i]]);
      fprintf (stderr, " -> %s\n", yytname[yyr1[yyn]]);
    }
#endif


  switch (yyn) {

case 4:
#line 171 "Gmsh.y"
{ yyerrok ; return 1; ;
    break;}
case 5:
#line 177 "Gmsh.y"
{ yyval.d = yyvsp[0].d; ;
    break;}
case 6:
#line 178 "Gmsh.y"
{ yyval.d = -yyvsp[0].d; ;
    break;}
case 7:
#line 183 "Gmsh.y"
{
      yymsg(INFO, "STL file format");
      STL_Surf = Create_Surface(1, MSH_SURF_STL);
      STL_Surf->STL = new STL_Data;
      return 1;
    ;
    break;}
case 8:
#line 197 "Gmsh.y"
{
      STL_Surf->STL->Add_Facet(yyvsp[-12].d, yyvsp[-11].d, yyvsp[-10].d,
			       yyvsp[-8].d, yyvsp[-7].d, yyvsp[-6].d,
			       yyvsp[-4].d, yyvsp[-3].d, yyvsp[-2].d);
      return 1;
    ;
    break;}
case 9:
#line 204 "Gmsh.y"
{
      yymsg(INFO, "STL file format read");
      Tree_Add(THEM->Surfaces, &STL_Surf);
      return 1;
    ;
    break;}
case 12:
#line 219 "Gmsh.y"
{ return 1; ;
    break;}
case 13:
#line 220 "Gmsh.y"
{ return 1; ;
    break;}
case 14:
#line 221 "Gmsh.y"
{ return 1; ;
    break;}
case 15:
#line 226 "Gmsh.y"
{
      yymsg(INFO, "Step Iso-10303-21 file format");
      Create_Step_Solid_BRep();
    ;
    break;}
case 16:
#line 231 "Gmsh.y"
{
      yymsg(INFO, "Step Iso-10303-21 file format read");
      Resolve_BREP ();
    ;
    break;}
case 20:
#line 242 "Gmsh.y"
{
    ;
    break;}
case 21:
#line 245 "Gmsh.y"
{
    ;
    break;}
case 22:
#line 249 "Gmsh.y"
{
   ;
    break;}
case 23:
#line 255 "Gmsh.y"
{
        Add_Cartesian_Point((int)yyvsp[-8].d, yyvsp[-4].c, yyvsp[-2].v[0], yyvsp[-2].v[1], yyvsp[-2].v[2]);
    ;
    break;}
case 24:
#line 261 "Gmsh.y"
{
       Add_BSpline_Curve_With_Knots ((int)yyvsp[-22].d, yyvsp[-18].c, (int) yyvsp[-16].d, yyvsp[-14].l,	yyvsp[-6].l, yyvsp[-4].l, 0., 1.);
    ;
    break;}
case 25:
#line 268 "Gmsh.y"
{
      Add_BSpline_Surface_With_Knots ((int)yyvsp[-30].d, yyvsp[-26].c, (int) yyvsp[-24].d, (int) yyvsp[-22].d, yyvsp[-20].l, yyvsp[-10].l,
				      yyvsp[-8].l, yyvsp[-6].l, yyvsp[-4].l, 0., 1., 0., 1. );
    ;
    break;}
case 26:
#line 274 "Gmsh.y"
{
      Add_Edge_Curve ((int)yyvsp[-14].d, yyvsp[-10].c , (int)yyvsp[-8].d , (int)yyvsp[-6].d, (int)yyvsp[-4].d);
    ;
    break;}
case 27:
#line 278 "Gmsh.y"
{
      Add_Face_Outer_Bound((int)yyvsp[-10].d, yyvsp[-6].c, (int)yyvsp[-4].d, yyvsp[-2].i, 1);
    ;
    break;}
case 28:
#line 282 "Gmsh.y"
{
      // check the norm! Face_Bound : hole outside surface!
      yymsg(INFO, "Found a face bound");
      Add_Face_Outer_Bound((int)yyvsp[-10].d, yyvsp[-6].c, (int)yyvsp[-4].d, yyvsp[-2].i, 0);
    ;
    break;}
case 29:
#line 289 "Gmsh.y"
{
      Add_Oriented_Edge((int)yyvsp[-14].d, yyvsp[-10].c, (int)yyvsp[-4].d, yyvsp[-2].i);
    ;
    break;}
case 30:
#line 293 "Gmsh.y"
{
      Add_Edge_Loop((int)yyvsp[-8].d, yyvsp[-4].c, yyvsp[-2].l);
    ;
    break;}
case 31:
#line 298 "Gmsh.y"
{
      Add_Advanced_Face((int)yyvsp[-12].d, yyvsp[-8].c, yyvsp[-6].l, (int)yyvsp[-4].d, yyvsp[-2].i);
    ;
    break;}
case 32:
#line 302 "Gmsh.y"
{
      Add_Vertex_Point((int)yyvsp[-8].d, yyvsp[-4].c, (int)yyvsp[-2].d);
    ;
    break;}
case 33:
#line 306 "Gmsh.y"
{
    ;
    break;}
case 34:
#line 310 "Gmsh.y"
{
      Add_Axis2_Placement3D  ((int)yyvsp[-12].d, (int)yyvsp[-4].d, (int)yyvsp[-2].d, (int)yyvsp[-6].d);
    ;
    break;}
case 35:
#line 314 "Gmsh.y"
{
      Add_Direction((int)yyvsp[-8].d , yyvsp[-4].c, yyvsp[-2].v[0], yyvsp[-2].v[1], yyvsp[-2].v[2]);
    ;
    break;}
case 36:
#line 318 "Gmsh.y"
{
      Add_Plane((int)yyvsp[-8].d, yyvsp[-4].c, (int)yyvsp[-2].d);
    ;
    break;}
case 37:
#line 322 "Gmsh.y"
{
      Add_Line ((int)yyvsp[-10].d, yyvsp[-6].c , (int) yyvsp[-4].d, (int)yyvsp[-2].d);
    ;
    break;}
case 38:
#line 326 "Gmsh.y"
{
      yymsg(INFO, "Found a closed shell");
      Add_Closed_Shell((int)yyvsp[-8].d, yyvsp[-4].c , yyvsp[-2].l);
    ;
    break;}
case 39:
#line 332 "Gmsh.y"
{
    ;
    break;}
case 40:
#line 335 "Gmsh.y"
{
    ;
    break;}
case 41:
#line 338 "Gmsh.y"
{
      Add_Cylinder ((int)yyvsp[-10].d, yyvsp[-6].c , (int)yyvsp[-4].d, yyvsp[-2].d);
    ;
    break;}
case 42:
#line 342 "Gmsh.y"
{
      Add_Cone ((int)yyvsp[-12].d, yyvsp[-8].c , (int)yyvsp[-6].d, yyvsp[-4].d, yyvsp[-2].d);
    ;
    break;}
case 43:
#line 346 "Gmsh.y"
{
      Add_Torus ((int)yyvsp[-12].d, yyvsp[-8].c , (int)yyvsp[-6].d, yyvsp[-4].d, yyvsp[-2].d);
    ;
    break;}
case 44:
#line 350 "Gmsh.y"
{
      Add_Circle((int) yyvsp[-10].d, yyvsp[-6].c, (int) yyvsp[-4].d, yyvsp[-2].d);
    ;
    break;}
case 45:
#line 354 "Gmsh.y"
{
      Add_Ellipse((int) yyvsp[-12].d, yyvsp[-8].c, (int) yyvsp[-6].d, yyvsp[-4].d, yyvsp[-2].d);
    ;
    break;}
case 46:
#line 359 "Gmsh.y"
{
    ;
    break;}
case 47:
#line 362 "Gmsh.y"
{
    ;
    break;}
case 48:
#line 366 "Gmsh.y"
{
    ;
    break;}
case 49:
#line 369 "Gmsh.y"
{
    ;
    break;}
case 50:
#line 373 "Gmsh.y"
{
    ;
    break;}
case 51:
#line 376 "Gmsh.y"
{
    ;
    break;}
case 52:
#line 379 "Gmsh.y"
{
    ;
    break;}
case 53:
#line 387 "Gmsh.y"
{
  ;
    break;}
case 54:
#line 390 "Gmsh.y"
{
    yymsg(INFO, "Gmsh file format read");
  ;
    break;}
case 55:
#line 396 "Gmsh.y"
{ return 1; ;
    break;}
case 56:
#line 397 "Gmsh.y"
{ return 1; ;
    break;}
case 57:
#line 398 "Gmsh.y"
{ return 1; ;
    break;}
case 58:
#line 399 "Gmsh.y"
{ return 1; ;
    break;}
case 59:
#line 400 "Gmsh.y"
{ return 1; ;
    break;}
case 60:
#line 401 "Gmsh.y"
{ return 1; ;
    break;}
case 61:
#line 402 "Gmsh.y"
{ return 1; ;
    break;}
case 62:
#line 403 "Gmsh.y"
{ return 1; ;
    break;}
case 63:
#line 404 "Gmsh.y"
{ return 1; ;
    break;}
case 64:
#line 405 "Gmsh.y"
{ return 1; ;
    break;}
case 65:
#line 406 "Gmsh.y"
{ return 1; ;
    break;}
case 66:
#line 407 "Gmsh.y"
{ return 1; ;
    break;}
case 67:
#line 408 "Gmsh.y"
{ return 1; ;
    break;}
case 68:
#line 409 "Gmsh.y"
{ return 1; ;
    break;}
case 69:
#line 414 "Gmsh.y"
{
      Msg(DIRECT, yyvsp[-2].c);
    ;
    break;}
case 70:
#line 418 "Gmsh.y"
{
      i = PrintListOfDouble(yyvsp[-4].c, yyvsp[-2].l, tmpstring);
      if(i < 0) 
	yymsg(GERROR, "Too few arguments in Printf");
      else if(i > 0)
	yymsg(GERROR, "%d extra argument%s in Printf", i, (i>1)?"s":"");
      else
	Msg(DIRECT, tmpstring);
      List_Delete(yyvsp[-2].l);
    ;
    break;}
case 71:
#line 434 "Gmsh.y"
{ 
      if(!strcmp(yyvsp[-5].c, "View")) EndView(View, 1, yyname, yyvsp[-4].c); 
    ;
    break;}
case 72:
#line 438 "Gmsh.y"
{
      if(!strcmp(yyvsp[-7].c, "View")) EndView(View, 1, yyname, yyvsp[-6].c);
    ;
    break;}
case 73:
#line 445 "Gmsh.y"
{
      View = BeginView(1); 
    ;
    break;}
case 100:
#line 478 "Gmsh.y"
{ List_Add(View->SP, &yyvsp[0].d) ; ;
    break;}
case 101:
#line 480 "Gmsh.y"
{ List_Add(View->SP, &yyvsp[0].d) ; ;
    break;}
case 102:
#line 485 "Gmsh.y"
{ 
      List_Add(View->SP, &yyvsp[-5].d); List_Add(View->SP, &yyvsp[-3].d);
      List_Add(View->SP, &yyvsp[-1].d);
    ;
    break;}
case 103:
#line 490 "Gmsh.y"
{
      View->NbSP++ ;
    ;
    break;}
case 104:
#line 497 "Gmsh.y"
{ List_Add(View->VP, &yyvsp[0].d) ; ;
    break;}
case 105:
#line 499 "Gmsh.y"
{ List_Add(View->VP, &yyvsp[0].d) ; ;
    break;}
case 106:
#line 504 "Gmsh.y"
{ 
      List_Add(View->VP, &yyvsp[-5].d); List_Add(View->VP, &yyvsp[-3].d);
      List_Add(View->VP, &yyvsp[-1].d); 
    ;
    break;}
case 107:
#line 509 "Gmsh.y"
{
      View->NbVP++ ;
    ;
    break;}
case 108:
#line 516 "Gmsh.y"
{ List_Add(View->TP, &yyvsp[0].d) ; ;
    break;}
case 109:
#line 518 "Gmsh.y"
{ List_Add(View->TP, &yyvsp[0].d) ; ;
    break;}
case 110:
#line 523 "Gmsh.y"
{ 
      List_Add(View->TP, &yyvsp[-5].d); List_Add(View->TP, &yyvsp[-3].d);
      List_Add(View->TP, &yyvsp[-1].d);
    ;
    break;}
case 111:
#line 528 "Gmsh.y"
{
      View->NbTP++ ;
    ;
    break;}
case 112:
#line 535 "Gmsh.y"
{ List_Add(View->SL, &yyvsp[0].d) ; ;
    break;}
case 113:
#line 537 "Gmsh.y"
{ List_Add(View->SL, &yyvsp[0].d) ; ;
    break;}
case 114:
#line 543 "Gmsh.y"
{ 
      List_Add(View->SL, &yyvsp[-11].d); List_Add(View->SL, &yyvsp[-5].d);
      List_Add(View->SL, &yyvsp[-9].d); List_Add(View->SL, &yyvsp[-3].d);
      List_Add(View->SL, &yyvsp[-7].d); List_Add(View->SL, &yyvsp[-1].d);
    ;
    break;}
case 115:
#line 549 "Gmsh.y"
{
      View->NbSL++ ;
    ;
    break;}
case 116:
#line 556 "Gmsh.y"
{ List_Add(View->VL, &yyvsp[0].d) ; ;
    break;}
case 117:
#line 558 "Gmsh.y"
{ List_Add(View->VL, &yyvsp[0].d) ; ;
    break;}
case 118:
#line 564 "Gmsh.y"
{ 
      List_Add(View->VL, &yyvsp[-11].d); List_Add(View->VL, &yyvsp[-5].d);
      List_Add(View->VL, &yyvsp[-9].d); List_Add(View->VL, &yyvsp[-3].d);
      List_Add(View->VL, &yyvsp[-7].d); List_Add(View->VL, &yyvsp[-1].d);
    ;
    break;}
case 119:
#line 570 "Gmsh.y"
{
      View->NbVL++ ;
    ;
    break;}
case 120:
#line 577 "Gmsh.y"
{ List_Add(View->TL, &yyvsp[0].d) ; ;
    break;}
case 121:
#line 579 "Gmsh.y"
{ List_Add(View->TL, &yyvsp[0].d) ; ;
    break;}
case 122:
#line 585 "Gmsh.y"
{ 
      List_Add(View->TL, &yyvsp[-11].d); List_Add(View->TL, &yyvsp[-5].d);
      List_Add(View->TL, &yyvsp[-9].d); List_Add(View->TL, &yyvsp[-3].d);
      List_Add(View->TL, &yyvsp[-7].d); List_Add(View->TL, &yyvsp[-1].d);
    ;
    break;}
case 123:
#line 591 "Gmsh.y"
{
      View->NbTL++ ;
    ;
    break;}
case 124:
#line 598 "Gmsh.y"
{ List_Add(View->ST, &yyvsp[0].d) ; ;
    break;}
case 125:
#line 600 "Gmsh.y"
{ List_Add(View->ST, &yyvsp[0].d) ; ;
    break;}
case 126:
#line 607 "Gmsh.y"
{ 
      List_Add(View->ST, &yyvsp[-17].d); List_Add(View->ST, &yyvsp[-11].d);
      List_Add(View->ST, &yyvsp[-5].d);
      List_Add(View->ST, &yyvsp[-15].d); List_Add(View->ST, &yyvsp[-9].d);
      List_Add(View->ST, &yyvsp[-3].d);
      List_Add(View->ST, &yyvsp[-13].d); List_Add(View->ST, &yyvsp[-7].d);
      List_Add(View->ST, &yyvsp[-1].d);
    ;
    break;}
case 127:
#line 616 "Gmsh.y"
{
      View->NbST++ ;
    ;
    break;}
case 128:
#line 623 "Gmsh.y"
{ List_Add(View->VT, &yyvsp[0].d) ; ;
    break;}
case 129:
#line 625 "Gmsh.y"
{ List_Add(View->VT, &yyvsp[0].d) ; ;
    break;}
case 130:
#line 632 "Gmsh.y"
{ 
      List_Add(View->VT, &yyvsp[-17].d); List_Add(View->VT, &yyvsp[-11].d);
      List_Add(View->VT, &yyvsp[-5].d);
      List_Add(View->VT, &yyvsp[-15].d); List_Add(View->VT, &yyvsp[-9].d);
      List_Add(View->VT, &yyvsp[-3].d);
      List_Add(View->VT, &yyvsp[-13].d); List_Add(View->VT, &yyvsp[-7].d);
      List_Add(View->VT, &yyvsp[-1].d);
    ;
    break;}
case 131:
#line 641 "Gmsh.y"
{
      View->NbVT++ ;
    ;
    break;}
case 132:
#line 648 "Gmsh.y"
{ List_Add(View->TT, &yyvsp[0].d) ; ;
    break;}
case 133:
#line 650 "Gmsh.y"
{ List_Add(View->TT, &yyvsp[0].d) ; ;
    break;}
case 134:
#line 657 "Gmsh.y"
{ 
      List_Add(View->TT, &yyvsp[-17].d); List_Add(View->TT, &yyvsp[-11].d);
      List_Add(View->TT, &yyvsp[-5].d);
      List_Add(View->TT, &yyvsp[-15].d); List_Add(View->TT, &yyvsp[-9].d);
      List_Add(View->TT, &yyvsp[-3].d);
      List_Add(View->TT, &yyvsp[-13].d); List_Add(View->TT, &yyvsp[-7].d);
      List_Add(View->TT, &yyvsp[-1].d);
    ;
    break;}
case 135:
#line 666 "Gmsh.y"
{
      View->NbTT++ ;
    ;
    break;}
case 136:
#line 673 "Gmsh.y"
{ List_Add(View->SQ, &yyvsp[0].d) ; ;
    break;}
case 137:
#line 675 "Gmsh.y"
{ List_Add(View->SQ, &yyvsp[0].d) ; ;
    break;}
case 138:
#line 683 "Gmsh.y"
{ 
      List_Add(View->SQ, &yyvsp[-23].d);  List_Add(View->SQ, &yyvsp[-17].d);
      List_Add(View->SQ, &yyvsp[-11].d); List_Add(View->SQ, &yyvsp[-5].d);
      List_Add(View->SQ, &yyvsp[-21].d);  List_Add(View->SQ, &yyvsp[-15].d);
      List_Add(View->SQ, &yyvsp[-9].d); List_Add(View->SQ, &yyvsp[-3].d);
      List_Add(View->SQ, &yyvsp[-19].d);  List_Add(View->SQ, &yyvsp[-13].d);
      List_Add(View->SQ, &yyvsp[-7].d); List_Add(View->SQ, &yyvsp[-1].d);
    ;
    break;}
case 139:
#line 692 "Gmsh.y"
{
      View->NbSQ++ ;
    ;
    break;}
case 140:
#line 699 "Gmsh.y"
{ List_Add(View->VQ, &yyvsp[0].d) ; ;
    break;}
case 141:
#line 701 "Gmsh.y"
{ List_Add(View->VQ, &yyvsp[0].d) ; ;
    break;}
case 142:
#line 709 "Gmsh.y"
{ 
      List_Add(View->VQ, &yyvsp[-23].d);  List_Add(View->VQ, &yyvsp[-17].d);
      List_Add(View->VQ, &yyvsp[-11].d); List_Add(View->VQ, &yyvsp[-5].d);
      List_Add(View->VQ, &yyvsp[-21].d);  List_Add(View->VQ, &yyvsp[-15].d);
      List_Add(View->VQ, &yyvsp[-9].d); List_Add(View->VQ, &yyvsp[-3].d);
      List_Add(View->VQ, &yyvsp[-19].d);  List_Add(View->VQ, &yyvsp[-13].d);
      List_Add(View->VQ, &yyvsp[-7].d); List_Add(View->VQ, &yyvsp[-1].d);
    ;
    break;}
case 143:
#line 718 "Gmsh.y"
{
      View->NbVQ++ ;
    ;
    break;}
case 144:
#line 725 "Gmsh.y"
{ List_Add(View->TQ, &yyvsp[0].d) ; ;
    break;}
case 145:
#line 727 "Gmsh.y"
{ List_Add(View->TQ, &yyvsp[0].d) ; ;
    break;}
case 146:
#line 735 "Gmsh.y"
{ 
      List_Add(View->TQ, &yyvsp[-23].d);  List_Add(View->TQ, &yyvsp[-17].d);
      List_Add(View->TQ, &yyvsp[-11].d); List_Add(View->TQ, &yyvsp[-5].d);
      List_Add(View->TQ, &yyvsp[-21].d);  List_Add(View->TQ, &yyvsp[-15].d);
      List_Add(View->TQ, &yyvsp[-9].d); List_Add(View->TQ, &yyvsp[-3].d);
      List_Add(View->TQ, &yyvsp[-19].d);  List_Add(View->TQ, &yyvsp[-13].d);
      List_Add(View->TQ, &yyvsp[-7].d); List_Add(View->TQ, &yyvsp[-1].d);
    ;
    break;}
case 147:
#line 744 "Gmsh.y"
{
      View->NbTQ++ ;
    ;
    break;}
case 148:
#line 751 "Gmsh.y"
{ List_Add(View->SS, &yyvsp[0].d) ; ;
    break;}
case 149:
#line 753 "Gmsh.y"
{ List_Add(View->SS, &yyvsp[0].d) ; ;
    break;}
case 150:
#line 761 "Gmsh.y"
{ 
      List_Add(View->SS, &yyvsp[-23].d);  List_Add(View->SS, &yyvsp[-17].d);
      List_Add(View->SS, &yyvsp[-11].d); List_Add(View->SS, &yyvsp[-5].d);
      List_Add(View->SS, &yyvsp[-21].d);  List_Add(View->SS, &yyvsp[-15].d);
      List_Add(View->SS, &yyvsp[-9].d); List_Add(View->SS, &yyvsp[-3].d);
      List_Add(View->SS, &yyvsp[-19].d);  List_Add(View->SS, &yyvsp[-13].d);
      List_Add(View->SS, &yyvsp[-7].d); List_Add(View->SS, &yyvsp[-1].d);
    ;
    break;}
case 151:
#line 770 "Gmsh.y"
{
      View->NbSS++ ;
    ;
    break;}
case 152:
#line 777 "Gmsh.y"
{ List_Add(View->VS, &yyvsp[0].d) ; ;
    break;}
case 153:
#line 779 "Gmsh.y"
{ List_Add(View->VS, &yyvsp[0].d) ; ;
    break;}
case 154:
#line 787 "Gmsh.y"
{ 
      List_Add(View->VS, &yyvsp[-23].d);  List_Add(View->VS, &yyvsp[-17].d);
      List_Add(View->VS, &yyvsp[-11].d); List_Add(View->VS, &yyvsp[-5].d);
      List_Add(View->VS, &yyvsp[-21].d);  List_Add(View->VS, &yyvsp[-15].d);
      List_Add(View->VS, &yyvsp[-9].d); List_Add(View->VS, &yyvsp[-3].d);
      List_Add(View->VS, &yyvsp[-19].d);  List_Add(View->VS, &yyvsp[-13].d);
      List_Add(View->VS, &yyvsp[-7].d); List_Add(View->VS, &yyvsp[-1].d);
    ;
    break;}
case 155:
#line 796 "Gmsh.y"
{
      View->NbVS++ ;
    ;
    break;}
case 156:
#line 803 "Gmsh.y"
{ List_Add(View->TS, &yyvsp[0].d) ; ;
    break;}
case 157:
#line 805 "Gmsh.y"
{ List_Add(View->TS, &yyvsp[0].d) ; ;
    break;}
case 158:
#line 813 "Gmsh.y"
{ 
      List_Add(View->TS, &yyvsp[-23].d);  List_Add(View->TS, &yyvsp[-17].d);
      List_Add(View->TS, &yyvsp[-11].d); List_Add(View->TS, &yyvsp[-5].d);
      List_Add(View->TS, &yyvsp[-21].d);  List_Add(View->TS, &yyvsp[-15].d);
      List_Add(View->TS, &yyvsp[-9].d); List_Add(View->TS, &yyvsp[-3].d);
      List_Add(View->TS, &yyvsp[-19].d);  List_Add(View->TS, &yyvsp[-13].d);
      List_Add(View->TS, &yyvsp[-7].d); List_Add(View->TS, &yyvsp[-1].d);
    ;
    break;}
case 159:
#line 822 "Gmsh.y"
{
      View->NbTS++ ;
    ;
    break;}
case 160:
#line 829 "Gmsh.y"
{ List_Add(View->SH, &yyvsp[0].d) ; ;
    break;}
case 161:
#line 831 "Gmsh.y"
{ List_Add(View->SH, &yyvsp[0].d) ; ;
    break;}
case 162:
#line 843 "Gmsh.y"
{ 
      List_Add(View->SH, &yyvsp[-47].d);  List_Add(View->SH, &yyvsp[-41].d);
      List_Add(View->SH, &yyvsp[-35].d); List_Add(View->SH, &yyvsp[-29].d);
      List_Add(View->SH, &yyvsp[-23].d); List_Add(View->SH, &yyvsp[-17].d);
      List_Add(View->SH, &yyvsp[-11].d); List_Add(View->SH, &yyvsp[-5].d);
      List_Add(View->SH, &yyvsp[-45].d);  List_Add(View->SH, &yyvsp[-39].d);
      List_Add(View->SH, &yyvsp[-33].d); List_Add(View->SH, &yyvsp[-27].d);
      List_Add(View->SH, &yyvsp[-21].d); List_Add(View->SH, &yyvsp[-15].d);
      List_Add(View->SH, &yyvsp[-9].d); List_Add(View->SH, &yyvsp[-3].d);
      List_Add(View->SH, &yyvsp[-43].d);  List_Add(View->SH, &yyvsp[-37].d);
      List_Add(View->SH, &yyvsp[-31].d); List_Add(View->SH, &yyvsp[-25].d);
      List_Add(View->SH, &yyvsp[-19].d); List_Add(View->SH, &yyvsp[-13].d);
      List_Add(View->SH, &yyvsp[-7].d); List_Add(View->SH, &yyvsp[-1].d);
    ;
    break;}
case 163:
#line 858 "Gmsh.y"
{
      View->NbSH++ ;
    ;
    break;}
case 164:
#line 865 "Gmsh.y"
{ List_Add(View->VH, &yyvsp[0].d) ; ;
    break;}
case 165:
#line 867 "Gmsh.y"
{ List_Add(View->VH, &yyvsp[0].d) ; ;
    break;}
case 166:
#line 879 "Gmsh.y"
{ 
      List_Add(View->VH, &yyvsp[-47].d);  List_Add(View->VH, &yyvsp[-41].d);
      List_Add(View->VH, &yyvsp[-35].d); List_Add(View->VH, &yyvsp[-29].d);
      List_Add(View->VH, &yyvsp[-23].d); List_Add(View->VH, &yyvsp[-17].d);
      List_Add(View->VH, &yyvsp[-11].d); List_Add(View->VH, &yyvsp[-5].d);
      List_Add(View->VH, &yyvsp[-45].d);  List_Add(View->VH, &yyvsp[-39].d);
      List_Add(View->VH, &yyvsp[-33].d); List_Add(View->VH, &yyvsp[-27].d);
      List_Add(View->VH, &yyvsp[-21].d); List_Add(View->VH, &yyvsp[-15].d);
      List_Add(View->VH, &yyvsp[-9].d); List_Add(View->VH, &yyvsp[-3].d);
      List_Add(View->VH, &yyvsp[-43].d);  List_Add(View->VH, &yyvsp[-37].d);
      List_Add(View->VH, &yyvsp[-31].d); List_Add(View->VH, &yyvsp[-25].d);
      List_Add(View->VH, &yyvsp[-19].d); List_Add(View->VH, &yyvsp[-13].d);
      List_Add(View->VH, &yyvsp[-7].d); List_Add(View->VH, &yyvsp[-1].d);
    ;
    break;}
case 167:
#line 894 "Gmsh.y"
{
      View->NbVH++ ;
    ;
    break;}
case 168:
#line 901 "Gmsh.y"
{ List_Add(View->TH, &yyvsp[0].d) ; ;
    break;}
case 169:
#line 903 "Gmsh.y"
{ List_Add(View->TH, &yyvsp[0].d) ; ;
    break;}
case 170:
#line 915 "Gmsh.y"
{ 
      List_Add(View->TH, &yyvsp[-47].d);  List_Add(View->TH, &yyvsp[-41].d);
      List_Add(View->TH, &yyvsp[-35].d); List_Add(View->TH, &yyvsp[-29].d);
      List_Add(View->TH, &yyvsp[-23].d); List_Add(View->TH, &yyvsp[-17].d);
      List_Add(View->TH, &yyvsp[-11].d); List_Add(View->TH, &yyvsp[-5].d);
      List_Add(View->TH, &yyvsp[-45].d);  List_Add(View->TH, &yyvsp[-39].d);
      List_Add(View->TH, &yyvsp[-33].d); List_Add(View->TH, &yyvsp[-27].d);
      List_Add(View->TH, &yyvsp[-21].d); List_Add(View->TH, &yyvsp[-15].d);
      List_Add(View->TH, &yyvsp[-9].d); List_Add(View->TH, &yyvsp[-3].d);
      List_Add(View->TH, &yyvsp[-43].d);  List_Add(View->TH, &yyvsp[-37].d);
      List_Add(View->TH, &yyvsp[-31].d); List_Add(View->TH, &yyvsp[-25].d);
      List_Add(View->TH, &yyvsp[-19].d); List_Add(View->TH, &yyvsp[-13].d);
      List_Add(View->TH, &yyvsp[-7].d); List_Add(View->TH, &yyvsp[-1].d);
    ;
    break;}
case 171:
#line 930 "Gmsh.y"
{
      View->NbTH++ ;
    ;
    break;}
case 172:
#line 937 "Gmsh.y"
{ List_Add(View->SI, &yyvsp[0].d) ; ;
    break;}
case 173:
#line 939 "Gmsh.y"
{ List_Add(View->SI, &yyvsp[0].d) ; ;
    break;}
case 174:
#line 949 "Gmsh.y"
{ 
      List_Add(View->SI, &yyvsp[-35].d);  List_Add(View->SI, &yyvsp[-29].d);
      List_Add(View->SI, &yyvsp[-23].d); List_Add(View->SI, &yyvsp[-17].d);
      List_Add(View->SI, &yyvsp[-11].d); List_Add(View->SI, &yyvsp[-5].d);
      List_Add(View->SI, &yyvsp[-33].d);  List_Add(View->SI, &yyvsp[-27].d);
      List_Add(View->SI, &yyvsp[-21].d); List_Add(View->SI, &yyvsp[-15].d);
      List_Add(View->SI, &yyvsp[-9].d); List_Add(View->SI, &yyvsp[-3].d);
      List_Add(View->SI, &yyvsp[-31].d);  List_Add(View->SI, &yyvsp[-25].d);
      List_Add(View->SI, &yyvsp[-19].d); List_Add(View->SI, &yyvsp[-13].d);
      List_Add(View->SI, &yyvsp[-7].d); List_Add(View->SI, &yyvsp[-1].d);
    ;
    break;}
case 175:
#line 961 "Gmsh.y"
{
      View->NbSI++ ;
    ;
    break;}
case 176:
#line 968 "Gmsh.y"
{ List_Add(View->VI, &yyvsp[0].d) ; ;
    break;}
case 177:
#line 970 "Gmsh.y"
{ List_Add(View->VI, &yyvsp[0].d) ; ;
    break;}
case 178:
#line 980 "Gmsh.y"
{ 
      List_Add(View->VI, &yyvsp[-35].d);  List_Add(View->VI, &yyvsp[-29].d);
      List_Add(View->VI, &yyvsp[-23].d); List_Add(View->VI, &yyvsp[-17].d);
      List_Add(View->VI, &yyvsp[-11].d); List_Add(View->VI, &yyvsp[-5].d);
      List_Add(View->VI, &yyvsp[-33].d);  List_Add(View->VI, &yyvsp[-27].d);
      List_Add(View->VI, &yyvsp[-21].d); List_Add(View->VI, &yyvsp[-15].d);
      List_Add(View->VI, &yyvsp[-9].d); List_Add(View->VI, &yyvsp[-3].d);
      List_Add(View->VI, &yyvsp[-31].d);  List_Add(View->VI, &yyvsp[-25].d);
      List_Add(View->VI, &yyvsp[-19].d); List_Add(View->VI, &yyvsp[-13].d);
      List_Add(View->VI, &yyvsp[-7].d); List_Add(View->VI, &yyvsp[-1].d);
    ;
    break;}
case 179:
#line 992 "Gmsh.y"
{
      View->NbVI++ ;
    ;
    break;}
case 180:
#line 999 "Gmsh.y"
{ List_Add(View->TI, &yyvsp[0].d) ; ;
    break;}
case 181:
#line 1001 "Gmsh.y"
{ List_Add(View->TI, &yyvsp[0].d) ; ;
    break;}
case 182:
#line 1011 "Gmsh.y"
{ 
      List_Add(View->TI, &yyvsp[-35].d);  List_Add(View->TI, &yyvsp[-29].d);
      List_Add(View->TI, &yyvsp[-23].d); List_Add(View->TI, &yyvsp[-17].d);
      List_Add(View->TI, &yyvsp[-11].d); List_Add(View->TI, &yyvsp[-5].d);
      List_Add(View->TI, &yyvsp[-33].d);  List_Add(View->TI, &yyvsp[-27].d);
      List_Add(View->TI, &yyvsp[-21].d); List_Add(View->TI, &yyvsp[-15].d);
      List_Add(View->TI, &yyvsp[-9].d); List_Add(View->TI, &yyvsp[-3].d);
      List_Add(View->TI, &yyvsp[-31].d);  List_Add(View->TI, &yyvsp[-25].d);
      List_Add(View->TI, &yyvsp[-19].d); List_Add(View->TI, &yyvsp[-13].d);
      List_Add(View->TI, &yyvsp[-7].d); List_Add(View->TI, &yyvsp[-1].d);
    ;
    break;}
case 183:
#line 1023 "Gmsh.y"
{
      View->NbTI++ ;
    ;
    break;}
case 184:
#line 1030 "Gmsh.y"
{ List_Add(View->SY, &yyvsp[0].d) ; ;
    break;}
case 185:
#line 1032 "Gmsh.y"
{ List_Add(View->SY, &yyvsp[0].d) ; ;
    break;}
case 186:
#line 1041 "Gmsh.y"
{ 
      List_Add(View->SY, &yyvsp[-29].d);  List_Add(View->SY, &yyvsp[-23].d);
      List_Add(View->SY, &yyvsp[-17].d); List_Add(View->SY, &yyvsp[-11].d);
      List_Add(View->SY, &yyvsp[-5].d);
      List_Add(View->SY, &yyvsp[-27].d);  List_Add(View->SY, &yyvsp[-21].d);
      List_Add(View->SY, &yyvsp[-15].d); List_Add(View->SY, &yyvsp[-9].d);
      List_Add(View->SY, &yyvsp[-3].d);
      List_Add(View->SY, &yyvsp[-25].d);  List_Add(View->SY, &yyvsp[-19].d);
      List_Add(View->SY, &yyvsp[-13].d); List_Add(View->SY, &yyvsp[-7].d);
      List_Add(View->SY, &yyvsp[-1].d);
    ;
    break;}
case 187:
#line 1053 "Gmsh.y"
{
      View->NbSY++ ;
    ;
    break;}
case 188:
#line 1060 "Gmsh.y"
{ List_Add(View->VY, &yyvsp[0].d) ; ;
    break;}
case 189:
#line 1062 "Gmsh.y"
{ List_Add(View->VY, &yyvsp[0].d) ; ;
    break;}
case 190:
#line 1071 "Gmsh.y"
{ 
      List_Add(View->VY, &yyvsp[-29].d);  List_Add(View->VY, &yyvsp[-23].d);
      List_Add(View->VY, &yyvsp[-17].d); List_Add(View->VY, &yyvsp[-11].d);
      List_Add(View->VY, &yyvsp[-5].d);
      List_Add(View->VY, &yyvsp[-27].d);  List_Add(View->VY, &yyvsp[-21].d);
      List_Add(View->VY, &yyvsp[-15].d); List_Add(View->VY, &yyvsp[-9].d);
      List_Add(View->VY, &yyvsp[-3].d);
      List_Add(View->VY, &yyvsp[-25].d);  List_Add(View->VY, &yyvsp[-19].d);
      List_Add(View->VY, &yyvsp[-13].d); List_Add(View->VY, &yyvsp[-7].d);
      List_Add(View->VY, &yyvsp[-1].d);
    ;
    break;}
case 191:
#line 1083 "Gmsh.y"
{
      View->NbVY++ ;
    ;
    break;}
case 192:
#line 1090 "Gmsh.y"
{ List_Add(View->TY, &yyvsp[0].d) ; ;
    break;}
case 193:
#line 1092 "Gmsh.y"
{ List_Add(View->TY, &yyvsp[0].d) ; ;
    break;}
case 194:
#line 1101 "Gmsh.y"
{ 
      List_Add(View->TY, &yyvsp[-29].d);  List_Add(View->TY, &yyvsp[-23].d);
      List_Add(View->TY, &yyvsp[-17].d); List_Add(View->TY, &yyvsp[-11].d);
      List_Add(View->TY, &yyvsp[-5].d);
      List_Add(View->TY, &yyvsp[-27].d);  List_Add(View->TY, &yyvsp[-21].d);
      List_Add(View->TY, &yyvsp[-15].d); List_Add(View->TY, &yyvsp[-9].d);
      List_Add(View->TY, &yyvsp[-3].d);
      List_Add(View->TY, &yyvsp[-25].d);  List_Add(View->TY, &yyvsp[-19].d);
      List_Add(View->TY, &yyvsp[-13].d); List_Add(View->TY, &yyvsp[-7].d);
      List_Add(View->TY, &yyvsp[-1].d);
    ;
    break;}
case 195:
#line 1113 "Gmsh.y"
{
      View->NbTY++ ;
    ;
    break;}
case 196:
#line 1120 "Gmsh.y"
{ 
      for(i = 0; i < (int)strlen(yyvsp[0].c)+1; i++) List_Add(View->T2C, &yyvsp[0].c[i]) ; 
      Free(yyvsp[0].c);
    ;
    break;}
case 197:
#line 1125 "Gmsh.y"
{ 
      for(i = 0; i < (int)strlen(yyvsp[0].c)+1; i++) List_Add(View->T2C, &yyvsp[0].c[i]) ; 
      Free(yyvsp[0].c);
    ;
    break;}
case 198:
#line 1133 "Gmsh.y"
{ 
      List_Add(View->T2D, &yyvsp[-5].d); List_Add(View->T2D, &yyvsp[-3].d);
      List_Add(View->T2D, &yyvsp[-1].d); 
      d = List_Nbr(View->T2C);
      List_Add(View->T2D, &d); 
    ;
    break;}
case 199:
#line 1140 "Gmsh.y"
{
      View->NbT2++ ;
    ;
    break;}
case 200:
#line 1147 "Gmsh.y"
{ 
      for(i = 0; i < (int)strlen(yyvsp[0].c)+1; i++) List_Add(View->T3C, &yyvsp[0].c[i]) ; 
      Free(yyvsp[0].c);
    ;
    break;}
case 201:
#line 1152 "Gmsh.y"
{ 
      for(i = 0; i < (int)strlen(yyvsp[0].c)+1; i++) List_Add(View->T3C, &yyvsp[0].c[i]) ; 
      Free(yyvsp[0].c);
    ;
    break;}
case 202:
#line 1160 "Gmsh.y"
{ 
      List_Add(View->T3D, &yyvsp[-7].d); List_Add(View->T3D, &yyvsp[-5].d);
      List_Add(View->T3D, &yyvsp[-3].d); List_Add(View->T3D, &yyvsp[-1].d); 
      d = List_Nbr(View->T3C);
      List_Add(View->T3D, &d); 
    ;
    break;}
case 203:
#line 1167 "Gmsh.y"
{
      View->NbT3++ ;
    ;
    break;}
case 204:
#line 1176 "Gmsh.y"
{ yyval.i = 0 ; ;
    break;}
case 205:
#line 1177 "Gmsh.y"
{ yyval.i = 1 ; ;
    break;}
case 206:
#line 1178 "Gmsh.y"
{ yyval.i = 2 ; ;
    break;}
case 207:
#line 1179 "Gmsh.y"
{ yyval.i = 3 ; ;
    break;}
case 208:
#line 1180 "Gmsh.y"
{ yyval.i = 4 ; ;
    break;}
case 209:
#line 1184 "Gmsh.y"
{ yyval.i = 1 ; ;
    break;}
case 210:
#line 1185 "Gmsh.y"
{ yyval.i = -1 ; ;
    break;}
case 211:
#line 1193 "Gmsh.y"
{
      TheSymbol.Name = yyvsp[-3].c;
      if(!(pSymbol = (Symbol*)Tree_PQuery(Symbol_T, &TheSymbol))){
	TheSymbol.val = List_Create(1, 1, sizeof(double));
	if(!yyvsp[-2].i){
	  List_Put(TheSymbol.val, 0, &yyvsp[-1].d);
	  Tree_Add(Symbol_T, &TheSymbol);
	}
	else
	  yymsg(GERROR, "Unknown variable '%s'", yyvsp[-3].c) ;
      }
      else{
	pd = (double*)List_Pointer_Fast(pSymbol->val, 0) ; 
	switch(yyvsp[-2].i){
	case 0 : *pd = yyvsp[-1].d; break ;
	case 1 : *pd += yyvsp[-1].d ; break ;
	case 2 : *pd -= yyvsp[-1].d ; break ;
	case 3 : *pd *= yyvsp[-1].d ; break ;
	case 4 : 
	  if(yyvsp[-1].d) *pd /= yyvsp[-1].d ; 
	  else yymsg(GERROR, "Division by zero in '%s /= %g'", yyvsp[-3].c, yyvsp[-1].d);
	  break;
	}
      }
    ;
    break;}
case 212:
#line 1220 "Gmsh.y"
{
      TheSymbol.Name = yyvsp[-6].c;
      if(!(pSymbol = (Symbol*)Tree_PQuery(Symbol_T, &TheSymbol))){
	TheSymbol.val = List_Create(5, 5, sizeof(double));
	if(!yyvsp[-2].i){
	  List_Put(TheSymbol.val, (int)yyvsp[-4].d, &yyvsp[-1].d);
	  Tree_Add(Symbol_T, &TheSymbol);
	}
	else
	  yymsg(GERROR, "Unknown variable '%s'", yyvsp[-6].c) ;
      }
      else{
	if((pd = (double*)List_Pointer_Test(pSymbol->val, (int)yyvsp[-4].d))){
	  switch(yyvsp[-2].i){
	  case 0 : *pd = yyvsp[-1].d; break ;
	  case 1 : *pd += yyvsp[-1].d ; break ;
	  case 2 : *pd -= yyvsp[-1].d ; break ;
	  case 3 : *pd *= yyvsp[-1].d ; break ;
	  case 4 : 
	    if(yyvsp[-1].d) *pd /= yyvsp[-1].d ; 
	    else yymsg(GERROR, "Division by zero in '%s[%d] /= %g'", yyvsp[-6].c, (int)yyvsp[-4].d, yyvsp[-1].d);
	    break;
	  }
	}
	else{
	  if(!yyvsp[-2].i)
	    List_Put(pSymbol->val, (int)yyvsp[-4].d, &yyvsp[-1].d);
	  else
	    yymsg(GERROR, "Uninitialized variable '%s[%d]'", yyvsp[-6].c, (int)yyvsp[-4].d) ;
	}
      }
    ;
    break;}
case 213:
#line 1254 "Gmsh.y"
{
      if(List_Nbr(yyvsp[-5].l) != List_Nbr(yyvsp[-1].l))
	yymsg(GERROR, "Incompatible array dimensions in affectation");
      else{
	TheSymbol.Name = yyvsp[-8].c;
	if(!(pSymbol = (Symbol*)Tree_PQuery(Symbol_T, &TheSymbol))){
	  TheSymbol.val = List_Create(5, 5, sizeof(double));
	  if(!yyvsp[-2].i){
	    for(i = 0; i < List_Nbr(yyvsp[-5].l); i++){
	      List_Put(TheSymbol.val, (int)(*(double*)List_Pointer(yyvsp[-5].l, i)),
		       (double*)List_Pointer(yyvsp[-1].l, i));
	    }
	    Tree_Add(Symbol_T, &TheSymbol);
	  }
	  else
	    yymsg(GERROR, "Unknown variable '%s'", yyvsp[-8].c) ;
	}
	else{
	  for(i = 0; i < List_Nbr(yyvsp[-5].l); i++){
	    j = (int)(*(double*)List_Pointer(yyvsp[-5].l, i)) ;
	    d = *(double*)List_Pointer(yyvsp[-1].l, i) ;
	    if((pd = (double*)List_Pointer_Test(pSymbol->val, j))){
	      switch(yyvsp[-2].i){
	      case 0 : *pd = d; break ;
	      case 1 : *pd += d ; break ;
	      case 2 : *pd -= d ; break ;
	      case 3 : *pd *= d ; break ;
	      case 4 : 
		if(yyvsp[-1].l) *pd /= d ; 
		else yymsg(GERROR, "Division by zero in '%s[%d] /= %g'", yyvsp[-8].c, j, d);
		break;
	      }
	    }
	    else{
	      if(!yyvsp[-2].i)
		List_Put(pSymbol->val, j, &d);
	      else
		yymsg(GERROR, "Uninitialized variable '%s[%d]'", yyvsp[-8].c, j) ;	  
	    }
	  }
	}
      }
      List_Delete(yyvsp[-5].l);
      List_Delete(yyvsp[-1].l);
    ;
    break;}
case 214:
#line 1301 "Gmsh.y"
{
      TheSymbol.Name = yyvsp[-5].c;
      if(!(pSymbol = (Symbol*)Tree_PQuery(Symbol_T, &TheSymbol))){
	TheSymbol.val = List_Create(5, 5, sizeof(double));
	List_Copy(yyvsp[-1].l, TheSymbol.val);
	Tree_Add(Symbol_T, &TheSymbol);
      }
      else{
	List_Reset(pSymbol->val);
	List_Copy(yyvsp[-1].l, pSymbol->val);
      }
      List_Delete(yyvsp[-1].l);
    ;
    break;}
case 215:
#line 1316 "Gmsh.y"
{
      TheSymbol.Name = yyvsp[-2].c;
      if(!(pSymbol = (Symbol*)Tree_PQuery(Symbol_T, &TheSymbol)))
	yymsg(GERROR, "Unknown variable '%s'", yyvsp[-2].c) ; 
      else
	*(double*)List_Pointer_Fast(pSymbol->val, 0) += yyvsp[-1].i; 
    ;
    break;}
case 216:
#line 1325 "Gmsh.y"
{
      TheSymbol.Name = yyvsp[-5].c ;
      if(!(pSymbol = (Symbol*)Tree_PQuery(Symbol_T, &TheSymbol)))
	yymsg(GERROR, "Unknown variable '%s'", yyvsp[-5].c) ; 
      else{
	if((pd = (double*)List_Pointer_Test(pSymbol->val, (int)yyvsp[-3].d)))
	  *pd += yyvsp[-1].i ;
	else
	  yymsg(GERROR, "Uninitialized variable '%s[%d]'", yyvsp[-5].c, (int)yyvsp[-3].d) ;
      }
    ;
    break;}
case 217:
#line 1340 "Gmsh.y"
{ 
      if(!(pStrCat = Get_StringOptionCategory(yyvsp[-5].c)))
	yymsg(GERROR, "Unknown string option class '%s'", yyvsp[-5].c);
      else{
	if(!(pStrOpt = (char *(*) (int, int, char *))Get_StringOption(yyvsp[-3].c, pStrCat)))
	  yymsg(GERROR, "Unknown string option '%s.%s'", yyvsp[-5].c, yyvsp[-3].c);
	else
	  pStrOpt(0, GMSH_SET|GMSH_GUI, yyvsp[-1].c) ;
      }
    ;
    break;}
case 218:
#line 1352 "Gmsh.y"
{ 
      if(!(pStrCat = Get_StringOptionCategory(yyvsp[-8].c)))
	yymsg(GERROR, "Unknown string option class '%s'", yyvsp[-8].c);
      else{
	if(!(pStrOpt = (char *(*) (int, int, char *))Get_StringOption(yyvsp[-3].c, pStrCat)))
	  yymsg(GERROR, "Unknown string option '%s[%d].%s'", yyvsp[-8].c, (int)yyvsp[-6].d, yyvsp[-3].c);
	else
	  pStrOpt((int)yyvsp[-6].d, GMSH_SET|GMSH_GUI, yyvsp[-1].c) ;
      }
    ;
    break;}
case 219:
#line 1366 "Gmsh.y"
{
      if(!(pNumCat = Get_NumberOptionCategory(yyvsp[-5].c)))
	yymsg(GERROR, "Unknown numeric option class '%s'", yyvsp[-5].c);
      else{
	if(!(pNumOpt = (double (*) (int, int, double))Get_NumberOption(yyvsp[-3].c, pNumCat)))
	  yymsg(GERROR, "Unknown numeric option '%s.%s'", yyvsp[-5].c, yyvsp[-3].c);
	else{
	  switch(yyvsp[-2].i){
	  case 0 : d = yyvsp[-1].d ; break ;
	  case 1 : d = pNumOpt(0, GMSH_GET, 0) + yyvsp[-1].d ; break ;
	  case 2 : d = pNumOpt(0, GMSH_GET, 0) - yyvsp[-1].d ; break ;
	  case 3 : d = pNumOpt(0, GMSH_GET, 0) * yyvsp[-1].d ; break ;
	  case 4 : 
	    if(yyvsp[-1].d) d = pNumOpt(0, GMSH_GET, 0) / yyvsp[-1].d ; 
	    else yymsg(GERROR, "Division by zero in '%s.%s /= %g'", yyvsp[-5].c, yyvsp[-3].c, yyvsp[-1].d);
	    break;
	  }
	  pNumOpt(0, GMSH_SET|GMSH_GUI, d) ;
	}
      }
    ;
    break;}
case 220:
#line 1389 "Gmsh.y"
{
      if(!(pNumCat = Get_NumberOptionCategory(yyvsp[-8].c)))
	yymsg(GERROR, "Unknown numeric option class '%s'", yyvsp[-8].c);
      else{
	if(!(pNumOpt =  (double (*) (int, int, double))Get_NumberOption(yyvsp[-3].c, pNumCat)))
	  yymsg(GERROR, "Unknown numeric option '%s[%d].%s'", yyvsp[-8].c, (int)yyvsp[-6].d, yyvsp[-3].c);
	else{
	  switch(yyvsp[-2].i){
	  case 0 : d = yyvsp[-1].d; break ;
	  case 1 : d = pNumOpt((int)yyvsp[-6].d, GMSH_GET, 0) + yyvsp[-1].d ; break ;
	  case 2 : d = pNumOpt((int)yyvsp[-6].d, GMSH_GET, 0) - yyvsp[-1].d ; break ;
	  case 3 : d = pNumOpt((int)yyvsp[-6].d, GMSH_GET, 0) * yyvsp[-1].d ; break ;
	  case 4 : 
	    if(yyvsp[-1].d) d = pNumOpt((int)yyvsp[-6].d, GMSH_GET, 0) / yyvsp[-1].d ;
	    else yymsg(GERROR, "Division by zero in '%s[%d].%s /= %g'", 
		       yyvsp[-8].c, (int)yyvsp[-6].d, yyvsp[-3].c, yyvsp[-1].d);
	    break;
	  }
	  pNumOpt((int)yyvsp[-6].d, GMSH_SET|GMSH_GUI, d) ;
	}
      }
    ;
    break;}
case 221:
#line 1413 "Gmsh.y"
{
      if(!(pNumCat = Get_NumberOptionCategory(yyvsp[-4].c)))
	yymsg(GERROR, "Unknown numeric option class '%s'", yyvsp[-4].c);
      else{
	if(!(pNumOpt =  (double (*) (int, int, double))Get_NumberOption(yyvsp[-2].c, pNumCat)))
	  yymsg(GERROR, "Unknown numeric option '%s.%s'", yyvsp[-4].c, yyvsp[-2].c);
	else
	  pNumOpt(0, GMSH_SET|GMSH_GUI, pNumOpt(0, GMSH_GET, 0)+yyvsp[-1].i) ;
      }
    ;
    break;}
case 222:
#line 1425 "Gmsh.y"
{
      if(!(pNumCat = Get_NumberOptionCategory(yyvsp[-7].c)))
	yymsg(GERROR, "Unknown numeric option class '%s'", yyvsp[-7].c);
      else{
	if(!(pNumOpt =  (double (*) (int, int, double))Get_NumberOption(yyvsp[-2].c, pNumCat)))
	  yymsg(GERROR, "Unknown numeric option '%s[%d].%s'", yyvsp[-7].c, (int)yyvsp[-5].d, yyvsp[-2].c);
	else
	  pNumOpt((int)yyvsp[-5].d, GMSH_SET|GMSH_GUI, pNumOpt((int)yyvsp[-5].d, GMSH_GET, 0)+yyvsp[-1].i) ;
      }
    ;
    break;}
case 223:
#line 1439 "Gmsh.y"
{
      if(!(pColCat = Get_ColorOptionCategory(yyvsp[-7].c)))
	yymsg(GERROR, "Unknown color option class '%s'", yyvsp[-7].c);
      else{
	if(!(pColOpt =  (unsigned int (*) (int, int, unsigned int))Get_ColorOption(yyvsp[-3].c, pColCat)))
	  yymsg(GERROR, "Unknown color option '%s.Color.%s'", yyvsp[-7].c, yyvsp[-3].c);
	else
	  pColOpt(0, GMSH_SET|GMSH_GUI, yyvsp[-1].u) ;
      }
    ;
    break;}
case 224:
#line 1451 "Gmsh.y"
{
      if(!(pColCat = Get_ColorOptionCategory(yyvsp[-10].c)))
	yymsg(GERROR, "Unknown color option class '%s'", yyvsp[-10].c);
      else{
	if(!(pColOpt =  (unsigned int (*) (int, int, unsigned int))Get_ColorOption(yyvsp[-3].c, pColCat)))
	  yymsg(GERROR, "Unknown color option '%s[%d].Color.%s'", yyvsp[-10].c, (int)yyvsp[-8].d, yyvsp[-3].c);
	else
	  pColOpt((int)yyvsp[-8].d, GMSH_SET|GMSH_GUI, yyvsp[-1].u) ;
      }
    ;
    break;}
case 225:
#line 1465 "Gmsh.y"
{
      GmshColorTable *ct = Get_ColorTable(0);
      if(!ct)
	yymsg(GERROR, "View[%d] does not exist", 0);
      else{
	ct->size = List_Nbr(yyvsp[-1].l);
	if(ct->size > COLORTABLE_NBMAX_COLOR)
	  yymsg(GERROR, "Too many (%d>%d) colors in View[%d].ColorTable", 
		ct->size, COLORTABLE_NBMAX_COLOR, 0);
	else
	  for(i = 0; i < ct->size; i++) List_Read(yyvsp[-1].l, i, &ct->table[i]);
	if(ct->size == 1){
	  ct->size = 2;
	  ct->table[1] = ct->table[0];
	}
      }
      List_Delete(yyvsp[-1].l);
    ;
    break;}
case 226:
#line 1485 "Gmsh.y"
{
      GmshColorTable *ct = Get_ColorTable((int)yyvsp[-6].d);
      if(!ct)
	yymsg(GERROR, "View[%d] does not exist", (int)yyvsp[-6].d);
      else{
	ct->size = List_Nbr(yyvsp[-1].l);
	if(ct->size > COLORTABLE_NBMAX_COLOR)
	  yymsg(GERROR, "Too many (%d>%d) colors in View[%d].ColorTable", 
		   ct->size, COLORTABLE_NBMAX_COLOR, (int)yyvsp[-6].d);
	else
	  for(i = 0; i < ct->size; i++) List_Read(yyvsp[-1].l, i, &ct->table[i]);
	if(ct->size == 1){
	  ct->size = 2;
	  ct->table[1] = ct->table[0];
	}
      }
      List_Delete(yyvsp[-1].l);
    ;
    break;}
case 227:
#line 1507 "Gmsh.y"
{
      try {
	GMSH_PluginManager::instance()->setPluginOption(yyvsp[-6].c, yyvsp[-3].c, yyvsp[-1].d); 
      }
      catch (...) {
	yymsg(WARNING, "Unknown option '%s' or plugin '%s'", yyvsp[-3].c, yyvsp[-6].c);
      }
    ;
    break;}
case 228:
#line 1517 "Gmsh.y"
{
      try {
	GMSH_PluginManager::instance()->setPluginOption(yyvsp[-6].c, yyvsp[-3].c, yyvsp[-1].c); 
      }
      catch (...) {
	yymsg(WARNING, "Unknown option '%s' or plugin '%s'", yyvsp[-3].c, yyvsp[-6].c);
      }
    ;
    break;}
case 229:
#line 1535 "Gmsh.y"
{
      Cdbpts101((int)yyvsp[-4].d, yyvsp[-1].v[0], yyvsp[-1].v[1], yyvsp[-1].v[2], yyvsp[-1].v[3], yyvsp[-1].v[4]);
      yyval.s.Type = MSH_POINT;
      yyval.s.Num  = (int)yyvsp[-4].d;
    ;
    break;}
case 230:
#line 1542 "Gmsh.y"
{
      Cdbz101((int)yyvsp[-4].d, MSH_PHYSICAL_POINT, 0, 0, 0, 0, 0, NULL, yyvsp[-1].l, NULL);
      yyval.s.Type = MSH_PHYSICAL_POINT;
      yyval.s.Num  = (int)yyvsp[-4].d;
    ;
    break;}
case 231:
#line 1548 "Gmsh.y"
{
      Vertex *v;
      Attractor *a;
      double p;
      int ip;
      for(int i = 0; i < List_Nbr(yyvsp[-9].l); i++){
      	List_Read(yyvsp[-9].l, i, &p);
        ip = (int)p;
        v = FindPoint(ip, THEM);
        if(!v)
	  yymsg(WARNING, "Unknown Point %d", ip);
	else{
	  a = Create_Attractor(List_Nbr(THEM->Metric->Attractors)+1,
			       yyvsp[-6].d, yyvsp[-4].d, yyvsp[-2].d, v, NULL, NULL);
	  List_Add(THEM->Metric->Attractors, &a);
        }
      }
    ;
    break;}
case 232:
#line 1567 "Gmsh.y"
{
      for(i = 0; i < List_Nbr(yyvsp[-3].l); i++){
	List_Read(yyvsp[-3].l, i, &d);
	Vertex *v = FindPoint((int)d, THEM);
	if(!v)
	  yymsg(WARNING, "Unknown Point %d", (int)d);
	else
	  v->lc = yyvsp[-1].d;
      }
    ;
    break;}
case 233:
#line 1581 "Gmsh.y"
{
      Cdbseg101((int)yyvsp[-4].d, MSH_SEGM_LINE, 1, yyvsp[-1].l, NULL, -1, -1, 0., 1., NULL, NULL, NULL);
      yyval.s.Type = MSH_SEGM_LINE;
      yyval.s.Num  = (int)yyvsp[-4].d;
    ;
    break;}
case 234:
#line 1587 "Gmsh.y"
{
      Cdbseg101((int)yyvsp[-4].d, MSH_SEGM_SPLN, 3, yyvsp[-1].l, NULL, -1, -1, 0., 1., NULL, NULL, NULL);
      yyval.s.Type = MSH_SEGM_SPLN;
      yyval.s.Num  = (int)yyvsp[-4].d;
    ;
    break;}
case 235:
#line 1593 "Gmsh.y"
{
      Curve *c;
      Attractor *a;
      double p;
      int ip;
      for(int i = 0; i < List_Nbr(yyvsp[-9].l); i++){
      	List_Read(yyvsp[-9].l, i, &p);
        ip = (int)p;
        c = FindCurve(ip, THEM);
        if(!c)
	  yymsg(WARNING, "Unknown Curve %d", ip);
	else{
	  a = Create_Attractor(List_Nbr(THEM->Metric->Attractors)+1,
			       yyvsp[-6].d, yyvsp[-4].d, yyvsp[-2].d, NULL, c, NULL);
	  List_Add(THEM->Metric->Attractors, &a);
        }
      }
    ;
    break;}
case 236:
#line 1612 "Gmsh.y"
{
      Cdbseg101((int)yyvsp[-4].d, MSH_SEGM_CIRC, 2, yyvsp[-1].l, NULL, -1, -1, 0., 1., NULL, NULL, NULL);
      yyval.s.Type = MSH_SEGM_CIRC ;
      yyval.s.Num  = (int)yyvsp[-4].d;
    ;
    break;}
case 237:
#line 1618 "Gmsh.y"
{
      Cdbseg101((int)yyvsp[-4].d, MSH_SEGM_ELLI, 2, yyvsp[-1].l, NULL, -1, -1, 0., 1., NULL, NULL, NULL);
      yyval.s.Type = MSH_SEGM_ELLI ;
      yyval.s.Num  = (int)yyvsp[-4].d;
    ;
    break;}
case 238:
#line 1624 "Gmsh.y"
{
      List_T *temp;
      int i, j;
      double d;
      temp = List_Create(List_Nbr(yyvsp[-3].l), 1, sizeof(int));
      for(i = 0; i < List_Nbr(yyvsp[-3].l); i++){
      	List_Read(yyvsp[-3].l, i, &d);
        j = (int)d;
        List_Add(temp, &j);
      }
      AddCircleInDataBase ((int) yyvsp[-6].d, MSH_SEGM_CIRC, temp, yyvsp[-1].v);
      List_Delete(temp);
      yyval.s.Type = MSH_SEGM_CIRC ;
      yyval.s.Num  = (int)yyvsp[-6].d;
    ;
    break;}
case 239:
#line 1641 "Gmsh.y"
{
      Cdbseg101((int)yyvsp[-14].d, MSH_SEGM_PARAMETRIC, 2, NULL, NULL, -1, -1, yyvsp[-10].d, yyvsp[-8].d, yyvsp[-6].c, yyvsp[-4].c, yyvsp[-2].c);
      yyval.s.Type = MSH_SEGM_PARAMETRIC ;
      yyval.s.Num  = (int)yyvsp[-14].d;
    ;
    break;}
case 240:
#line 1647 "Gmsh.y"
{
      Cdbz101((int)yyvsp[-4].d, MSH_PHYSICAL_LINE, 0, 0, 0, 0, 0, NULL, yyvsp[-1].l, NULL);
      yyval.s.Type = MSH_PHYSICAL_LINE;
      yyval.s.Num  = (int)yyvsp[-4].d;
    ;
    break;}
case 241:
#line 1653 "Gmsh.y"
{
      yyval.s.Type = MSH_SEGM_LOOP;
      Cdbz101((int)yyvsp[-4].d, yyval.s.Type, 0, 0, 0, 0, 0, NULL, yyvsp[-1].l, NULL);
      yyval.s.Num = (int)yyvsp[-4].d;
    ;
    break;}
case 242:
#line 1659 "Gmsh.y"
{
      if(List_Nbr(yyvsp[-1].l) > 3){
	Cdbseg101((int)yyvsp[-4].d, MSH_SEGM_BSPLN, 2, yyvsp[-1].l, NULL, -1, -1, 0., 1., NULL, NULL, NULL);
	yyval.s.Type = MSH_SEGM_BSPLN;
	yyval.s.Num  = (int)yyvsp[-4].d;
      }
      else
	yymsg(GERROR, "Too few control points for BSpline %d (%d < 4)", (int)yyvsp[-4].d, 
	      List_Nbr(yyvsp[-1].l));
    ;
    break;}
case 243:
#line 1670 "Gmsh.y"
{
      if(List_Nbr(yyvsp[-1].l) > 3){
	Cdbseg101((int)yyvsp[-4].d, MSH_SEGM_BEZIER, 2, yyvsp[-1].l, NULL, -1, -1, 0., 1., NULL, NULL, NULL);
	yyval.s.Type = MSH_SEGM_BSPLN;
	yyval.s.Num  = (int)yyvsp[-4].d;
      }
      else
	yymsg(GERROR, "Too few control points for Bezier %d (%d < 4)", (int)yyvsp[-4].d, 
	      List_Nbr(yyvsp[-1].l));
    ;
    break;}
case 244:
#line 1681 "Gmsh.y"
{
      List_T *Temp;
      int i;
      double d;
      if(List_Nbr(yyvsp[-5].l) + (int)yyvsp[-1].d + 1 != List_Nbr(yyvsp[-3].l)){
	yymsg(GERROR, "Wrong definition of Nurbs Curve %d: "
	      "got %d Knots, need N + D + 1 = %d + %d + 1 = %d",
	      (int)yyvsp[-8].d, 
	      List_Nbr(yyvsp[-3].l), List_Nbr(yyvsp[-5].l), (int)yyvsp[-1].d, List_Nbr(yyvsp[-5].l) + (int)yyvsp[-1].d + 1);
      }
      else{
	Temp = List_Create(List_Nbr(yyvsp[-5].l), 1, sizeof(int));
	for(i = 0; i < List_Nbr(yyvsp[-5].l); i++) {
	  List_Read(yyvsp[-5].l, i, &d);
	  j = (int)d;
	  List_Add(Temp, &j);
	}
	AddCurveInDataBase ((int)yyvsp[-8].d, MSH_SEGM_NURBS, (int)yyvsp[-1].d, Temp, yyvsp[-3].l, -1, -1, 0., 1.);
	List_Delete(Temp);
      }
    ;
    break;}
case 245:
#line 1706 "Gmsh.y"
{
      Cdbz101((int)yyvsp[-4].d, MSH_SURF_PLAN, 0, 0, 0, 0, 0, NULL, yyvsp[-1].l, NULL);
      yyval.s.Type = MSH_SURF_PLAN;
      yyval.s.Num  = (int)yyvsp[-4].d;
    ;
    break;}
case 246:
#line 1712 "Gmsh.y"
{
      Surface *s,*support;
      support = FindSurface((int)yyvsp[-4].d, THEM);
      if(!support)
	yymsg(GERROR, "Unknown Surface %d", (int)yyvsp[-4].d);
      else{
	Cdbz101((int)yyvsp[-8].d, MSH_SURF_PLAN, 0, 0, 0, 0, 0, NULL, yyvsp[-2].l, NULL);
	s = FindSurface((int)yyvsp[-8].d, THEM);
	if(!s)
	  yymsg(GERROR, "Unknown Surface %d", (int)yyvsp[-8].d);
	else{
	  s->Typ =  MSH_SURF_TRIMMED;
	  s->Support = support;
	  yyval.s.Type = MSH_SURF_TRIMMED;
	  yyval.s.Num  = (int)yyvsp[-8].d;
	}
      }
    ;
    break;}
case 247:
#line 1731 "Gmsh.y"
{
      List_Read(yyvsp[-1].l, 0, &d);
      i = (int)d;
      EdgeLoop *el = FindEdgeLoop(i, THEM);
      if(!el)
	yymsg(GERROR, "Unknown Line Loop %d", i);
      else{
	j = List_Nbr(el->Curves);
	if(j==4)
	  yyval.s.Type = MSH_SURF_REGL;
	else if(j==3)
	  yyval.s.Type = MSH_SURF_TRIC;
	else
	  yymsg(GERROR, "Wrong definition of Ruled Surface %d: "
		   "%d borders instead of 3 or 4", 
		   (int)yyvsp[-4].d, j);
	Cdbz101((int)yyvsp[-4].d, yyval.s.Type, 0, 0, 0, 0, 0, NULL, yyvsp[-1].l, NULL);
	yyval.s.Num = (int)yyvsp[-4].d;
      }
    ;
    break;}
case 248:
#line 1753 "Gmsh.y"
{
    AddTriangulationToSurface ((int) yyvsp[-10].d, (int) yyvsp[-6].d, (int) yyvsp[-4].d, yyvsp[-2].l, yyvsp[-1].l);
    yyval.s.Num = (int)yyvsp[-10].d;
  ;
    break;}
case 249:
#line 1761 "Gmsh.y"
{
      CreateNurbsSurface ((int) yyvsp[-16].d , (int)yyvsp[-4].d , (int)yyvsp[-2].d  , yyvsp[-13].l, yyvsp[-10].l, yyvsp[-8].l);
      yyval.s.Type = MSH_SURF_NURBS;
      yyval.s.Num = (int)yyvsp[-16].d;
    ;
    break;}
case 250:
#line 1769 "Gmsh.y"
{
      CreateNurbsSurfaceSupport ((int)yyvsp[-16].d, (int) yyvsp[-4].d , (int) yyvsp[-2].d , yyvsp[-13].l, yyvsp[-10].l, yyvsp[-8].l);
    ;
    break;}
case 251:
#line 1773 "Gmsh.y"
{
      Cdbz101((int)yyvsp[-4].d, MSH_PHYSICAL_SURFACE, 0, 0, 0, 0, 0, NULL, yyvsp[-1].l, NULL);
      yyval.s.Type = MSH_PHYSICAL_SURFACE;
      yyval.s.Num  = (int)yyvsp[-4].d;
    ;
    break;}
case 252:
#line 1779 "Gmsh.y"
{
      Cdbz101((int)yyvsp[-4].d, MSH_SURF_LOOP, 0, 0, 0, 0, 0, NULL, yyvsp[-1].l, NULL);
      yyval.s.Type = MSH_SURF_LOOP;
      yyval.s.Num  = (int)yyvsp[-4].d;
    ;
    break;}
case 253:
#line 1788 "Gmsh.y"
{
      Cdbz101((int)yyvsp[-4].d, MSH_VOLUME, 0, 0, 0, 0, 0, NULL, yyvsp[-1].l, NULL);
      yyval.s.Type = MSH_VOLUME;
      yyval.s.Num  = (int)yyvsp[-4].d;      
    ;
    break;}
case 254:
#line 1794 "Gmsh.y"
{
      Cdbz101((int)yyvsp[-4].d, MSH_VOLUME, 0, 0, 0, 0, 0, NULL, yyvsp[-1].l, NULL);
      yyval.s.Type = MSH_VOLUME;
      yyval.s.Num  = (int)yyvsp[-4].d;
    ;
    break;}
case 255:
#line 1800 "Gmsh.y"
{
      Cdbz101((int)yyvsp[-4].d, MSH_PHYSICAL_VOLUME, 0, 0, 0, 0, 0, NULL, yyvsp[-1].l, NULL);
      yyval.s.Type = MSH_PHYSICAL_VOLUME;
      yyval.s.Num  = (int)yyvsp[-4].d;
    ;
    break;}
case 256:
#line 1811 "Gmsh.y"
{
      TranslateShapes (yyvsp[-3].v[0], yyvsp[-3].v[1], yyvsp[-3].v[2], yyvsp[-1].l, 1);
      yyval.l = yyvsp[-1].l;
    ;
    break;}
case 257:
#line 1816 "Gmsh.y"
{
      RotateShapes(yyvsp[-8].v[0], yyvsp[-8].v[1], yyvsp[-8].v[2], yyvsp[-6].v[0], yyvsp[-6].v[1], yyvsp[-6].v[2], yyvsp[-4].d, yyvsp[-1].l, 1);
      yyval.l = yyvsp[-1].l;
    ;
    break;}
case 258:
#line 1821 "Gmsh.y"
{
      SymmetryShapes(yyvsp[-3].v[0], yyvsp[-3].v[1], yyvsp[-3].v[2], yyvsp[-3].v[3], yyvsp[-1].l, 1);
      yyval.l = yyvsp[-1].l;
    ;
    break;}
case 259:
#line 1826 "Gmsh.y"
{
      DilatShapes(yyvsp[-6].v[0], yyvsp[-6].v[1], yyvsp[-6].v[2], yyvsp[-4].d, yyvsp[-1].l, 1);
      yyval.l = yyvsp[-1].l;
    ;
    break;}
case 260:
#line 1833 "Gmsh.y"
{ yyval.l = yyvsp[0].l; ;
    break;}
case 261:
#line 1834 "Gmsh.y"
{ yyval.l = yyvsp[0].l; ;
    break;}
case 262:
#line 1835 "Gmsh.y"
{ yyval.l = yyvsp[0].l; ;
    break;}
case 263:
#line 1840 "Gmsh.y"
{
      yyval.l = List_Create(3, 3, sizeof(Shape));
    ;
    break;}
case 264:
#line 1844 "Gmsh.y"
{
      List_Add(yyval.l, &yyvsp[0].s);
    ;
    break;}
case 265:
#line 1848 "Gmsh.y"
{
      for(i = 0; i < List_Nbr(yyvsp[-2].l); i++){
	List_Read(yyvsp[-2].l, i, &d);
	TheShape.Num = (int)d;
	Vertex *v = FindPoint(TheShape.Num, THEM);
	if(!v)
	  yymsg(WARNING, "Unknown Point %d", TheShape.Num);
	else{
	  TheShape.Type = MSH_POINT;
	  List_Add(yyval.l, &TheShape);
	}
      }
    ;
    break;}
case 266:
#line 1862 "Gmsh.y"
{
      for(i = 0; i < List_Nbr(yyvsp[-2].l); i++){
	List_Read(yyvsp[-2].l, i, &d);
	TheShape.Num = (int)d;
	Curve *c = FindCurve(TheShape.Num, THEM);
	if(!c)
	  yymsg(WARNING, "Unknown Curve %d", TheShape.Num);
	else{
	  TheShape.Type = c->Typ;
	  List_Add(yyval.l, &TheShape);
	}
      }
    ;
    break;}
case 267:
#line 1876 "Gmsh.y"
{
      for(i = 0; i < List_Nbr(yyvsp[-2].l); i++){
	List_Read(yyvsp[-2].l, i, &d);
	TheShape.Num = (int)d;
	Surface *s = FindSurface(TheShape.Num, THEM);
	if(!s)
	  yymsg(WARNING, "Unknown Surface %d", TheShape.Num);
	else{
	  TheShape.Type = s->Typ;
	  List_Add(yyval.l, &TheShape);
	}
      }
    ;
    break;}
case 268:
#line 1890 "Gmsh.y"
{
      for(i = 0; i < List_Nbr(yyvsp[-2].l); i++){
	List_Read(yyvsp[-2].l, i, &d);
	TheShape.Num = (int)d;
	Volume *v = FindVolume(TheShape.Num, THEM);
	if(!v)
	  yymsg(WARNING, "Unknown Volume %d", TheShape.Num);
	else{
	  TheShape.Type = v->Typ;
	  List_Add(yyval.l, &TheShape);
	}
      }
    ;
    break;}
case 269:
#line 1909 "Gmsh.y"
{
      yyval.l = List_Create(3, 3, sizeof(Shape));
      for(i = 0; i < List_Nbr(yyvsp[-1].l); i++){
	List_Read (yyvsp[-1].l, i, &TheShape);
	CopyShape(TheShape.Type, TheShape.Num, &j);
	TheShape.Num = j;
	List_Add(yyval.l, &TheShape);
      }
    ;
    break;}
case 270:
#line 1919 "Gmsh.y"
{
      if(!strcmp(yyvsp[-4].c, "View")) DuplicateView((int)yyvsp[-2].d, 0);
      yyval.l = NULL;
    ;
    break;}
case 271:
#line 1930 "Gmsh.y"
{
      for(i = 0; i < List_Nbr(yyvsp[-1].l); i++){
	List_Read (yyvsp[-1].l, i, &TheShape);
	DeleteShape(TheShape.Type, TheShape.Num);
      }
    ;
    break;}
case 272:
#line 1937 "Gmsh.y"
{
      if(!strcmp(yyvsp[-4].c, "View")) RemoveViewByIndex((int)yyvsp[-2].d);
    ;
    break;}
case 273:
#line 1941 "Gmsh.y"
{
      if(!strcmp(yyvsp[-1].c, "Meshes") || !strcmp(yyvsp[-1].c, "All"))
	Init_Mesh(THEM);
    ;
    break;}
case 274:
#line 1951 "Gmsh.y"
{
      for(i = 0; i < List_Nbr(yyvsp[-1].l); i++){
	List_Read (yyvsp[-1].l, i, &TheShape);
	ColorShape(TheShape.Type, TheShape.Num, yyvsp[-3].u);
      }
    ;
    break;}
case 275:
#line 1963 "Gmsh.y"
{
      int m = (CTX.visibility_mode == 2) ? VIS_MESH : 
	((CTX.visibility_mode == 1) ? VIS_GEOM : VIS_GEOM|VIS_MESH);
      for(i = 2; i < 6; i++)
	SetVisibilityByNumber(yyvsp[-1].c, i, m);
    ;
    break;}
case 276:
#line 1970 "Gmsh.y"
{
      for(i = 2; i < 6; i++)
	SetVisibilityByNumber(yyvsp[-1].c, i, 0);
    ;
    break;}
case 277:
#line 1975 "Gmsh.y"
{
      int m = (CTX.visibility_mode == 2) ? VIS_MESH :
	((CTX.visibility_mode == 1) ? VIS_GEOM : VIS_GEOM|VIS_MESH);
      for(i = 0; i < List_Nbr(yyvsp[-1].l); i++){
	List_Read (yyvsp[-1].l, i, &TheShape);
	VisibilityShape(TheShape.Type, TheShape.Num, m);
      }
    ;
    break;}
case 278:
#line 1984 "Gmsh.y"
{
      for(i = 0; i < List_Nbr(yyvsp[-1].l); i++){
	List_Read (yyvsp[-1].l, i, &TheShape);
	VisibilityShape(TheShape.Type, TheShape.Num, 0);
      }
    ;
    break;}
case 279:
#line 1996 "Gmsh.y"
{
      if(!strcmp(yyvsp[-2].c, "Include")){
	FixRelativePath(yyvsp[-1].c, tmpstring);
	ParseFile(tmpstring, 0, 0);
      }
      else if(!strcmp(yyvsp[-2].c, "Print")){
#if defined(HAVE_FLTK)
	if(!CTX.batch){
	  FixRelativePath(yyvsp[-1].c, tmpstring);
	  CreateOutputFile(tmpstring, CTX.print.format);
	}
#endif
      }
      else if(!strcmp(yyvsp[-2].c, "Save")){
#if defined(HAVE_FLTK)
	FixRelativePath(yyvsp[-1].c, tmpstring);
	CreateOutputFile(tmpstring, CTX.mesh.format);
#endif
      }
      else if(!strcmp(yyvsp[-2].c, "Merge")){
	FixRelativePath(yyvsp[-1].c, tmpstring);
	MergeProblem(tmpstring);
      }
      else if(!strcmp(yyvsp[-2].c, "MergeWithBoundingBox")){
	FixRelativePath(yyvsp[-1].c, tmpstring);
	MergeProblemWithBoundingBox(tmpstring);
      }
      else if(!strcmp(yyvsp[-2].c, "System")){
	SystemCall(yyvsp[-1].c);
      }
      else{
	yymsg(GERROR, "Unknown command '%s'", yyvsp[-2].c);
      }
    ;
    break;}
case 280:
#line 2031 "Gmsh.y"
{
      if(!strcmp(yyvsp[-6].c, "Save") && !strcmp(yyvsp[-5].c, "View")){
	Post_View *v = (Post_View *)List_Pointer_Test(CTX.post.list, (int)yyvsp[-3].d);
	if(v){
	  FixRelativePath(yyvsp[-1].c, tmpstring);
	  WriteView(v, tmpstring, 0, 0);
	}
      }
      else{
	yymsg(GERROR, "Unknown command '%s'", yyvsp[-6].c);
      }
    ;
    break;}
case 281:
#line 2044 "Gmsh.y"
{
      if(!strcmp(yyvsp[-2].c, "Sleep")){
	long sleep_time = GetTime();
	while(1){
	  if(GetTime() - sleep_time > (long)(yyvsp[-1].d*1.e6)) break;
	}
      }
      else if(!strcmp(yyvsp[-2].c, "Mesh")){
	//Maillage_Dimension_0(THEM);
	//mai3d(THEM, (int)$2);
	yymsg(GERROR, "Mesh directives are not (yet) allowed in scripts");
      }
      else{
	yymsg(GERROR, "Unknown command '%s'", yyvsp[-2].c);
      }
    ;
    break;}
case 282:
#line 2061 "Gmsh.y"
{
      try {
	GMSH_PluginManager::instance()->action(yyvsp[-4].c, yyvsp[-1].c, 0);
      }
      catch (...) {
	yymsg(WARNING, "Unknown action '%s' or plugin '%s'", yyvsp[-1].c, yyvsp[-4].c);
      }
   ;
    break;}
case 283:
#line 2070 "Gmsh.y"
{
      if(!strcmp(yyvsp[-1].c, "Views"))
	CombineViews(1, 0);
      else if(!strcmp(yyvsp[-1].c, "TimeSteps"))
	CombineViews_Time(2, 0);
      else
	yymsg(GERROR, "Unknown Combine command");
    ;
    break;}
case 284:
#line 2079 "Gmsh.y"
{
      exit(0);
    ;
    break;}
case 285:
#line 2083 "Gmsh.y"
{
#if defined(HAVE_FLTK)
      if(!CTX.batch){ // we're in interactive mode
	if(Tree_Nbr(THEM->Points) != Last_NumberOfPoints){
	  Last_NumberOfPoints = Tree_Nbr(THEM->Points);
	  Replot();
	  DrawUI();
	}
	else{
	  Draw();
	  DrawUI();
	}
      }
#endif
    ;
    break;}
case 286:
#line 2105 "Gmsh.y"
{
      LoopControlVariablesTab[ImbricatedLoop][0] = yyvsp[-3].d ;
      LoopControlVariablesTab[ImbricatedLoop][1] = yyvsp[-1].d ;
      LoopControlVariablesTab[ImbricatedLoop][2] = 1.0 ;
      LoopControlVariablesNameTab[ImbricatedLoop] = "" ;
      fgetpos(yyin, &yyposImbricatedLoopsTab[ImbricatedLoop]);
      yylinenoImbricatedLoopsTab[ImbricatedLoop] = yylineno;
      ImbricatedLoop++;
    ;
    break;}
case 287:
#line 2115 "Gmsh.y"
{
      LoopControlVariablesTab[ImbricatedLoop][0] = yyvsp[-5].d ;
      LoopControlVariablesTab[ImbricatedLoop][1] = yyvsp[-3].d ;
      LoopControlVariablesTab[ImbricatedLoop][2] = yyvsp[-1].d ;
      LoopControlVariablesNameTab[ImbricatedLoop] = "" ;
      fgetpos(yyin, &yyposImbricatedLoopsTab[ImbricatedLoop]);
      yylinenoImbricatedLoopsTab[ImbricatedLoop] = yylineno;
      ImbricatedLoop++;
    ;
    break;}
case 288:
#line 2125 "Gmsh.y"
{
      LoopControlVariablesTab[ImbricatedLoop][0] = yyvsp[-3].d ;
      LoopControlVariablesTab[ImbricatedLoop][1] = yyvsp[-1].d ;
      LoopControlVariablesTab[ImbricatedLoop][2] = 1.0 ;
      LoopControlVariablesNameTab[ImbricatedLoop] = yyvsp[-6].c ;
      
      TheSymbol.Name = yyvsp[-6].c;
      if(!(pSymbol = (Symbol*)Tree_PQuery(Symbol_T, &TheSymbol))){
	TheSymbol.val = List_Create(1, 1, sizeof(double));
	List_Put(TheSymbol.val, 0, &yyvsp[-3].d);
	Tree_Add(Symbol_T, &TheSymbol);
      }
      else{
	List_Write(pSymbol->val, 0, &yyvsp[-3].d);
      }
      
      fgetpos(yyin, &yyposImbricatedLoopsTab[ImbricatedLoop]);
      yylinenoImbricatedLoopsTab[ImbricatedLoop] = yylineno;
      ImbricatedLoop++;
    ;
    break;}
case 289:
#line 2146 "Gmsh.y"
{
      LoopControlVariablesTab[ImbricatedLoop][0] = yyvsp[-5].d ;
      LoopControlVariablesTab[ImbricatedLoop][1] = yyvsp[-3].d ;
      LoopControlVariablesTab[ImbricatedLoop][2] = yyvsp[-1].d ;
      LoopControlVariablesNameTab[ImbricatedLoop] = yyvsp[-8].c ;

      TheSymbol.Name = yyvsp[-8].c;
      if(!(pSymbol = (Symbol*)Tree_PQuery(Symbol_T, &TheSymbol))){
	TheSymbol.val = List_Create(1, 1, sizeof(double));
	List_Put(TheSymbol.val, 0, &yyvsp[-5].d);
	Tree_Add(Symbol_T, &TheSymbol);
      }
      else{
	List_Write(pSymbol->val, 0, &yyvsp[-5].d);
      }
      
      fgetpos(yyin, &yyposImbricatedLoopsTab[ImbricatedLoop]);
      yylinenoImbricatedLoopsTab[ImbricatedLoop] = yylineno;
      ImbricatedLoop++;
    ;
    break;}
case 290:
#line 2167 "Gmsh.y"
{
      if(LoopControlVariablesTab[ImbricatedLoop-1][1] >  
	 LoopControlVariablesTab[ImbricatedLoop-1][0]){
	LoopControlVariablesTab[ImbricatedLoop-1][0] +=
	  LoopControlVariablesTab[ImbricatedLoop-1][2];
	
	if(strlen(LoopControlVariablesNameTab[ImbricatedLoop-1])){
	  TheSymbol.Name = LoopControlVariablesNameTab[ImbricatedLoop-1];
	  pSymbol = (Symbol*)Tree_PQuery(Symbol_T, &TheSymbol);
	  *(double*)List_Pointer_Fast(pSymbol->val, 0) += 
	    LoopControlVariablesTab[ImbricatedLoop-1][2] ;
	}
	
	fsetpos(yyin, &yyposImbricatedLoopsTab[ImbricatedLoop-1]);
	yylineno = yylinenoImbricatedLoopsTab[ImbricatedLoop-1];
      }
      else{
	ImbricatedLoop--;
      }
    ;
    break;}
case 291:
#line 2188 "Gmsh.y"
{
      if(!FunctionManager::Instance()->createFunction(yyvsp[0].c, yyin, yyname, yylineno))
	yymsg(GERROR, "Redefinition of function %s", yyvsp[0].c);
      skip_until(NULL, "Return");
    ;
    break;}
case 292:
#line 2194 "Gmsh.y"
{
      if(!FunctionManager::Instance()->leaveFunction(&yyin, yyname, yylineno))
	yymsg(GERROR, "Error while exiting function");
    ;
    break;}
case 293:
#line 2199 "Gmsh.y"
{
      if(!FunctionManager::Instance()->enterFunction(yyvsp[-1].c, &yyin, yyname, yylineno))
	yymsg(GERROR, "Unknown function %s", yyvsp[-1].c);
    ;
    break;}
case 294:
#line 2204 "Gmsh.y"
{
      if(!yyvsp[-1].d) skip_until("If", "EndIf");
    ;
    break;}
case 295:
#line 2208 "Gmsh.y"
{
    ;
    break;}
case 296:
#line 2219 "Gmsh.y"
{
      Curve *pc, *prc;
      TheShape.Num = Extrude_ProtudePoint(TRANSLATE, (int)yyvsp[-4].d, yyvsp[-2].v[0], yyvsp[-2].v[1], yyvsp[-2].v[2],
					  0., 0., 0., 0., 0., 0., 0.,
					  &pc, &prc, 1, NULL);
      TheShape.Type = MSH_POINT;
      yyval.l = List_Create(1, 1, sizeof(Shape));
      List_Add(yyval.l, &TheShape);
    ;
    break;}
case 297:
#line 2229 "Gmsh.y"
{
      Curve *pc, *prc;
      TheShape.Num = Extrude_ProtudePoint(ROTATE, (int)yyvsp[-8].d, 0., 0., 0.,
					  yyvsp[-6].v[0], yyvsp[-6].v[1], yyvsp[-6].v[2], yyvsp[-4].v[0], yyvsp[-4].v[1], yyvsp[-4].v[2], yyvsp[-2].d,
					  &pc, &prc, 1, NULL);
      TheShape.Type = MSH_POINT;
      yyval.l = List_Create(1, 1, sizeof(Shape));
      List_Add(yyval.l, &TheShape);
    ;
    break;}
case 298:
#line 2239 "Gmsh.y"
{
      Curve *pc, *prc;
      TheShape.Num = Extrude_ProtudePoint(TRANSLATE_ROTATE, (int)yyvsp[-10].d, yyvsp[-8].v[0], yyvsp[-8].v[1], yyvsp[-8].v[2],
					  yyvsp[-6].v[0], yyvsp[-6].v[1], yyvsp[-6].v[2], yyvsp[-4].v[0], yyvsp[-4].v[1], yyvsp[-4].v[2], yyvsp[-2].d,
					  &pc, &prc, 1, NULL);
      TheShape.Type = MSH_POINT;
      yyval.l = List_Create(1, 1, sizeof(Shape));
      List_Add(yyval.l, &TheShape);
    ;
    break;}
case 299:
#line 2249 "Gmsh.y"
{
      extr.mesh.ExtrudeMesh = false;
      extr.mesh.Recombine = false;
    ;
    break;}
case 300:
#line 2254 "Gmsh.y"
{
      Curve *pc, *prc;
      TheShape.Num = Extrude_ProtudePoint(TRANSLATE, (int)yyvsp[-8].d, yyvsp[-6].v[0], yyvsp[-6].v[1], yyvsp[-6].v[2],
					  0., 0., 0., 0., 0., 0., 0.,
					  &pc, &prc, 1, &extr);
      TheShape.Type = MSH_POINT;
      yyval.l = List_Create(1, 1, sizeof(Shape));
      List_Add(yyval.l, &TheShape);
    ;
    break;}
case 301:
#line 2264 "Gmsh.y"
{
      extr.mesh.ExtrudeMesh = false;
      extr.mesh.Recombine = false;
    ;
    break;}
case 302:
#line 2269 "Gmsh.y"
{
      Curve *pc, *prc;
      TheShape.Num = Extrude_ProtudePoint(ROTATE, (int)yyvsp[-12].d, 0., 0., 0.,
					  yyvsp[-10].v[0], yyvsp[-10].v[1], yyvsp[-10].v[2], yyvsp[-8].v[0], yyvsp[-8].v[1], yyvsp[-8].v[2], yyvsp[-6].d,
					  &pc, &prc, 1, &extr);
      TheShape.Type = MSH_POINT;
      yyval.l = List_Create(1, 1, sizeof(Shape));
      List_Add(yyval.l, &TheShape);
    ;
    break;}
case 303:
#line 2279 "Gmsh.y"
{
      extr.mesh.ExtrudeMesh = false;
      extr.mesh.Recombine = false;
    ;
    break;}
case 304:
#line 2284 "Gmsh.y"
{
      Curve *pc, *prc;
      TheShape.Num = Extrude_ProtudePoint(TRANSLATE_ROTATE, (int)yyvsp[-14].d, yyvsp[-12].v[0], yyvsp[-12].v[1], yyvsp[-12].v[2],
					  yyvsp[-10].v[0], yyvsp[-10].v[1], yyvsp[-10].v[2], yyvsp[-8].v[0], yyvsp[-8].v[1], yyvsp[-8].v[2], yyvsp[-6].d,
					  &pc, &prc, 1, &extr);
      TheShape.Type = MSH_POINT;
      yyval.l = List_Create(1, 1, sizeof(Shape));
      List_Add(yyval.l, &TheShape);
    ;
    break;}
case 305:
#line 2296 "Gmsh.y"
{
      Surface *ps;
      TheShape.Num = Extrude_ProtudeCurve(TRANSLATE, (int)yyvsp[-4].d, yyvsp[-2].v[0], yyvsp[-2].v[1], yyvsp[-2].v[2],
					  0., 0., 0., 0., 0., 0., 0., 
					  &ps, 1, NULL);
      Curve *c = FindCurve(TheShape.Num, THEM);
      if(!c){
	//yymsg(WARNING, "Unknown Curve %d", TheShape.Num);
	TheShape.Type = 0;
      }
      else{
	TheShape.Type = c->Typ;
      }
      yyval.l = List_Create(1, 1, sizeof(Shape));
      List_Add(yyval.l, &TheShape);
    ;
    break;}
case 306:
#line 2313 "Gmsh.y"
{
      Surface *ps;
      TheShape.Num = Extrude_ProtudeCurve(ROTATE, (int)yyvsp[-8].d, 0., 0., 0.,
					  yyvsp[-6].v[0], yyvsp[-6].v[1], yyvsp[-6].v[2], yyvsp[-4].v[0], yyvsp[-4].v[1], yyvsp[-4].v[2], yyvsp[-2].d, 
					  &ps, 1, NULL);
      Curve *c = FindCurve(TheShape.Num, THEM);
      if(!c){
	//yymsg(WARNING, "Unknown Curve %d", TheShape.Num);
	TheShape.Type = 0;
      }
      else{
	TheShape.Type = c->Typ;
      }
      yyval.l = List_Create(1, 1, sizeof(Shape));
      List_Add(yyval.l, &TheShape);
    ;
    break;}
case 307:
#line 2330 "Gmsh.y"
{
      Surface *ps;
      TheShape.Num = Extrude_ProtudeCurve(TRANSLATE_ROTATE, (int)yyvsp[-10].d, yyvsp[-8].v[0], yyvsp[-8].v[1], yyvsp[-8].v[2],
					  yyvsp[-6].v[0], yyvsp[-6].v[1], yyvsp[-6].v[2], yyvsp[-4].v[0], yyvsp[-4].v[1], yyvsp[-4].v[2], yyvsp[-2].d, 
					  &ps, 1, NULL);
      Curve *c = FindCurve(TheShape.Num, THEM);
      if(!c){
	//yymsg(WARNING, "Unknown Curve %d", TheShape.Num);
	TheShape.Type = 0;
      }
      else{
	TheShape.Type = c->Typ;
      }
      yyval.l = List_Create(1, 1, sizeof(Shape));
      List_Add(yyval.l, &TheShape);
    ;
    break;}
case 308:
#line 2347 "Gmsh.y"
{
      extr.mesh.ExtrudeMesh = false;
      extr.mesh.Recombine = false;
    ;
    break;}
case 309:
#line 2352 "Gmsh.y"
{
      Surface *ps;
      TheShape.Num = Extrude_ProtudeCurve(TRANSLATE, (int)yyvsp[-8].d, yyvsp[-6].v[0], yyvsp[-6].v[1], yyvsp[-6].v[2],
					  0., 0., 0., 0., 0., 0., 0., 
					  &ps, 1, &extr);
      Curve *c = FindCurve(TheShape.Num, THEM);
      if(!c){
	//yymsg(WARNING, "Unknown Curve %d", TheShape.Num);
	TheShape.Type = 0;
      }
      else{
	TheShape.Type = c->Typ;
      }
      yyval.l = List_Create(1, 1, sizeof(Shape));
      List_Add(yyval.l, &TheShape);
    ;
    break;}
case 310:
#line 2369 "Gmsh.y"
{
      extr.mesh.ExtrudeMesh = false;
      extr.mesh.Recombine = false;
    ;
    break;}
case 311:
#line 2374 "Gmsh.y"
{
      Surface *ps;
      TheShape.Num = Extrude_ProtudeCurve(ROTATE, (int)yyvsp[-12].d, 0., 0., 0.,
					  yyvsp[-10].v[0], yyvsp[-10].v[1], yyvsp[-10].v[2], yyvsp[-8].v[0], yyvsp[-8].v[1], yyvsp[-8].v[2], yyvsp[-6].d, 
					  &ps, 1, &extr);
      Curve *c = FindCurve(TheShape.Num, THEM);
      if(!c){
	//yymsg(WARNING, "Unknown Curve %d", TheShape.Num);
	TheShape.Type = 0;
      }
      else{
	TheShape.Type = c->Typ;
      }
      yyval.l = List_Create(1, 1, sizeof(Shape));
      List_Add(yyval.l, &TheShape);
    ;
    break;}
case 312:
#line 2391 "Gmsh.y"
{
      extr.mesh.ExtrudeMesh = false;
      extr.mesh.Recombine = false;
    ;
    break;}
case 313:
#line 2396 "Gmsh.y"
{
      Surface *ps;
      TheShape.Num = Extrude_ProtudeCurve(TRANSLATE_ROTATE, (int)yyvsp[-14].d, yyvsp[-12].v[0], yyvsp[-12].v[1], yyvsp[-12].v[2],
					  yyvsp[-10].v[0], yyvsp[-10].v[1], yyvsp[-10].v[2], yyvsp[-8].v[0], yyvsp[-8].v[1], yyvsp[-8].v[2], yyvsp[-6].d, 
					  &ps, 1, &extr);
      Curve *c = FindCurve(TheShape.Num, THEM);
      if(!c){
	//yymsg(WARNING, "Unknown Curve %d", TheShape.Num);
	TheShape.Type = 0;
      }
      else{
	TheShape.Type = c->Typ;
      }
      yyval.l = List_Create(1, 1, sizeof(Shape));
      List_Add(yyval.l, &TheShape);
    ;
    break;}
case 314:
#line 2416 "Gmsh.y"
{
      TheShape.Num = Extrude_ProtudeSurface(TRANSLATE, (int)yyvsp[-4].d, yyvsp[-2].v[0], yyvsp[-2].v[1], yyvsp[-2].v[2],
					    0., 0., 0., 0., 0., 0., 0., 
					    0, NULL);
      Surface *s = FindSurface(TheShape.Num, THEM);
      if(!s){
	//yymsg(WARNING, "Unknown Surface %d", TheShape.Num);
	TheShape.Type = 0;
      }
      else{
	TheShape.Type = s->Typ;
      }
      yyval.l = List_Create(1, 1, sizeof(Shape));
      List_Add(yyval.l, &TheShape);
    ;
    break;}
case 315:
#line 2432 "Gmsh.y"
{
      TheShape.Num = Extrude_ProtudeSurface(ROTATE, (int)yyvsp[-8].d, 0., 0., 0.,
					    yyvsp[-6].v[0], yyvsp[-6].v[1], yyvsp[-6].v[2], yyvsp[-4].v[0], yyvsp[-4].v[1], yyvsp[-4].v[2], yyvsp[-2].d,
					    0, NULL);
      Surface *s = FindSurface(TheShape.Num, THEM);
      if(!s){
	//yymsg(WARNING, "Unknown Surface %d", TheShape.Num);
	TheShape.Type = 0;
      }
      else{
	TheShape.Type = s->Typ;
      }
      yyval.l = List_Create(1, 1, sizeof(Shape));
      List_Add(yyval.l, &TheShape);
    ;
    break;}
case 316:
#line 2448 "Gmsh.y"
{
      TheShape.Num = Extrude_ProtudeSurface(TRANSLATE_ROTATE, (int)yyvsp[-10].d, yyvsp[-8].v[0], yyvsp[-8].v[1], yyvsp[-8].v[2],
					    yyvsp[-6].v[0], yyvsp[-6].v[1], yyvsp[-6].v[2], yyvsp[-4].v[0], yyvsp[-4].v[1], yyvsp[-4].v[2], yyvsp[-2].d,
					    0, NULL);
      Surface *s = FindSurface(TheShape.Num, THEM);
      if(!s){
	//yymsg(WARNING, "Unknown Surface %d", TheShape.Num);
	TheShape.Type = 0;
      }
      else{
	TheShape.Type = s->Typ;
      }
      yyval.l = List_Create(1, 1, sizeof(Shape));
      List_Add(yyval.l, &TheShape);
    ;
    break;}
case 317:
#line 2464 "Gmsh.y"
{
      extr.mesh.ExtrudeMesh = false;
      extr.mesh.Recombine = false;
    ;
    break;}
case 318:
#line 2469 "Gmsh.y"
{
      int vol = NEWREG();
      TheShape.Num = Extrude_ProtudeSurface(TRANSLATE, (int)yyvsp[-8].d, yyvsp[-6].v[0], yyvsp[-6].v[1], yyvsp[-6].v[2],
					    0., 0., 0., 0., 0., 0., 0., 
					    vol, &extr);
      Surface *s = FindSurface(TheShape.Num, THEM);
      if(!s){
	//yymsg(WARNING, "Unknown Surface %d", TheShape.Num);
	TheShape.Type = 0;
      }
      else{
	TheShape.Type = s->Typ;
      }
      yyval.l = List_Create(1, 1, sizeof(Shape));
      List_Add(yyval.l, &TheShape);
    ;
    break;}
case 319:
#line 2486 "Gmsh.y"
{
      extr.mesh.ExtrudeMesh = false;
      extr.mesh.Recombine = false;
    ;
    break;}
case 320:
#line 2492 "Gmsh.y"
{
      int vol = NEWREG();
      TheShape.Num = Extrude_ProtudeSurface(ROTATE, (int)yyvsp[-12].d, 0., 0., 0.,
					    yyvsp[-10].v[0], yyvsp[-10].v[1], yyvsp[-10].v[2], yyvsp[-8].v[0], yyvsp[-8].v[1], yyvsp[-8].v[2], yyvsp[-6].d, 
					    vol, &extr);
      Surface *s = FindSurface(TheShape.Num, THEM);
      if(!s){
	//yymsg(WARNING, "Unknown Surface %d", TheShape.Num);
	TheShape.Type = 0;
      }
      else{
	TheShape.Type = s->Typ;
      }
      yyval.l = List_Create(1, 1, sizeof(Shape));
      List_Add(yyval.l, &TheShape);
    ;
    break;}
case 321:
#line 2509 "Gmsh.y"
{
      extr.mesh.ExtrudeMesh = false;
      extr.mesh.Recombine = false;
    ;
    break;}
case 322:
#line 2515 "Gmsh.y"
{
      int vol = NEWREG();
      TheShape.Num = Extrude_ProtudeSurface(TRANSLATE_ROTATE, (int)yyvsp[-14].d, yyvsp[-12].v[0], yyvsp[-12].v[1], yyvsp[-12].v[2],
					    yyvsp[-10].v[0], yyvsp[-10].v[1], yyvsp[-10].v[2], yyvsp[-8].v[0], yyvsp[-8].v[1], yyvsp[-8].v[2], yyvsp[-6].d,
					    vol, &extr);
      Surface *s = FindSurface(TheShape.Num, THEM);
      if(!s){
	//yymsg(WARNING, "Unknown Surface %d", TheShape.Num);
	TheShape.Type = 0;
      }
      else{
	TheShape.Type = s->Typ;
      }
      yyval.l = List_Create(1, 1, sizeof(Shape));
      List_Add(yyval.l, &TheShape);
    ;
    break;}
case 323:
#line 2535 "Gmsh.y"
{
    ;
    break;}
case 324:
#line 2538 "Gmsh.y"
{
    ;
    break;}
case 325:
#line 2544 "Gmsh.y"
{
      double d;
      extr.mesh.ExtrudeMesh = true;
      extr.mesh.NbLayer = List_Nbr(yyvsp[-6].l);
      if(List_Nbr(yyvsp[-6].l) == List_Nbr(yyvsp[-4].l) && List_Nbr(yyvsp[-6].l) == List_Nbr(yyvsp[-2].l)){
	extr.mesh.NbElmLayer = (int*)Malloc(extr.mesh.NbLayer*sizeof(int));
	extr.mesh.ZonLayer = (int*)Malloc(extr.mesh.NbLayer*sizeof(int));
	extr.mesh.hLayer = (double*)Malloc(extr.mesh.NbLayer*sizeof(double));
	for(int i = 0; i < List_Nbr(yyvsp[-6].l); i++){
	  List_Read(yyvsp[-6].l, i, &d);
	  extr.mesh.NbElmLayer[i] = (d>0)?(int)d:1;
	  List_Read(yyvsp[-4].l, i, &d);
	  extr.mesh.ZonLayer[i] = (int)d;
	  List_Read(yyvsp[-2].l, i, &d);
	  extr.mesh.hLayer[i] = d;
	}
      }
      else{
	yymsg(GERROR, "Wrong layer definition {%d, %d, %d}", 
	      List_Nbr(yyvsp[-6].l), List_Nbr(yyvsp[-4].l), List_Nbr(yyvsp[-2].l));
      }
      List_Delete(yyvsp[-6].l);
      List_Delete(yyvsp[-4].l);
      List_Delete(yyvsp[-2].l);
    ;
    break;}
case 326:
#line 2570 "Gmsh.y"
{
      double d;
      extr.mesh.ExtrudeMesh = true;
      extr.mesh.NbLayer = List_Nbr(yyvsp[-4].l);
      if(List_Nbr(yyvsp[-4].l) == List_Nbr(yyvsp[-2].l)){
	extr.mesh.NbElmLayer = (int*)Malloc(extr.mesh.NbLayer*sizeof(int));
	extr.mesh.ZonLayer = (int*)Malloc(extr.mesh.NbLayer*sizeof(int));
	extr.mesh.hLayer = (double*)Malloc(extr.mesh.NbLayer*sizeof(double));
	for(int i = 0; i < List_Nbr(yyvsp[-4].l); i++){
	  List_Read(yyvsp[-4].l, i, &d);
	  extr.mesh.NbElmLayer[i] = (d>0)?(int)d:1;
	  extr.mesh.ZonLayer[i] = 0;
	  List_Read(yyvsp[-2].l, i, &d);
	  extr.mesh.hLayer[i] = d;
	}
      }
      else{
	yymsg(GERROR, "Wrong layer definition {%d, %d}", 
	      List_Nbr(yyvsp[-4].l), List_Nbr(yyvsp[-2].l));
      }
      List_Delete(yyvsp[-4].l);
      List_Delete(yyvsp[-2].l);
    ;
    break;}
case 327:
#line 2594 "Gmsh.y"
{
      extr.mesh.Recombine = true;
    ;
    break;}
case 328:
#line 2603 "Gmsh.y"
{
      Curve *c;
      for(i = 0; i < List_Nbr(yyvsp[-3].l); i++){
	List_Read(yyvsp[-3].l, i, &d);
	j = (int)fabs(d);
        c = FindCurve(j, THEM);
	if(!c)
	  yymsg(WARNING, "Unknown Curve %d", j);
	else{
	  c->Method = TRANSFINI;
	  c->ipar[0] = (yyvsp[-1].d>2)?(int)yyvsp[-1].d:2;
	  c->ipar[1] = sign(d);
	  c->dpar[0] = 1.0;
	}
      }
      List_Delete(yyvsp[-3].l);
    ;
    break;}
case 329:
#line 2621 "Gmsh.y"
{
      Curve *c;
      for(i = 0; i < List_Nbr(yyvsp[-6].l); i++){
	List_Read(yyvsp[-6].l, i, &d);
	j = (int)fabs(d);
        c = FindCurve(j, THEM);
	if(!c)
	  yymsg(WARNING, "Unknown Curve %d", j);
	else{
	  c->Method = TRANSFINI;
	  c->ipar[0] = (yyvsp[-4].d>2)?(int)yyvsp[-4].d:2;
	  c->ipar[1] = sign(d); /* Progresion : code 1 ou -1 */
	  c->dpar[0] = fabs(yyvsp[-1].d);
	}
      }
      List_Delete(yyvsp[-6].l);
    ;
    break;}
case 330:
#line 2639 "Gmsh.y"
{
      Curve *c;
      for(i = 0; i < List_Nbr(yyvsp[-6].l); i++){
	List_Read(yyvsp[-6].l, i, &d);
	j = (int)fabs(d);
        c = FindCurve(j, THEM);
	if(!c)
	  yymsg(WARNING, "Unknown Curve %d", j);
	else{
	  c->Method = TRANSFINI;
	  c->ipar[0] = (yyvsp[-4].d>2)?(int)yyvsp[-4].d:2;
	  c->ipar[1] = 2*sign(d); /* Bump : code 2 ou -2 */
	  c->dpar[0] = fabs(yyvsp[-1].d);
	}
      }
      List_Delete(yyvsp[-6].l);
    ;
    break;}
case 331:
#line 2657 "Gmsh.y"
{
      Surface *s = FindSurface((int)yyvsp[-4].d, THEM);
      if(!s)
	yymsg(WARNING, "Unknown Surface %d", (int)yyvsp[-4].d);
      else{
	s->Method = TRANSFINI;
	k = List_Nbr(yyvsp[-1].l);
	if(k!=3 && k!=4){
	  yymsg(GERROR, "Wrong definition of Transfinite Surface %d: "
		"%d points instead of 3 or 4" , yyvsp[-4].d, k) ;
	}
	else{
	  for(i = 0; i < k; i++){
	    List_Read(yyvsp[-1].l, i, &d);
	    j = (int)fabs(d);
	    s->ipar[i] = j;
	  }
	}
      }
      List_Delete(yyvsp[-1].l);
    ;
    break;}
case 332:
#line 2679 "Gmsh.y"
{
      Surface *s = FindSurface((int)yyvsp[-4].d, THEM);
      if(!s)
	yymsg(WARNING, "Unknown Surface %d", (int)yyvsp[-4].d);
      else{
        s->Method = ELLIPTIC;
        k = List_Nbr(yyvsp[-1].l);
        if(k != 4)
	  yymsg(GERROR, "Wrong definition of Elliptic Surface %d: "
		"%d points instead of 4" , yyvsp[-4].d, k) ;
        else{
	  for(i = 0; i < k; i++){
	    List_Read(yyvsp[-1].l, i, &d);
	    j = (int)fabs(d);
	    s->ipar[i] = j;
	  }
	}
      }
      List_Delete(yyvsp[-1].l);
    ;
    break;}
case 333:
#line 2700 "Gmsh.y"
{
      Volume *v = FindVolume((int)yyvsp[-4].d, THEM);
      if(!v)
	yymsg(WARNING, "Unknown Volume %d", (int)yyvsp[-4].d);
      else{
	v->Method = TRANSFINI;
	k = List_Nbr(yyvsp[-1].l);
	if(k != 6 && k != 8)
	  yymsg(GERROR, "Wrong definition of Transfinite Volume %d: "
		"%d points instead of 6 or 8" , yyvsp[-4].d, k) ;
	else{
	  for(i = 0; i < k; i++){
	    List_Read(yyvsp[-1].l, i, &d);
	    j = (int)fabs(d);
	    v->ipar[i] = j;
	  }
	}
      }
      List_Delete(yyvsp[-1].l);
    ;
    break;}
case 334:
#line 2721 "Gmsh.y"
{
      Surface *s;
      for(i = 0; i < List_Nbr(yyvsp[-3].l); i++){
	List_Read(yyvsp[-3].l, i, &d);
	j = (int)d;
	s = FindSurface(j, THEM);
	if(s){
	  s->Recombine = 1;
	  s->RecombineAngle = (yyvsp[-1].d > 0 && yyvsp[-1].d < 90) ? yyvsp[-1].d : 90;
	}
      }
      List_Delete(yyvsp[-3].l);
    ;
    break;}
case 335:
#line 2735 "Gmsh.y"
{
      Surface *s;
      for(i = 0; i < List_Nbr(yyvsp[-1].l); i++){
	List_Read(yyvsp[-1].l, i, &d);
	j = (int)d;
        s = FindSurface(j, THEM);
	if(s){
	  s->Recombine = 1;
	  s->RecombineAngle = 30.;
        }
      }
      List_Delete(yyvsp[-1].l);
    ;
    break;}
case 336:
#line 2755 "Gmsh.y"
{ 
      ReplaceAllDuplicates(THEM);
    ;
    break;}
case 337:
#line 2759 "Gmsh.y"
{ 
      IntersectAllSegmentsTogether();
    ;
    break;}
case 338:
#line 2768 "Gmsh.y"
{yyval.i = 1;;
    break;}
case 339:
#line 2769 "Gmsh.y"
{yyval.i = 0;;
    break;}
case 340:
#line 2770 "Gmsh.y"
{yyval.i = -1;;
    break;}
case 341:
#line 2771 "Gmsh.y"
{yyval.i = -1;;
    break;}
case 342:
#line 2772 "Gmsh.y"
{yyval.i = -1;;
    break;}
case 343:
#line 2776 "Gmsh.y"
{ yyval.d = yyvsp[0].d;           ;
    break;}
case 344:
#line 2777 "Gmsh.y"
{ yyval.d = yyvsp[-1].d ;          ;
    break;}
case 345:
#line 2778 "Gmsh.y"
{ yyval.d = -yyvsp[0].d ;         ;
    break;}
case 346:
#line 2779 "Gmsh.y"
{ yyval.d = yyvsp[0].d;           ;
    break;}
case 347:
#line 2780 "Gmsh.y"
{ yyval.d = !yyvsp[0].d ;         ;
    break;}
case 348:
#line 2781 "Gmsh.y"
{ yyval.d = yyvsp[-2].d - yyvsp[0].d ;     ;
    break;}
case 349:
#line 2782 "Gmsh.y"
{ yyval.d = yyvsp[-2].d + yyvsp[0].d ;     ;
    break;}
case 350:
#line 2783 "Gmsh.y"
{ yyval.d = yyvsp[-2].d * yyvsp[0].d ;     ;
    break;}
case 351:
#line 2785 "Gmsh.y"
{ 
      if(!yyvsp[0].d)
	yymsg(GERROR, "Division by zero in '%g / %g'", yyvsp[-2].d, yyvsp[0].d);
      else
	yyval.d = yyvsp[-2].d / yyvsp[0].d ;     
    ;
    break;}
case 352:
#line 2791 "Gmsh.y"
{ yyval.d = (int)yyvsp[-2].d % (int)yyvsp[0].d ;  ;
    break;}
case 353:
#line 2792 "Gmsh.y"
{ yyval.d = pow(yyvsp[-2].d, yyvsp[0].d) ;  ;
    break;}
case 354:
#line 2793 "Gmsh.y"
{ yyval.d = yyvsp[-2].d < yyvsp[0].d ;     ;
    break;}
case 355:
#line 2794 "Gmsh.y"
{ yyval.d = yyvsp[-2].d > yyvsp[0].d ;     ;
    break;}
case 356:
#line 2795 "Gmsh.y"
{ yyval.d = yyvsp[-2].d <= yyvsp[0].d ;    ;
    break;}
case 357:
#line 2796 "Gmsh.y"
{ yyval.d = yyvsp[-2].d >= yyvsp[0].d ;    ;
    break;}
case 358:
#line 2797 "Gmsh.y"
{ yyval.d = yyvsp[-2].d == yyvsp[0].d ;    ;
    break;}
case 359:
#line 2798 "Gmsh.y"
{ yyval.d = yyvsp[-2].d != yyvsp[0].d ;    ;
    break;}
case 360:
#line 2799 "Gmsh.y"
{ yyval.d = yyvsp[-2].d && yyvsp[0].d ;    ;
    break;}
case 361:
#line 2800 "Gmsh.y"
{ yyval.d = yyvsp[-2].d || yyvsp[0].d ;    ;
    break;}
case 362:
#line 2801 "Gmsh.y"
{ yyval.d = yyvsp[-4].d? yyvsp[-2].d : yyvsp[0].d ; ;
    break;}
case 363:
#line 2802 "Gmsh.y"
{ yyval.d = exp(yyvsp[-1].d);      ;
    break;}
case 364:
#line 2803 "Gmsh.y"
{ yyval.d = log(yyvsp[-1].d);      ;
    break;}
case 365:
#line 2804 "Gmsh.y"
{ yyval.d = log10(yyvsp[-1].d);    ;
    break;}
case 366:
#line 2805 "Gmsh.y"
{ yyval.d = sqrt(yyvsp[-1].d);     ;
    break;}
case 367:
#line 2806 "Gmsh.y"
{ yyval.d = sin(yyvsp[-1].d);      ;
    break;}
case 368:
#line 2807 "Gmsh.y"
{ yyval.d = asin(yyvsp[-1].d);     ;
    break;}
case 369:
#line 2808 "Gmsh.y"
{ yyval.d = cos(yyvsp[-1].d);      ;
    break;}
case 370:
#line 2809 "Gmsh.y"
{ yyval.d = acos(yyvsp[-1].d);     ;
    break;}
case 371:
#line 2810 "Gmsh.y"
{ yyval.d = tan(yyvsp[-1].d);      ;
    break;}
case 372:
#line 2811 "Gmsh.y"
{ yyval.d = atan(yyvsp[-1].d);     ;
    break;}
case 373:
#line 2812 "Gmsh.y"
{ yyval.d = atan2(yyvsp[-3].d, yyvsp[-1].d); ;
    break;}
case 374:
#line 2813 "Gmsh.y"
{ yyval.d = sinh(yyvsp[-1].d);     ;
    break;}
case 375:
#line 2814 "Gmsh.y"
{ yyval.d = cosh(yyvsp[-1].d);     ;
    break;}
case 376:
#line 2815 "Gmsh.y"
{ yyval.d = tanh(yyvsp[-1].d);     ;
    break;}
case 377:
#line 2816 "Gmsh.y"
{ yyval.d = fabs(yyvsp[-1].d);     ;
    break;}
case 378:
#line 2817 "Gmsh.y"
{ yyval.d = floor(yyvsp[-1].d);    ;
    break;}
case 379:
#line 2818 "Gmsh.y"
{ yyval.d = ceil(yyvsp[-1].d);     ;
    break;}
case 380:
#line 2819 "Gmsh.y"
{ yyval.d = fmod(yyvsp[-3].d, yyvsp[-1].d);  ;
    break;}
case 381:
#line 2820 "Gmsh.y"
{ yyval.d = fmod(yyvsp[-3].d, yyvsp[-1].d);  ;
    break;}
case 382:
#line 2821 "Gmsh.y"
{ yyval.d = sqrt(yyvsp[-3].d*yyvsp[-3].d+yyvsp[-1].d*yyvsp[-1].d); ;
    break;}
case 383:
#line 2822 "Gmsh.y"
{ yyval.d = yyvsp[-1].d*(double)rand()/(double)RAND_MAX; ;
    break;}
case 384:
#line 2824 "Gmsh.y"
{ yyval.d = exp(yyvsp[-1].d);      ;
    break;}
case 385:
#line 2825 "Gmsh.y"
{ yyval.d = log(yyvsp[-1].d);      ;
    break;}
case 386:
#line 2826 "Gmsh.y"
{ yyval.d = log10(yyvsp[-1].d);    ;
    break;}
case 387:
#line 2827 "Gmsh.y"
{ yyval.d = sqrt(yyvsp[-1].d);     ;
    break;}
case 388:
#line 2828 "Gmsh.y"
{ yyval.d = sin(yyvsp[-1].d);      ;
    break;}
case 389:
#line 2829 "Gmsh.y"
{ yyval.d = asin(yyvsp[-1].d);     ;
    break;}
case 390:
#line 2830 "Gmsh.y"
{ yyval.d = cos(yyvsp[-1].d);      ;
    break;}
case 391:
#line 2831 "Gmsh.y"
{ yyval.d = acos(yyvsp[-1].d);     ;
    break;}
case 392:
#line 2832 "Gmsh.y"
{ yyval.d = tan(yyvsp[-1].d);      ;
    break;}
case 393:
#line 2833 "Gmsh.y"
{ yyval.d = atan(yyvsp[-1].d);     ;
    break;}
case 394:
#line 2834 "Gmsh.y"
{ yyval.d = atan2(yyvsp[-3].d, yyvsp[-1].d); ;
    break;}
case 395:
#line 2835 "Gmsh.y"
{ yyval.d = sinh(yyvsp[-1].d);     ;
    break;}
case 396:
#line 2836 "Gmsh.y"
{ yyval.d = cosh(yyvsp[-1].d);     ;
    break;}
case 397:
#line 2837 "Gmsh.y"
{ yyval.d = tanh(yyvsp[-1].d);     ;
    break;}
case 398:
#line 2838 "Gmsh.y"
{ yyval.d = fabs(yyvsp[-1].d);     ;
    break;}
case 399:
#line 2839 "Gmsh.y"
{ yyval.d = floor(yyvsp[-1].d);    ;
    break;}
case 400:
#line 2840 "Gmsh.y"
{ yyval.d = ceil(yyvsp[-1].d);     ;
    break;}
case 401:
#line 2841 "Gmsh.y"
{ yyval.d = fmod(yyvsp[-3].d, yyvsp[-1].d);  ;
    break;}
case 402:
#line 2842 "Gmsh.y"
{ yyval.d = fmod(yyvsp[-3].d, yyvsp[-1].d);  ;
    break;}
case 403:
#line 2843 "Gmsh.y"
{ yyval.d = sqrt(yyvsp[-3].d*yyvsp[-3].d+yyvsp[-1].d*yyvsp[-1].d); ;
    break;}
case 404:
#line 2844 "Gmsh.y"
{ yyval.d = yyvsp[-1].d*(double)rand()/(double)RAND_MAX; ;
    break;}
case 405:
#line 2853 "Gmsh.y"
{ yyval.d = yyvsp[0].d; ;
    break;}
case 406:
#line 2854 "Gmsh.y"
{ yyval.d = 3.141592653589793; ;
    break;}
case 407:
#line 2855 "Gmsh.y"
{ yyval.d = ParUtil::Instance()->rank(); ;
    break;}
case 408:
#line 2856 "Gmsh.y"
{ yyval.d = ParUtil::Instance()->size(); ;
    break;}
case 409:
#line 2861 "Gmsh.y"
{
      TheSymbol.Name = yyvsp[0].c ;
      if(!(pSymbol = (Symbol*)Tree_PQuery(Symbol_T, &TheSymbol))) {
	yymsg(GERROR, "Unknown variable '%s'", yyvsp[0].c) ;
	yyval.d = 0. ;
      }
      else
	yyval.d = *(double*)List_Pointer_Fast(pSymbol->val, 0) ;
    ;
    break;}
case 410:
#line 2872 "Gmsh.y"
{
      TheSymbol.Name = yyvsp[-3].c ;
      if(!(pSymbol = (Symbol*)Tree_PQuery(Symbol_T, &TheSymbol))) {
	yymsg(GERROR, "Unknown variable '%s'", yyvsp[-3].c) ;
	yyval.d = 0. ;
      }
      else{
	if((pd = (double*)List_Pointer_Test(pSymbol->val, (int)yyvsp[-1].d)))
	  yyval.d = *pd ;
	else{
	  yymsg(GERROR, "Uninitialized variable '%s[%d]'", yyvsp[-3].c, (int)yyvsp[-1].d) ;
	  yyval.d = 0. ;
	}
      }
    ;
    break;}
case 411:
#line 2889 "Gmsh.y"
{
      TheSymbol.Name = yyvsp[-2].c ;
      if(!(pSymbol = (Symbol*)Tree_PQuery(Symbol_T, &TheSymbol))) {
	yymsg(GERROR, "Unknown variable '%s'", yyvsp[-2].c) ;
	yyval.d = 0. ;
      }
      else{
	yyval.d = List_Nbr(pSymbol->val);
      }
    ;
    break;}
case 412:
#line 2901 "Gmsh.y"
{
      TheSymbol.Name = yyvsp[-1].c ;
      if(!(pSymbol = (Symbol*)Tree_PQuery(Symbol_T, &TheSymbol))) {
	yymsg(GERROR, "Unknown variable '%s'", yyvsp[-1].c) ;
	yyval.d = 0. ;
      }
      else
	yyval.d = (*(double*)List_Pointer_Fast(pSymbol->val, 0) += yyvsp[0].i) ;
    ;
    break;}
case 413:
#line 2912 "Gmsh.y"
{
      TheSymbol.Name = yyvsp[-4].c ;
      if(!(pSymbol = (Symbol*)Tree_PQuery(Symbol_T, &TheSymbol))) {
	yymsg(GERROR, "Unknown variable '%s'", yyvsp[-4].c) ;
	yyval.d = 0. ;
      }
      else{
	if((pd = (double*)List_Pointer_Test(pSymbol->val, (int)yyvsp[-2].d)))
	  yyval.d = (*pd += yyvsp[0].i) ;
	else{
	  yymsg(GERROR, "Uninitialized variable '%s[%d]'", yyvsp[-4].c, (int)yyvsp[-2].d) ;
	  yyval.d = 0. ;
	}
      }
    ;
    break;}
case 414:
#line 2931 "Gmsh.y"
{
      if(!(pNumCat = Get_NumberOptionCategory(yyvsp[-2].c))){
	yymsg(GERROR, "Unknown numeric option class '%s'", yyvsp[-2].c);
	yyval.d = 0. ;
      }
      else{
	if(!(pNumOpt =  (double (*) (int, int, double))Get_NumberOption(yyvsp[0].c, pNumCat))){
	  yymsg(GERROR, "Unknown numeric option '%s.%s'", yyvsp[-2].c, yyvsp[0].c);
	  yyval.d = 0. ;
	}
	else
	  yyval.d = pNumOpt(0, GMSH_GET, 0);
      }
    ;
    break;}
case 415:
#line 2947 "Gmsh.y"
{
      if(!(pNumCat = Get_NumberOptionCategory(yyvsp[-5].c))){
	yymsg(GERROR, "Unknown numeric option class '%s'", yyvsp[-5].c);
	yyval.d = 0. ;
      }
      else{
	if(!(pNumOpt =  (double (*) (int, int, double))Get_NumberOption(yyvsp[0].c, pNumCat))){
	  yymsg(GERROR, "Unknown numeric option '%s[%d].%s'", yyvsp[-5].c, (int)yyvsp[-3].d, yyvsp[0].c);
	  yyval.d = 0. ;
	}
	else
	  yyval.d = pNumOpt((int)yyvsp[-3].d, GMSH_GET, 0);
      }
    ;
    break;}
case 416:
#line 2963 "Gmsh.y"
{
      if(!(pNumCat = Get_NumberOptionCategory(yyvsp[-3].c))){
	yymsg(GERROR, "Unknown numeric option class '%s'", yyvsp[-3].c);
	yyval.d = 0. ;
      }
      else{
	if(!(pNumOpt =  (double (*) (int, int, double))Get_NumberOption(yyvsp[-1].c, pNumCat))){
	  yymsg(GERROR, "Unknown numeric option '%s.%s'", yyvsp[-3].c, yyvsp[-1].c);
	  yyval.d = 0. ;
	}
	else
	  yyval.d = pNumOpt(0, GMSH_SET|GMSH_GUI, pNumOpt(0, GMSH_GET, 0)+yyvsp[0].i);
      }
    ;
    break;}
case 417:
#line 2979 "Gmsh.y"
{
      if(!(pNumCat = Get_NumberOptionCategory(yyvsp[-6].c))){
	yymsg(GERROR, "Unknown numeric option class '%s'", yyvsp[-6].c);
	yyval.d = 0. ;
      }
      else{
	if(!(pNumOpt =  (double (*) (int, int, double))Get_NumberOption(yyvsp[-1].c, pNumCat))){
	  yymsg(GERROR, "Unknown numeric option '%s[%d].%s'", yyvsp[-6].c, (int)yyvsp[-4].d, yyvsp[-1].c);
	  yyval.d = 0. ;
	}
	else
	  yyval.d = pNumOpt((int)yyvsp[-4].d, GMSH_SET|GMSH_GUI, pNumOpt((int)yyvsp[-4].d, GMSH_GET, 0)+yyvsp[0].i);
      }
    ;
    break;}
case 418:
#line 2997 "Gmsh.y"
{
      memcpy(yyval.v, yyvsp[0].v, 5*sizeof(double)) ;
    ;
    break;}
case 419:
#line 3001 "Gmsh.y"
{
      for(i = 0; i < 5; i++) yyval.v[i] = -yyvsp[0].v[i] ;
    ;
    break;}
case 420:
#line 3005 "Gmsh.y"
{ 
      for(i = 0; i < 5; i++) yyval.v[i] = yyvsp[0].v[i];
    ;
    break;}
case 421:
#line 3009 "Gmsh.y"
{ 
      for(i = 0; i < 5; i++) yyval.v[i] = yyvsp[-2].v[i] - yyvsp[0].v[i] ;
    ;
    break;}
case 422:
#line 3013 "Gmsh.y"
{
      for(i = 0; i < 5; i++) yyval.v[i] = yyvsp[-2].v[i] + yyvsp[0].v[i] ;
    ;
    break;}
case 423:
#line 3020 "Gmsh.y"
{ 
      yyval.v[0] = yyvsp[-9].d;  yyval.v[1] = yyvsp[-7].d;  yyval.v[2] = yyvsp[-5].d;  yyval.v[3] = yyvsp[-3].d; yyval.v[4] = yyvsp[-1].d;
    ;
    break;}
case 424:
#line 3024 "Gmsh.y"
{ 
      yyval.v[0] = yyvsp[-7].d;  yyval.v[1] = yyvsp[-5].d;  yyval.v[2] = yyvsp[-3].d;  yyval.v[3] = yyvsp[-1].d; yyval.v[4] = 1.0;
    ;
    break;}
case 425:
#line 3028 "Gmsh.y"
{
      yyval.v[0] = yyvsp[-5].d;  yyval.v[1] = yyvsp[-3].d;  yyval.v[2] = yyvsp[-1].d;  yyval.v[3] = 0.0; yyval.v[4] = 1.0;
    ;
    break;}
case 426:
#line 3032 "Gmsh.y"
{
      yyval.v[0] = yyvsp[-5].d;  yyval.v[1] = yyvsp[-3].d;  yyval.v[2] = yyvsp[-1].d;  yyval.v[3] = 0.0; yyval.v[4] = 1.0;
    ;
    break;}
case 427:
#line 3039 "Gmsh.y"
{
    ;
    break;}
case 428:
#line 3042 "Gmsh.y"
{
    ;
    break;}
case 429:
#line 3048 "Gmsh.y"
{
    ;
    break;}
case 430:
#line 3051 "Gmsh.y"
{
    ;
    break;}
case 431:
#line 3057 "Gmsh.y"
{
    ;
    break;}
case 432:
#line 3060 "Gmsh.y"
{
       yyval.l = yyvsp[-1].l;
    ;
    break;}
case 433:
#line 3064 "Gmsh.y"
{
       yyval.l = yyvsp[-1].l;
    ;
    break;}
case 434:
#line 3071 "Gmsh.y"
{
      yyval.l = List_Create(2, 1, sizeof(List_T*)) ;
      List_Add(yyval.l, &(yyvsp[0].l)) ;
    ;
    break;}
case 435:
#line 3076 "Gmsh.y"
{
      List_Add(yyval.l, &(yyvsp[0].l)) ;
    ;
    break;}
case 436:
#line 3084 "Gmsh.y"
{
      yyval.l = List_Create(2, 1, sizeof(double)) ;
      List_Add(yyval.l, &(yyvsp[0].d)) ;
    ;
    break;}
case 437:
#line 3089 "Gmsh.y"
{
      yyval.l = yyvsp[0].l ;
    ;
    break;}
case 438:
#line 3093 "Gmsh.y"
{
      yyval.l = yyvsp[-1].l;
    ;
    break;}
case 439:
#line 3097 "Gmsh.y"
{
      yyval.l = yyvsp[-1].l;
      for(i = 0; i < List_Nbr(yyval.l); i++){
	pd = (double*)List_Pointer(yyval.l, i);
	(*pd) = - (*pd);
      }
    ;
    break;}
case 440:
#line 3108 "Gmsh.y"
{ 
      yyval.l = List_Create(2, 1, sizeof(double)) ; 
      for(d = yyvsp[-2].d; (yyvsp[-2].d < yyvsp[0].d) ? (d <= yyvsp[0].d) : (d >= yyvsp[0].d); (yyvsp[-2].d < yyvsp[0].d) ? (d += 1.) : (d -= 1.)) 
	List_Add(yyval.l, &d) ;
    ;
    break;}
case 441:
#line 3114 "Gmsh.y"
{
      yyval.l = List_Create(2, 1, sizeof(double)) ; 
      if(!yyvsp[0].d || (yyvsp[-4].d < yyvsp[-2].d && yyvsp[0].d < 0) || (yyvsp[-4].d > yyvsp[-2].d && yyvsp[0].d > 0)){
        yymsg(GERROR, "Wrong increment in '%g:%g:%g'", yyvsp[-4].d, yyvsp[-2].d, yyvsp[0].d) ;
	List_Add(yyval.l, &(yyvsp[-4].d)) ;
      }
      else
	for(d = yyvsp[-4].d; (yyvsp[0].d > 0) ? (d <= yyvsp[-2].d) : (d >= yyvsp[-2].d); d += yyvsp[0].d)
	  List_Add(yyval.l, &d) ;
   ;
    break;}
case 442:
#line 3125 "Gmsh.y"
{
      // Returns the coordinates of a point and fills a list with it.
      // This allows to ensure e.g. that relative point positions are
      // always conserved
      Vertex *v = FindPoint((int)yyvsp[-1].d, THEM);
      yyval.l = List_Create(3, 1, sizeof(double)) ;      
      if(!v) {
	yymsg(GERROR, "Unknown point '%d'", (int) yyvsp[-1].d) ;
	double d = 0.0 ;
	List_Add(yyval.l, &d);
	List_Add(yyval.l, &d);
	List_Add(yyval.l, &d);
      }
      else{
	List_Add(yyval.l, &v->Pos.X) ;
	List_Add(yyval.l, &v->Pos.Y) ;
	List_Add(yyval.l, &v->Pos.Z) ;
      }
    ;
    break;}
case 443:
#line 3145 "Gmsh.y"
{
      yyval.l = List_Create(List_Nbr(yyvsp[0].l), 1, sizeof(double)) ;
      for(int i = 0; i < List_Nbr(yyvsp[0].l); i++){
	Shape *s = (Shape*) List_Pointer(yyvsp[0].l, i);
	double d = s->Num;
	List_Add(yyval.l, &d);
      }
    ;
    break;}
case 444:
#line 3154 "Gmsh.y"
{
      yyval.l = List_Create(List_Nbr(yyvsp[0].l), 1, sizeof(double)) ;
      for(int i = 0; i < List_Nbr(yyvsp[0].l); i++){
	Shape *s = (Shape*) List_Pointer(yyvsp[0].l, i);
	double d = s->Num;
	List_Add(yyval.l, &d);
      }
    ;
    break;}
case 445:
#line 3163 "Gmsh.y"
{
      // FIXME: The syntax for this is ugly: we get double semi-colons
      // at the end of the line
      yyval.l = List_Create(List_Nbr(yyvsp[0].l), 1, sizeof(double)) ;
      for(int i = 0; i < List_Nbr(yyvsp[0].l); i++){
	Shape *s = (Shape*) List_Pointer(yyvsp[0].l, i);
	double d = s->Num;
	List_Add(yyval.l, &d);
      }
    ;
    break;}
case 446:
#line 3174 "Gmsh.y"
{
      yyval.l = List_Create(2, 1, sizeof(double)) ;
      TheSymbol.Name = yyvsp[-2].c ;
      if(!(pSymbol = (Symbol*)Tree_PQuery(Symbol_T, &TheSymbol))) {
	yymsg(GERROR, "Unknown variable '%s'", yyvsp[-2].c) ;
	d = 0.0 ;
	List_Add(yyval.l, &d);
      }
      else{
	for(i = 0; i < List_Nbr(pSymbol->val); i++)
	  List_Add(yyval.l, (double*)List_Pointer_Fast(pSymbol->val, i)) ;
      }
    ;
    break;}
case 447:
#line 3188 "Gmsh.y"
{
      yyval.l = List_Create(2, 1, sizeof(double)) ;
      TheSymbol.Name = yyvsp[-2].c ;
      if(!(pSymbol = (Symbol*)Tree_PQuery(Symbol_T, &TheSymbol))) {
	yymsg(GERROR, "Unknown variable '%s'", yyvsp[-2].c) ;
	d = 0.0 ;
	List_Add(yyval.l, &d);
      }
      else{
	for(i = 0; i < List_Nbr(pSymbol->val); i++){
	  d = - *(double*)List_Pointer_Fast(pSymbol->val, i);
	  List_Add(yyval.l, &d) ;
	}
      }
    ;
    break;}
case 448:
#line 3204 "Gmsh.y"
{
      yyval.l = List_Create(2, 1, sizeof(double)) ;
      TheSymbol.Name = yyvsp[-5].c ;
      if(!(pSymbol = (Symbol*)Tree_PQuery(Symbol_T, &TheSymbol))) {
	yymsg(GERROR, "Unknown variable '%s'", yyvsp[-5].c) ;
	d = 0.0 ;
	List_Add(yyval.l, &d);
      }
      else{
	for(i = 0; i < List_Nbr(yyvsp[-2].l); i++){
	  j = (int)(*(double*)List_Pointer_Fast(yyvsp[-2].l, i));
	  if((pd = (double*)List_Pointer_Test(pSymbol->val, j)))
	    List_Add(yyval.l, pd) ;
	  else
	    yymsg(GERROR, "Uninitialized variable '%s[%d]'", yyvsp[-5].c, j) ;	  
	}
      }
      List_Delete(yyvsp[-2].l);
    ;
    break;}
case 449:
#line 3224 "Gmsh.y"
{
      yyval.l = List_Create(2, 1, sizeof(double)) ;
      TheSymbol.Name = yyvsp[-5].c ;
      if(!(pSymbol = (Symbol*)Tree_PQuery(Symbol_T, &TheSymbol))) {
	yymsg(GERROR, "Unknown variable '%s'", yyvsp[-5].c) ;
	d = 0.0 ;
	List_Add(yyval.l, &d);
      }
      else{
	for(i = 0; i < List_Nbr(yyvsp[-2].l); i++){
	  j = (int)(*(double*)List_Pointer_Fast(yyvsp[-2].l, i));
	  if((pd = (double*)List_Pointer_Test(pSymbol->val, j))){
	    d = - *pd;
	    List_Add(yyval.l, &d) ;
	  }
	  else
	    yymsg(GERROR, "Uninitialized variable '%s[%d]'", yyvsp[-5].c, j) ;	  
	}
      }
      List_Delete(yyvsp[-2].l);
    ;
    break;}
case 450:
#line 3249 "Gmsh.y"
{
      yyval.l = List_Create(2, 1, sizeof(double)) ;
      List_Add(yyval.l, &(yyvsp[0].d)) ;
    ;
    break;}
case 451:
#line 3254 "Gmsh.y"
{
      yyval.l = yyvsp[0].l ;
    ;
    break;}
case 452:
#line 3258 "Gmsh.y"
{
      List_Add(yyval.l, &(yyvsp[0].d)) ;
    ;
    break;}
case 453:
#line 3262 "Gmsh.y"
{
      for(i = 0; i < List_Nbr(yyvsp[0].l); i++){
	List_Read(yyvsp[0].l, i, &d) ;
	List_Add(yyval.l, &d) ;
      }
      List_Delete(yyvsp[0].l);
    ;
    break;}
case 454:
#line 3274 "Gmsh.y"
{
      yyval.u = PACK_COLOR((int)yyvsp[-7].d, (int)yyvsp[-5].d, (int)yyvsp[-3].d, (int)yyvsp[-1].d);
    ;
    break;}
case 455:
#line 3278 "Gmsh.y"
{
      yyval.u = PACK_COLOR((int)yyvsp[-5].d, (int)yyvsp[-3].d, (int)yyvsp[-1].d, 255);
    ;
    break;}
case 456:
#line 3289 "Gmsh.y"
{
      yyval.u = Get_ColorForString(ColorString, -1, yyvsp[0].c, &flag);
      if(flag) yymsg(GERROR, "Unknown color '%s'", yyvsp[0].c);
    ;
    break;}
case 457:
#line 3294 "Gmsh.y"
{
      if(!(pColCat = Get_ColorOptionCategory(yyvsp[-4].c))){
	yymsg(GERROR, "Unknown color option class '%s'", yyvsp[-4].c);
	yyval.u = 0 ;
      }
      else{
	if(!(pColOpt =  (unsigned int (*) (int, int, unsigned int))Get_ColorOption(yyvsp[0].c, pColCat))){
	  yymsg(GERROR, "Unknown color option '%s.Color.%s'", yyvsp[-4].c, yyvsp[0].c);
	  yyval.u = 0 ;
	}
	else{
	  yyval.u = pColOpt(0, GMSH_GET, 0) ;
	}
      }
    ;
    break;}
case 458:
#line 3313 "Gmsh.y"
{
      yyval.l = yyvsp[-1].l;
    ;
    break;}
case 459:
#line 3317 "Gmsh.y"
{
      yyval.l = List_Create(256, 10, sizeof(unsigned int)) ;
      GmshColorTable *ct = Get_ColorTable((int)yyvsp[-3].d);
      if(!ct)
	yymsg(GERROR, "View[%d] does not exist", (int)yyvsp[-3].d);
      else{
	for(i = 0; i < ct->size; i++) 
	  List_Add(yyval.l, &ct->table[i]);
      }
    ;
    break;}
case 460:
#line 3331 "Gmsh.y"
{
      yyval.l = List_Create(256, 10, sizeof(unsigned int)) ;
      List_Add(yyval.l, &(yyvsp[0].u)) ;
    ;
    break;}
case 461:
#line 3336 "Gmsh.y"
{
      List_Add(yyval.l, &(yyvsp[0].u)) ;
    ;
    break;}
case 462:
#line 3343 "Gmsh.y"
{
      yyval.c = yyvsp[0].c;
    ;
    break;}
case 463:
#line 3347 "Gmsh.y"
{
      yyval.c = (char *)Malloc((strlen(yyvsp[-3].c)+strlen(yyvsp[-1].c)+1)*sizeof(char)) ;
      strcpy(yyval.c, yyvsp[-3].c) ;  
      strcat(yyval.c, yyvsp[-1].c) ;
      Free(yyvsp[-3].c);
      Free(yyvsp[-1].c);
    ;
    break;}
case 464:
#line 3355 "Gmsh.y"
{
      yyval.c = (char *)Malloc((strlen(yyvsp[-1].c)+1)*sizeof(char)) ;
      for(i = strlen(yyvsp[-1].c)-1; i >= 0; i--){
	if(yyvsp[-1].c[i] == '.'){
	  strncpy(yyval.c, yyvsp[-1].c, i);
	  yyval.c[i]='\0';
	  break;
	}
      }
      if(i <= 0) strcpy(yyval.c, yyvsp[-1].c);
      Free(yyvsp[-1].c);
    ;
    break;}
case 465:
#line 3368 "Gmsh.y"
{
      yyval.c = yyvsp[-1].c;
    ;
    break;}
case 466:
#line 3372 "Gmsh.y"
{
      i = PrintListOfDouble(yyvsp[-3].c, yyvsp[-1].l, tmpstring);
      if(i < 0){
	yymsg(GERROR, "Too few arguments in Sprintf");
	yyval.c = yyvsp[-3].c;
      }
      else if(i > 0){
	yymsg(GERROR, "%d extra argument%s in Sprintf", i, (i>1)?"s":"");
	yyval.c = yyvsp[-3].c;
      }
      else{
	yyval.c = (char*)Malloc((strlen(tmpstring)+1)*sizeof(char));
	strcpy(yyval.c, tmpstring);
	Free(yyvsp[-3].c);
      }
      List_Delete(yyvsp[-1].l);
    ;
    break;}
case 467:
#line 3390 "Gmsh.y"
{ 
      if(!(pStrCat = Get_StringOptionCategory(yyvsp[-3].c)))
	yymsg(GERROR, "Unknown string option class '%s'", yyvsp[-3].c);
      else{
	if(!(pStrOpt = (char *(*) (int, int, char *))Get_StringOption(yyvsp[-1].c, pStrCat)))
	  yymsg(GERROR, "Unknown string option '%s.%s'", yyvsp[-3].c, yyvsp[-1].c);
	else{
	  str = pStrOpt(0, GMSH_GET, NULL) ;
	  yyval.c = (char*)Malloc((strlen(str)+1)*sizeof(char));
	  strcpy(yyval.c, str);
	}
      }
    ;
    break;}
case 468:
#line 3404 "Gmsh.y"
{ 
      if(!(pStrCat = Get_StringOptionCategory(yyvsp[-6].c)))
	yymsg(GERROR, "Unknown string option class '%s'", yyvsp[-6].c);
      else{
	if(!(pStrOpt = (char *(*) (int, int, char *))Get_StringOption(yyvsp[-1].c, pStrCat)))
	  yymsg(GERROR, "Unknown string option '%s[%d].%s'", yyvsp[-6].c, (int)yyvsp[-4].d, yyvsp[-1].c);
	else{
	  str = pStrOpt((int)yyvsp[-4].d, GMSH_GET, NULL) ;
	  yyval.c = (char*)Malloc((strlen(str)+1)*sizeof(char));
	  strcpy(yyval.c, str);
	}
      }
    ;
    break;}
}
   /* the action file gets copied in in place of this dollarsign */
#line 543 "/usr/share/bison.simple"

  yyvsp -= yylen;
  yyssp -= yylen;
#ifdef YYLSP_NEEDED
  yylsp -= yylen;
#endif

#if YYDEBUG != 0
  if (yydebug)
    {
      short *ssp1 = yyss - 1;
      fprintf (stderr, "state stack now");
      while (ssp1 != yyssp)
	fprintf (stderr, " %d", *++ssp1);
      fprintf (stderr, "\n");
    }
#endif

  *++yyvsp = yyval;

#ifdef YYLSP_NEEDED
  yylsp++;
  if (yylen == 0)
    {
      yylsp->first_line = yylloc.first_line;
      yylsp->first_column = yylloc.first_column;
      yylsp->last_line = (yylsp-1)->last_line;
      yylsp->last_column = (yylsp-1)->last_column;
      yylsp->text = 0;
    }
  else
    {
      yylsp->last_line = (yylsp+yylen-1)->last_line;
      yylsp->last_column = (yylsp+yylen-1)->last_column;
    }
#endif

  /* Now "shift" the result of the reduction.
     Determine what state that goes to,
     based on the state we popped back to
     and the rule number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTBASE] + *yyssp;
  if (yystate >= 0 && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTBASE];

  goto yynewstate;

yyerrlab:   /* here on detecting error */

  if (! yyerrstatus)
    /* If not already recovering from an error, report this error.  */
    {
      ++yynerrs;

#ifdef YYERROR_VERBOSE
      yyn = yypact[yystate];

      if (yyn > YYFLAG && yyn < YYLAST)
	{
	  int size = 0;
	  char *msg;
	  int x, count;

	  count = 0;
	  /* Start X at -yyn if nec to avoid negative indexes in yycheck.  */
	  for (x = (yyn < 0 ? -yyn : 0);
	       x < (sizeof(yytname) / sizeof(char *)); x++)
	    if (yycheck[x + yyn] == x)
	      size += strlen(yytname[x]) + 15, count++;
	  msg = (char *) malloc(size + 15);
	  if (msg != 0)
	    {
	      strcpy(msg, "parse error");

	      if (count < 5)
		{
		  count = 0;
		  for (x = (yyn < 0 ? -yyn : 0);
		       x < (sizeof(yytname) / sizeof(char *)); x++)
		    if (yycheck[x + yyn] == x)
		      {
			strcat(msg, count == 0 ? ", expecting `" : " or `");
			strcat(msg, yytname[x]);
			strcat(msg, "'");
			count++;
		      }
		}
	      yyerror(msg);
	      free(msg);
	    }
	  else
	    yyerror ("parse error; also virtual memory exceeded");
	}
      else
#endif /* YYERROR_VERBOSE */
	yyerror("parse error");
    }

  goto yyerrlab1;
yyerrlab1:   /* here on error raised explicitly by an action */

  if (yyerrstatus == 3)
    {
      /* if just tried and failed to reuse lookahead token after an error, discard it.  */

      /* return failure if at end of input */
      if (yychar == YYEOF)
	YYABORT;

#if YYDEBUG != 0
      if (yydebug)
	fprintf(stderr, "Discarding token %d (%s).\n", yychar, yytname[yychar1]);
#endif

      yychar = YYEMPTY;
    }

  /* Else will try to reuse lookahead token
     after shifting the error token.  */

  yyerrstatus = 3;		/* Each real token shifted decrements this */

  goto yyerrhandle;

yyerrdefault:  /* current state does not do anything special for the error token. */

#if 0
  /* This is wrong; only states that explicitly want error tokens
     should shift them.  */
  yyn = yydefact[yystate];  /* If its default is to accept any token, ok.  Otherwise pop it.*/
  if (yyn) goto yydefault;
#endif

yyerrpop:   /* pop the current state because it cannot handle the error token */

  if (yyssp == yyss) YYABORT;
  yyvsp--;
  yystate = *--yyssp;
#ifdef YYLSP_NEEDED
  yylsp--;
#endif

#if YYDEBUG != 0
  if (yydebug)
    {
      short *ssp1 = yyss - 1;
      fprintf (stderr, "Error: state stack now");
      while (ssp1 != yyssp)
	fprintf (stderr, " %d", *++ssp1);
      fprintf (stderr, "\n");
    }
#endif

yyerrhandle:

  yyn = yypact[yystate];
  if (yyn == YYFLAG)
    goto yyerrdefault;

  yyn += YYTERROR;
  if (yyn < 0 || yyn > YYLAST || yycheck[yyn] != YYTERROR)
    goto yyerrdefault;

  yyn = yytable[yyn];
  if (yyn < 0)
    {
      if (yyn == YYFLAG)
	goto yyerrpop;
      yyn = -yyn;
      goto yyreduce;
    }
  else if (yyn == 0)
    goto yyerrpop;

  if (yyn == YYFINAL)
    YYACCEPT;

#if YYDEBUG != 0
  if (yydebug)
    fprintf(stderr, "Shifting error token, ");
#endif

  *++yyvsp = yylval;
#ifdef YYLSP_NEEDED
  *++yylsp = yylloc;
#endif

  yystate = yyn;
  goto yynewstate;

 yyacceptlab:
  /* YYACCEPT comes here.  */
  if (yyfree_stacks)
    {
      free (yyss);
      free (yyvs);
#ifdef YYLSP_NEEDED
      free (yyls);
#endif
    }
  return 0;

 yyabortlab:
  /* YYABORT comes here.  */
  if (yyfree_stacks)
    {
      free (yyss);
      free (yyvs);
#ifdef YYLSP_NEEDED
      free (yyls);
#endif
    }
  return 1;
}
#line 3419 "Gmsh.y"


void DeleteSymbol(void *a, void *b){
  Symbol *s = (Symbol*)a;
  Free(s->Name);
  List_Delete(s->val);
}

int CompareSymbols (const void *a, const void *b){
  return(strcmp(((Symbol*)a)->Name, ((Symbol*)b)->Name));
}

void InitSymbols(void){
  if(Symbol_T){
    Tree_Action(Symbol_T, DeleteSymbol);
    Tree_Delete(Symbol_T);
  }
  Symbol_T = Tree_Create(sizeof(Symbol), CompareSymbols);
}

int PrintListOfDouble(char *format, List_T *list, char *buffer){
  int i, j, k;
  char tmp1[256], tmp2[256];

  j=0;
  while(j < (int)strlen(format) && format[j]!='%') j++;
  strncpy(buffer, format, j); 
  buffer[j]='\0'; 
  for(i = 0; i < List_Nbr(list); i++){
    k = j;
    j++;
    if(j < (int)strlen(format)){
      if(format[j] == '%'){
	strcat(buffer, "%");
	j++;
      }
      while(format[j] != '%' && j < (int)strlen(format)) j++;
      if(k != j){
	strncpy(tmp1, &(format[k]), j-k);
	tmp1[j-k]='\0';
	sprintf(tmp2, tmp1, *(double*)List_Pointer(list, i)); 
	strcat(buffer, tmp2);
      }
    }
    else{
      return List_Nbr(list)-i;
    }
  }
  if(j != (int)strlen(format))
    return -1;
  return 0;
}

void yyerror(char *s){
  Msg(GERROR, "'%s', line %d : %s (%s)", yyname, yylineno-1, s, yytext);
  yyerrorstate=1;
}

void yymsg(int type, char *fmt, ...){
  va_list args;
  char tmp[1024];

  va_start (args, fmt);
  vsprintf (tmp, fmt, args);
  va_end (args);

  Msg(type, "'%s', line %d : %s", yyname, yylineno-1, tmp);

  if(type == GERROR) yyerrorstate=1;
}


