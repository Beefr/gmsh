
/*  A Bison parser, made from Gmsh.y
    by GNU Bison version 1.28  */

#define YYBISON 1  /* Identify Bison output.  */

#define	tDOUBLE	257
#define	tSTRING	258
#define	tBIGSTR	259
#define	tEND	260
#define	tAFFECT	261
#define	tDOTS	262
#define	tPi	263
#define	tMPI_Rank	264
#define	tMPI_Size	265
#define	tExp	266
#define	tLog	267
#define	tLog10	268
#define	tSqrt	269
#define	tSin	270
#define	tAsin	271
#define	tCos	272
#define	tAcos	273
#define	tTan	274
#define	tRand	275
#define	tAtan	276
#define	tAtan2	277
#define	tSinh	278
#define	tCosh	279
#define	tTanh	280
#define	tFabs	281
#define	tFloor	282
#define	tCeil	283
#define	tFmod	284
#define	tModulo	285
#define	tHypot	286
#define	tPrintf	287
#define	tSprintf	288
#define	tStrCat	289
#define	tStrPrefix	290
#define	tDraw	291
#define	tPoint	292
#define	tCircle	293
#define	tEllipse	294
#define	tLine	295
#define	tSurface	296
#define	tSpline	297
#define	tVolume	298
#define	tCharacteristic	299
#define	tLength	300
#define	tParametric	301
#define	tElliptic	302
#define	tPlane	303
#define	tRuled	304
#define	tTransfinite	305
#define	tComplex	306
#define	tPhysical	307
#define	tUsing	308
#define	tBump	309
#define	tProgression	310
#define	tPlugin	311
#define	tRotate	312
#define	tTranslate	313
#define	tSymmetry	314
#define	tDilate	315
#define	tExtrude	316
#define	tDuplicata	317
#define	tLoop	318
#define	tRecombine	319
#define	tDelete	320
#define	tCoherence	321
#define	tIntersect	322
#define	tAttractor	323
#define	tLayers	324
#define	tScalarPoint	325
#define	tVectorPoint	326
#define	tTensorPoint	327
#define	tScalarLine	328
#define	tVectorLine	329
#define	tTensorLine	330
#define	tScalarTriangle	331
#define	tVectorTriangle	332
#define	tTensorTriangle	333
#define	tScalarQuadrangle	334
#define	tVectorQuadrangle	335
#define	tTensorQuadrangle	336
#define	tScalarTetrahedron	337
#define	tVectorTetrahedron	338
#define	tTensorTetrahedron	339
#define	tScalarHexahedron	340
#define	tVectorHexahedron	341
#define	tTensorHexahedron	342
#define	tScalarPrism	343
#define	tVectorPrism	344
#define	tTensorPrism	345
#define	tScalarPyramid	346
#define	tVectorPyramid	347
#define	tTensorPyramid	348
#define	tText2D	349
#define	tText3D	350
#define	tBSpline	351
#define	tBezier	352
#define	tNurbs	353
#define	tOrder	354
#define	tWith	355
#define	tBounds	356
#define	tKnots	357
#define	tColor	358
#define	tColorTable	359
#define	tFor	360
#define	tIn	361
#define	tEndFor	362
#define	tIf	363
#define	tEndIf	364
#define	tExit	365
#define	tReturn	366
#define	tCall	367
#define	tFunction	368
#define	tMesh	369
#define	tB_SPLINE_SURFACE_WITH_KNOTS	370
#define	tB_SPLINE_CURVE_WITH_KNOTS	371
#define	tCARTESIAN_POINT	372
#define	tTRUE	373
#define	tFALSE	374
#define	tUNSPECIFIED	375
#define	tU	376
#define	tV	377
#define	tEDGE_CURVE	378
#define	tVERTEX_POINT	379
#define	tORIENTED_EDGE	380
#define	tPLANE	381
#define	tFACE_OUTER_BOUND	382
#define	tEDGE_LOOP	383
#define	tADVANCED_FACE	384
#define	tVECTOR	385
#define	tDIRECTION	386
#define	tAXIS2_PLACEMENT_3D	387
#define	tISO	388
#define	tENDISO	389
#define	tENDSEC	390
#define	tDATA	391
#define	tHEADER	392
#define	tFILE_DESCRIPTION	393
#define	tFILE_SCHEMA	394
#define	tFILE_NAME	395
#define	tMANIFOLD_SOLID_BREP	396
#define	tCLOSED_SHELL	397
#define	tADVANCED_BREP_SHAPE_REPRESENTATION	398
#define	tFACE_BOUND	399
#define	tCYLINDRICAL_SURFACE	400
#define	tCONICAL_SURFACE	401
#define	tCIRCLE	402
#define	tTRIMMED_CURVE	403
#define	tGEOMETRIC_SET	404
#define	tCOMPOSITE_CURVE_SEGMENT	405
#define	tCONTINUOUS	406
#define	tCOMPOSITE_CURVE	407
#define	tTOROIDAL_SURFACE	408
#define	tPRODUCT_DEFINITION	409
#define	tPRODUCT_DEFINITION_SHAPE	410
#define	tSHAPE_DEFINITION_REPRESENTATION	411
#define	tELLIPSE	412
#define	tTrimmed	413
#define	tSolid	414
#define	tEndSolid	415
#define	tVertex	416
#define	tFacet	417
#define	tNormal	418
#define	tOuter	419
#define	tLoopSTL	420
#define	tEndLoop	421
#define	tEndFacet	422
#define	tAFFECTPLUS	423
#define	tAFFECTMINUS	424
#define	tAFFECTTIMES	425
#define	tAFFECTDIVIDE	426
#define	tOR	427
#define	tAND	428
#define	tEQUAL	429
#define	tNOTEQUAL	430
#define	tAPPROXEQUAL	431
#define	tLESSOREQUAL	432
#define	tGREATEROREQUAL	433
#define	tCROSSPRODUCT	434
#define	tPLUSPLUS	435
#define	tMINUSMINUS	436
#define	UNARYPREC	437

#line 1 "Gmsh.y"
 

// $Id: Gmsh.tab.cpp,v 1.144 2002-09-19 21:44:12 geuzaine Exp $
//
// Copyright (C) 1997 - 2002 C. Geuzaine, J.-F. Remacle
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
// USA.
// 
// Please report all bugs and problems to "gmsh@geuz.org".

#include <stdarg.h>
#ifndef _NOPLUGIN
#include "PluginManager.h"
#endif
#include "ParUtil.h"
#include "Gmsh.h"
#include "Numeric.h"
#include "Context.h"
#include "Geo.h"
#include "CAD.h"
#include "DataBase.h"
#include "Mesh.h"
#include "Draw.h"
#include "Create.h"
#include "Views.h"
#include "StepGeomDatabase.h"
#include "Options.h"
#include "Colors.h"
#include "Parser.h"
#include "OpenFile.h"
#include "FunctionManager.h"
#include "ColorTable.h"
#include "Timer.h"
#include "CreateFile.h"
#include "STL.h"

#ifdef __DECCXX // bug in bison
#include <alloca.h>
#endif

List_T *Symbol_L=NULL;

extern Context_T  CTX;
extern Mesh      *THEM;

static FILE          *yyinTab[MAX_OPEN_FILES];
static int            yylinenoTab[MAX_OPEN_FILES];
static fpos_t         yyposImbricatedLoopsTab[MAX_OPEN_FILES];
static int            yylinenoImbricatedLoopsTab[MAX_OPEN_FILES];
static double         LoopControlVariablesTab[MAX_OPEN_FILES][3];
static char*          LoopControlVariablesNameTab[MAX_OPEN_FILES];
static char           yynameTab[MAX_OPEN_FILES][256];
static char           tmpstring[1024];
static Symbol         TheSymbol, *pSymbol;
static Surface       *STL_Surf;
static Shape          TheShape;
static int            i,j,k,flag,RecursionLevel=0,ImbricatedLoop = 0;
static int            Last_NumberOfPoints = 0;
static double         d, *pd;
static ExtrudeParams  extr;
static char           *str;
static StringXString  *pStrCat;
static StringXNumber  *pNumCat;
static StringXColor   *pColCat;
static double         (*pNumOpt)(int num, int action, double value);
static char*          (*pStrOpt)(int num, int action, char *value);
static unsigned int   (*pColOpt)(int num, int action, unsigned int value);
static Post_View      *View;

char *strsave(char *ptr);
void  yyerror (char *s);
void  yymsg (int type, char *fmt, ...);
void  skip_until (char *skip, char *until);
int PrintListOfDouble(char *format, List_T *list, char *buffer);

#line 90 "Gmsh.y"
typedef union {
  char    *c;
  int      i;
  unsigned int u;
  double   d;
  double   v[5];
  Shape    s;
  List_T  *l;
} YYSTYPE;
#include <stdio.h>

#ifndef __cplusplus
#ifndef __STDC__
#define const
#endif
#endif



#define	YYFINAL		2252
#define	YYFLAG		-32768
#define	YYNTBASE	202

#define YYTRANSLATE(x) ((unsigned)(x) <= 437 ? yytranslate[x] : 332)

static const short yytranslate[] = {     0,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,   189,     2,     2,     2,   187,     2,     2,   194,
   195,   185,   183,   199,   184,   198,   186,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,   179,
     2,   181,   173,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
   196,     2,   197,   193,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,   200,     2,   201,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     1,     3,     4,     5,     6,
     7,     8,     9,    10,    11,    12,    13,    14,    15,    16,
    17,    18,    19,    20,    21,    22,    23,    24,    25,    26,
    27,    28,    29,    30,    31,    32,    33,    34,    35,    36,
    37,    38,    39,    40,    41,    42,    43,    44,    45,    46,
    47,    48,    49,    50,    51,    52,    53,    54,    55,    56,
    57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
    67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
    77,    78,    79,    80,    81,    82,    83,    84,    85,    86,
    87,    88,    89,    90,    91,    92,    93,    94,    95,    96,
    97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
   107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
   117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
   127,   128,   129,   130,   131,   132,   133,   134,   135,   136,
   137,   138,   139,   140,   141,   142,   143,   144,   145,   146,
   147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
   157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
   167,   168,   169,   170,   171,   172,   174,   175,   176,   177,
   178,   180,   182,   188,   190,   191,   192
};

#if YYDEBUG != 0
static const short yyprhs[] = {     0,
     0,     2,     4,     6,     9,    11,    14,    16,    38,    40,
    41,    44,    46,    48,    50,    53,    56,    59,    62,    65,
    73,    79,    97,   107,   131,   163,   179,   191,   203,   219,
   229,   243,   253,   265,   279,   289,   299,   311,   321,   333,
   343,   355,   369,   383,   395,   409,   427,   437,   449,   461,
   475,   487,   497,   498,   501,   503,   505,   507,   509,   511,
   513,   515,   517,   519,   521,   523,   525,   527,   533,   541,
   548,   557,   558,   561,   564,   567,   570,   573,   576,   579,
   582,   585,   588,   591,   594,   597,   600,   603,   606,   609,
   612,   615,   618,   621,   624,   627,   630,   633,   636,   638,
   642,   643,   657,   659,   663,   664,   678,   680,   684,   685,
   699,   701,   705,   706,   726,   728,   732,   733,   753,   755,
   759,   760,   780,   782,   786,   787,   813,   815,   819,   820,
   846,   848,   852,   853,   879,   881,   885,   886,   918,   920,
   924,   925,   957,   959,   963,   964,   996,   998,  1002,  1003,
  1035,  1037,  1041,  1042,  1074,  1076,  1080,  1081,  1113,  1115,
  1119,  1120,  1176,  1178,  1182,  1183,  1239,  1241,  1245,  1246,
  1302,  1304,  1308,  1309,  1353,  1355,  1359,  1360,  1404,  1406,
  1410,  1411,  1455,  1457,  1461,  1462,  1500,  1502,  1506,  1507,
  1545,  1547,  1551,  1552,  1590,  1592,  1596,  1597,  1611,  1613,
  1617,  1618,  1634,  1636,  1638,  1640,  1642,  1644,  1646,  1648,
  1653,  1661,  1671,  1678,  1682,  1689,  1696,  1706,  1713,  1723,
  1729,  1738,  1747,  1759,  1766,  1776,  1786,  1796,  1804,  1813,
  1826,  1833,  1841,  1849,  1862,  1870,  1878,  1888,  1906,  1915,
  1924,  1932,  1940,  1952,  1961,  1974,  1983,  2006,  2027,  2036,
  2045,  2054,  2062,  2071,  2077,  2089,  2095,  2105,  2107,  2109,
  2111,  2112,  2115,  2122,  2129,  2136,  2141,  2146,  2153,  2157,
  2163,  2167,  2171,  2179,  2182,  2185,  2192,  2201,  2210,  2221,
  2223,  2226,  2228,  2232,  2237,  2239,  2248,  2261,  2276,  2285,
  2298,  2313,  2314,  2327,  2328,  2345,  2346,  2365,  2374,  2387,
  2402,  2403,  2416,  2417,  2434,  2435,  2454,  2456,  2459,  2469,
  2477,  2480,  2487,  2497,  2507,  2516,  2525,  2534,  2541,  2546,
  2549,  2552,  2554,  2556,  2558,  2560,  2562,  2564,  2568,  2571,
  2574,  2577,  2581,  2585,  2589,  2593,  2597,  2601,  2605,  2609,
  2613,  2617,  2621,  2625,  2629,  2633,  2639,  2644,  2649,  2654,
  2659,  2664,  2669,  2674,  2679,  2684,  2689,  2696,  2701,  2706,
  2711,  2716,  2721,  2726,  2733,  2740,  2747,  2752,  2757,  2762,
  2767,  2772,  2777,  2782,  2787,  2792,  2797,  2802,  2809,  2814,
  2819,  2824,  2829,  2834,  2839,  2846,  2853,  2860,  2865,  2867,
  2869,  2871,  2873,  2875,  2880,  2883,  2889,  2893,  2900,  2905,
  2913,  2915,  2918,  2921,  2925,  2929,  2941,  2951,  2959,  2967,
  2968,  2972,  2974,  2978,  2979,  2983,  2987,  2989,  2993,  2995,
  2997,  3001,  3006,  3010,  3016,  3020,  3025,  3032,  3040,  3042,
  3044,  3048,  3052,  3062,  3070,  3072,  3078,  3082,  3089,  3091,
  3095,  3097,  3104,  3109,  3114,  3121,  3128
};

static const short yyrhs[] = {   205,
     0,   204,     0,   210,     0,     1,     6,     0,     3,     0,
   184,     3,     0,   160,     0,   163,   164,   203,   203,   203,
   165,   166,   162,   203,   203,   203,   162,   203,   203,   203,
   162,   203,   203,   203,   167,   168,     0,   161,     0,     0,
   205,   206,     0,   207,     0,   209,     0,   208,     0,   134,
     6,     0,   135,     6,     0,   137,     6,     0,   136,     6,
     0,   138,     6,     0,   139,   194,   321,   199,     5,   195,
     6,     0,   140,   194,   321,   195,     6,     0,   141,   194,
     5,   199,     5,   199,   321,   199,   321,   199,     5,   199,
     5,   199,     5,   195,     6,     0,     3,     7,   118,   194,
     5,   199,   319,   195,     6,     0,     3,     7,   117,   194,
     5,   199,   317,   199,   325,   199,   316,   199,   316,   199,
   316,   199,   325,   199,   325,   199,   316,   195,     6,     0,
     3,     7,   116,   194,     5,   199,   317,   199,   317,   199,
   323,   199,   316,   199,   316,   199,   316,   199,   316,   199,
   325,   199,   325,   199,   325,   199,   325,   199,   316,   195,
     6,     0,     3,     7,   124,   194,     5,   199,     3,   199,
     3,   199,     3,   199,   316,   195,     6,     0,     3,     7,
   128,   194,     5,   199,     3,   199,   316,   195,     6,     0,
     3,     7,   145,   194,     5,   199,     3,   199,   316,   195,
     6,     0,     3,     7,   126,   194,     5,   199,   185,   199,
   185,   199,   317,   199,   316,   195,     6,     0,     3,     7,
   129,   194,     5,   199,   325,   195,     6,     0,     3,     7,
   130,   194,     5,   199,   325,   199,     3,   199,   316,   195,
     6,     0,     3,     7,   125,   194,     5,   199,     3,   195,
     6,     0,     3,     7,   131,   194,     5,   199,     3,   199,
   317,   195,     6,     0,     3,     7,   133,   194,     5,   199,
     3,   199,     3,   199,     3,   195,     6,     0,     3,     7,
   132,   194,     5,   199,   319,   195,     6,     0,     3,     7,
   127,   194,     5,   199,     3,   195,     6,     0,     3,     7,
    41,   194,     5,   199,     3,   199,     3,   195,     6,     0,
     3,     7,   143,   194,     5,   199,   325,   195,     6,     0,
     3,     7,   144,   194,     5,   199,   325,   199,     3,   195,
     6,     0,     3,     7,   142,   194,     5,   199,     3,   195,
     6,     0,     3,     7,   146,   194,     5,   199,     3,   199,
   317,   195,     6,     0,     3,     7,   147,   194,     5,   199,
     3,   199,   317,   199,   317,   195,     6,     0,     3,     7,
   154,   194,     5,   199,     3,   199,   317,   199,   317,   195,
     6,     0,     3,     7,   148,   194,     5,   199,     3,   199,
   317,   195,     6,     0,     3,     7,   158,   194,     5,   199,
     3,   199,   317,   199,   317,   195,     6,     0,     3,     7,
   149,   194,     5,   199,     3,   199,   325,   199,   325,   199,
   316,   199,   316,   195,     6,     0,     3,     7,   150,   194,
     5,   199,   325,   195,     6,     0,     3,     7,   151,   194,
   152,   199,   316,   199,     3,   195,     6,     0,     3,     7,
   153,   194,     5,   199,   325,   199,   316,   195,     6,     0,
     3,     7,   155,   194,     5,   199,     5,   199,     3,   199,
     3,   195,     6,     0,     3,     7,   156,   194,     5,   199,
     5,   199,     3,   195,     6,     0,     3,     7,   157,   194,
     3,   199,     3,   195,     6,     0,     0,   210,   211,     0,
   213,     0,   212,     0,   295,     0,   296,     0,   297,     0,
   300,     0,   301,     0,   302,     0,   305,     0,   314,     0,
   315,     0,   304,     0,   303,     0,    33,   194,     5,   195,
     6,     0,    33,   194,     5,   199,   327,   195,     6,     0,
     4,     5,   200,   214,   201,     6,     0,     4,     5,     4,
   319,   200,   214,   201,     6,     0,     0,   214,   216,     0,
   214,   219,     0,   214,   222,     0,   214,   225,     0,   214,
   228,     0,   214,   231,     0,   214,   234,     0,   214,   237,
     0,   214,   240,     0,   214,   243,     0,   214,   246,     0,
   214,   249,     0,   214,   252,     0,   214,   255,     0,   214,
   258,     0,   214,   261,     0,   214,   264,     0,   214,   267,
     0,   214,   270,     0,   214,   273,     0,   214,   276,     0,
   214,   279,     0,   214,   282,     0,   214,   285,     0,   214,
   288,     0,   214,   291,     0,   317,     0,   215,   199,   317,
     0,     0,    71,   194,   317,   199,   317,   199,   317,   195,
   217,   200,   215,   201,     6,     0,   317,     0,   218,   199,
   317,     0,     0,    72,   194,   317,   199,   317,   199,   317,
   195,   220,   200,   218,   201,     6,     0,   317,     0,   221,
   199,   317,     0,     0,    73,   194,   317,   199,   317,   199,
   317,   195,   223,   200,   221,   201,     6,     0,   317,     0,
   224,   199,   317,     0,     0,    74,   194,   317,   199,   317,
   199,   317,   199,   317,   199,   317,   199,   317,   195,   226,
   200,   224,   201,     6,     0,   317,     0,   227,   199,   317,
     0,     0,    75,   194,   317,   199,   317,   199,   317,   199,
   317,   199,   317,   199,   317,   195,   229,   200,   227,   201,
     6,     0,   317,     0,   230,   199,   317,     0,     0,    76,
   194,   317,   199,   317,   199,   317,   199,   317,   199,   317,
   199,   317,   195,   232,   200,   230,   201,     6,     0,   317,
     0,   233,   199,   317,     0,     0,    77,   194,   317,   199,
   317,   199,   317,   199,   317,   199,   317,   199,   317,   199,
   317,   199,   317,   199,   317,   195,   235,   200,   233,   201,
     6,     0,   317,     0,   236,   199,   317,     0,     0,    78,
   194,   317,   199,   317,   199,   317,   199,   317,   199,   317,
   199,   317,   199,   317,   199,   317,   199,   317,   195,   238,
   200,   236,   201,     6,     0,   317,     0,   239,   199,   317,
     0,     0,    79,   194,   317,   199,   317,   199,   317,   199,
   317,   199,   317,   199,   317,   199,   317,   199,   317,   199,
   317,   195,   241,   200,   239,   201,     6,     0,   317,     0,
   242,   199,   317,     0,     0,    80,   194,   317,   199,   317,
   199,   317,   199,   317,   199,   317,   199,   317,   199,   317,
   199,   317,   199,   317,   199,   317,   199,   317,   199,   317,
   195,   244,   200,   242,   201,     6,     0,   317,     0,   245,
   199,   317,     0,     0,    81,   194,   317,   199,   317,   199,
   317,   199,   317,   199,   317,   199,   317,   199,   317,   199,
   317,   199,   317,   199,   317,   199,   317,   199,   317,   195,
   247,   200,   245,   201,     6,     0,   317,     0,   248,   199,
   317,     0,     0,    82,   194,   317,   199,   317,   199,   317,
   199,   317,   199,   317,   199,   317,   199,   317,   199,   317,
   199,   317,   199,   317,   199,   317,   199,   317,   195,   250,
   200,   248,   201,     6,     0,   317,     0,   251,   199,   317,
     0,     0,    83,   194,   317,   199,   317,   199,   317,   199,
   317,   199,   317,   199,   317,   199,   317,   199,   317,   199,
   317,   199,   317,   199,   317,   199,   317,   195,   253,   200,
   251,   201,     6,     0,   317,     0,   254,   199,   317,     0,
     0,    84,   194,   317,   199,   317,   199,   317,   199,   317,
   199,   317,   199,   317,   199,   317,   199,   317,   199,   317,
   199,   317,   199,   317,   199,   317,   195,   256,   200,   254,
   201,     6,     0,   317,     0,   257,   199,   317,     0,     0,
    85,   194,   317,   199,   317,   199,   317,   199,   317,   199,
   317,   199,   317,   199,   317,   199,   317,   199,   317,   199,
   317,   199,   317,   199,   317,   195,   259,   200,   257,   201,
     6,     0,   317,     0,   260,   199,   317,     0,     0,    86,
   194,   317,   199,   317,   199,   317,   199,   317,   199,   317,
   199,   317,   199,   317,   199,   317,   199,   317,   199,   317,
   199,   317,   199,   317,   199,   317,   199,   317,   199,   317,
   199,   317,   199,   317,   199,   317,   199,   317,   199,   317,
   199,   317,   199,   317,   199,   317,   199,   317,   195,   262,
   200,   260,   201,     6,     0,   317,     0,   263,   199,   317,
     0,     0,    87,   194,   317,   199,   317,   199,   317,   199,
   317,   199,   317,   199,   317,   199,   317,   199,   317,   199,
   317,   199,   317,   199,   317,   199,   317,   199,   317,   199,
   317,   199,   317,   199,   317,   199,   317,   199,   317,   199,
   317,   199,   317,   199,   317,   199,   317,   199,   317,   199,
   317,   195,   265,   200,   263,   201,     6,     0,   317,     0,
   266,   199,   317,     0,     0,    88,   194,   317,   199,   317,
   199,   317,   199,   317,   199,   317,   199,   317,   199,   317,
   199,   317,   199,   317,   199,   317,   199,   317,   199,   317,
   199,   317,   199,   317,   199,   317,   199,   317,   199,   317,
   199,   317,   199,   317,   199,   317,   199,   317,   199,   317,
   199,   317,   199,   317,   195,   268,   200,   266,   201,     6,
     0,   317,     0,   269,   199,   317,     0,     0,    89,   194,
   317,   199,   317,   199,   317,   199,   317,   199,   317,   199,
   317,   199,   317,   199,   317,   199,   317,   199,   317,   199,
   317,   199,   317,   199,   317,   199,   317,   199,   317,   199,
   317,   199,   317,   199,   317,   195,   271,   200,   269,   201,
     6,     0,   317,     0,   272,   199,   317,     0,     0,    90,
   194,   317,   199,   317,   199,   317,   199,   317,   199,   317,
   199,   317,   199,   317,   199,   317,   199,   317,   199,   317,
   199,   317,   199,   317,   199,   317,   199,   317,   199,   317,
   199,   317,   199,   317,   199,   317,   195,   274,   200,   272,
   201,     6,     0,   317,     0,   275,   199,   317,     0,     0,
    91,   194,   317,   199,   317,   199,   317,   199,   317,   199,
   317,   199,   317,   199,   317,   199,   317,   199,   317,   199,
   317,   199,   317,   199,   317,   199,   317,   199,   317,   199,
   317,   199,   317,   199,   317,   199,   317,   195,   277,   200,
   275,   201,     6,     0,   317,     0,   278,   199,   317,     0,
     0,    92,   194,   317,   199,   317,   199,   317,   199,   317,
   199,   317,   199,   317,   199,   317,   199,   317,   199,   317,
   199,   317,   199,   317,   199,   317,   199,   317,   199,   317,
   199,   317,   195,   280,   200,   278,   201,     6,     0,   317,
     0,   281,   199,   317,     0,     0,    93,   194,   317,   199,
   317,   199,   317,   199,   317,   199,   317,   199,   317,   199,
   317,   199,   317,   199,   317,   199,   317,   199,   317,   199,
   317,   199,   317,   199,   317,   199,   317,   195,   283,   200,
   281,   201,     6,     0,   317,     0,   284,   199,   317,     0,
     0,    94,   194,   317,   199,   317,   199,   317,   199,   317,
   199,   317,   199,   317,   199,   317,   199,   317,   199,   317,
   199,   317,   199,   317,   199,   317,   199,   317,   199,   317,
   199,   317,   195,   286,   200,   284,   201,     6,     0,   331,
     0,   287,   199,   331,     0,     0,    95,   194,   317,   199,
   317,   199,   317,   195,   289,   200,   287,   201,     6,     0,
   331,     0,   290,   199,   331,     0,     0,    96,   194,   317,
   199,   317,   199,   317,   199,   317,   195,   292,   200,   290,
   201,     6,     0,     7,     0,   169,     0,   170,     0,   171,
     0,   172,     0,   190,     0,   191,     0,     4,   293,   317,
     6,     0,     4,   196,   317,   197,   293,   317,     6,     0,
     4,   196,   200,   327,   201,   197,   293,   325,     6,     0,
     4,   196,   197,     7,   325,     6,     0,     4,   294,     6,
     0,     4,   196,   317,   197,   294,     6,     0,     4,   198,
     4,     7,   331,     6,     0,     4,   196,   317,   197,   198,
     4,     7,   331,     6,     0,     4,   198,     4,   293,   317,
     6,     0,     4,   196,   317,   197,   198,     4,   293,   317,
     6,     0,     4,   198,     4,   294,     6,     0,     4,   196,
   317,   197,   198,     4,   294,     6,     0,     4,   198,   104,
   198,     4,     7,   328,     6,     0,     4,   196,   317,   197,
   198,   104,   198,     4,     7,   328,     6,     0,     4,   198,
   105,     7,   329,     6,     0,     4,   196,   317,   197,   198,
   105,     7,   329,     6,     0,    57,   194,     4,   195,   198,
     4,     7,   317,     6,     0,    57,   194,     4,   195,   198,
     4,     7,   331,     6,     0,    38,   194,   317,   195,     7,
   319,     6,     0,    53,    38,   194,   317,   195,     7,   325,
     6,     0,    69,    38,   325,     7,   200,   317,   199,   317,
   199,   317,   201,     6,     0,    45,    46,   325,     7,   317,
     6,     0,    41,   194,   317,   195,     7,   325,     6,     0,
    43,   194,   317,   195,     7,   325,     6,     0,    69,    41,
   325,     7,   200,   317,   199,   317,   199,   317,   201,     6,
     0,    39,   194,   317,   195,     7,   325,     6,     0,    40,
   194,   317,   195,     7,   325,     6,     0,    39,   194,   317,
   195,     7,   325,    49,   319,     6,     0,    47,   194,   317,
   195,     7,   200,   317,   199,   317,   199,     5,   199,     5,
   199,     5,   201,     6,     0,    53,    41,   194,   317,   195,
     7,   325,     6,     0,    41,    64,   194,   317,   195,     7,
   325,     6,     0,    97,   194,   317,   195,     7,   325,     6,
     0,    98,   194,   317,   195,     7,   325,     6,     0,    99,
   194,   317,   195,     7,   325,   103,   325,   100,   317,     6,
     0,    49,    42,   194,   317,   195,     7,   325,     6,     0,
   159,    42,   194,   317,   195,     7,   200,   317,   199,   325,
   201,     6,     0,    50,    42,   194,   317,   195,     7,   325,
     6,     0,    99,    42,   101,   102,   194,   317,   195,     7,
   323,   103,   200,   325,   199,   325,   201,   100,   200,   317,
   199,   317,   201,     6,     0,    99,    42,   194,   317,   195,
     7,   323,   103,   200,   325,   199,   325,   201,   100,   200,
   317,   199,   317,   201,     6,     0,    53,    42,   194,   317,
   195,     7,   325,     6,     0,    42,    64,   194,   317,   195,
     7,   325,     6,     0,    52,    44,   194,   317,   195,     7,
   325,     6,     0,    44,   194,   317,   195,     7,   325,     6,
     0,    53,    44,   194,   317,   195,     7,   325,     6,     0,
    59,   319,   200,   298,   201,     0,    58,   200,   319,   199,
   319,   199,   317,   201,   200,   298,   201,     0,    60,   319,
   200,   298,   201,     0,    61,   200,   319,   199,   317,   201,
   200,   298,   201,     0,   300,     0,   299,     0,   297,     0,
     0,   299,   296,     0,   299,    38,   200,   327,   201,     6,
     0,   299,    41,   200,   327,   201,     6,     0,   299,    42,
   200,   327,   201,     6,     0,    63,   200,   299,   201,     0,
    66,   200,   299,   201,     0,    66,     4,   196,   317,   197,
     6,     0,    66,   115,     6,     0,   104,   328,   200,   299,
   201,     0,     4,   331,     6,     0,     4,   317,     6,     0,
    57,   194,     4,   195,   198,     4,     6,     0,   111,     6,
     0,    37,     6,     0,   106,   194,   317,     8,   317,   195,
     0,   106,   194,   317,     8,   317,     8,   317,   195,     0,
   106,     4,   107,   200,   317,     8,   317,   201,     0,   106,
     4,   107,   200,   317,     8,   317,     8,   317,   201,     0,
   108,     0,   114,     4,     0,   112,     0,   113,     4,     6,
     0,   109,   194,   317,   195,     0,   110,     0,    62,    38,
   200,   317,   199,   319,   201,     6,     0,    62,    38,   200,
   317,   199,   319,   199,   319,   199,   317,   201,     6,     0,
    62,    38,   200,   317,   199,   319,   199,   319,   199,   319,
   199,   317,   201,     6,     0,    62,    41,   200,   317,   199,
   319,   201,     6,     0,    62,    41,   200,   317,   199,   319,
   199,   319,   199,   317,   201,     6,     0,    62,    41,   200,
   317,   199,   319,   199,   319,   199,   319,   199,   317,   201,
     6,     0,     0,    62,    41,   200,   317,   199,   319,   201,
   306,   200,   312,   201,     6,     0,     0,    62,    41,   200,
   317,   199,   319,   199,   319,   199,   317,   201,   307,   200,
   312,   201,     6,     0,     0,    62,    41,   200,   317,   199,
   319,   199,   319,   199,   319,   199,   317,   201,   308,   200,
   312,   201,     6,     0,    62,    42,   200,   317,   199,   319,
   201,     6,     0,    62,    42,   200,   317,   199,   319,   199,
   319,   199,   317,   201,     6,     0,    62,    42,   200,   317,
   199,   319,   199,   319,   199,   319,   199,   317,   201,     6,
     0,     0,    62,    42,   200,   317,   199,   319,   201,   309,
   200,   312,   201,     6,     0,     0,    62,    42,   200,   317,
   199,   319,   199,   319,   199,   317,   201,   310,   200,   312,
   201,     6,     0,     0,    62,    42,   200,   317,   199,   319,
   199,   319,   199,   319,   199,   317,   201,   311,   200,   312,
   201,     6,     0,   313,     0,   312,   313,     0,    70,   200,
   325,   199,   325,   199,   325,   201,     6,     0,    70,   200,
   325,   199,   325,   201,     6,     0,    65,     6,     0,    51,
    41,   325,     7,   317,     6,     0,    51,    41,   325,     7,
   317,    54,    56,   317,     6,     0,    51,    41,   325,     7,
   317,    54,    55,   317,     6,     0,    51,    42,   200,   317,
   201,     7,   325,     6,     0,    48,    42,   200,   317,   201,
     7,   325,     6,     0,    51,    44,   200,   317,   201,     7,
   325,     6,     0,    65,    42,   325,     7,   317,     6,     0,
    65,    42,   325,     6,     0,    67,     6,     0,    68,     6,
     0,   119,     0,   120,     0,   121,     0,   122,     0,   123,
     0,   318,     0,   194,   317,   195,     0,   184,   317,     0,
   183,   317,     0,   189,   317,     0,   317,   184,   317,     0,
   317,   183,   317,     0,   317,   185,   317,     0,   317,   186,
   317,     0,   317,   187,   317,     0,   317,   193,   317,     0,
   317,   179,   317,     0,   317,   181,   317,     0,   317,   180,
   317,     0,   317,   182,   317,     0,   317,   176,   317,     0,
   317,   177,   317,     0,   317,   175,   317,     0,   317,   174,
   317,     0,   317,   173,   317,     8,   317,     0,    12,   194,
   317,   195,     0,    13,   194,   317,   195,     0,    14,   194,
   317,   195,     0,    15,   194,   317,   195,     0,    16,   194,
   317,   195,     0,    17,   194,   317,   195,     0,    18,   194,
   317,   195,     0,    19,   194,   317,   195,     0,    20,   194,
   317,   195,     0,    22,   194,   317,   195,     0,    23,   194,
   317,   199,   317,   195,     0,    24,   194,   317,   195,     0,
    25,   194,   317,   195,     0,    26,   194,   317,   195,     0,
    27,   194,   317,   195,     0,    28,   194,   317,   195,     0,
    29,   194,   317,   195,     0,    30,   194,   317,   199,   317,
   195,     0,    31,   194,   317,   199,   317,   195,     0,    32,
   194,   317,   199,   317,   195,     0,    21,   194,   317,   195,
     0,    12,   196,   317,   197,     0,    13,   196,   317,   197,
     0,    14,   196,   317,   197,     0,    15,   196,   317,   197,
     0,    16,   196,   317,   197,     0,    17,   196,   317,   197,
     0,    18,   196,   317,   197,     0,    19,   196,   317,   197,
     0,    20,   196,   317,   197,     0,    22,   196,   317,   197,
     0,    23,   196,   317,   199,   317,   197,     0,    24,   196,
   317,   197,     0,    25,   196,   317,   197,     0,    26,   196,
   317,   197,     0,    27,   196,   317,   197,     0,    28,   196,
   317,   197,     0,    29,   196,   317,   197,     0,    30,   196,
   317,   199,   317,   197,     0,    31,   196,   317,   199,   317,
   197,     0,    32,   196,   317,   199,   317,   197,     0,    21,
   196,   317,   197,     0,     3,     0,     9,     0,    10,     0,
    11,     0,     4,     0,     4,   196,   317,   197,     0,     4,
   294,     0,     4,   196,   317,   197,   294,     0,     4,   198,
     4,     0,     4,   196,   317,   197,   198,     4,     0,     4,
   198,     4,   294,     0,     4,   196,   317,   197,   198,     4,
   294,     0,   320,     0,   184,   319,     0,   183,   319,     0,
   319,   184,   319,     0,   319,   183,   319,     0,   200,   317,
   199,   317,   199,   317,   199,   317,   199,   317,   201,     0,
   200,   317,   199,   317,   199,   317,   199,   317,   201,     0,
   200,   317,   199,   317,   199,   317,   201,     0,   194,   317,
   199,   317,   199,   317,   195,     0,     0,   194,   322,   195,
     0,     5,     0,   322,   199,     5,     0,     0,   200,   324,
   201,     0,   194,   324,   195,     0,   325,     0,   324,   199,
   325,     0,   317,     0,   326,     0,   200,   327,   201,     0,
   184,   200,   327,   201,     0,   317,     8,   317,     0,   317,
     8,   317,     8,   317,     0,     4,   196,   197,     0,   184,
     4,   196,   197,     0,     4,   196,   200,   327,   201,   197,
     0,   184,     4,   196,   200,   327,   201,   197,     0,   317,
     0,   326,     0,   327,   199,   317,     0,   327,   199,   326,
     0,   200,   317,   199,   317,   199,   317,   199,   317,   201,
     0,   200,   317,   199,   317,   199,   317,   201,     0,     4,
     0,     4,   198,   104,   198,     4,     0,   200,   330,   201,
     0,     4,   196,   317,   197,   198,   105,     0,   328,     0,
   330,   199,   328,     0,     5,     0,    35,   194,   331,   199,
   331,   195,     0,    36,   194,   331,   195,     0,    34,   194,
   331,   195,     0,    34,   194,   331,   199,   327,   195,     0,
    34,   194,     4,   198,     4,   195,     0,    34,   194,     4,
   196,   317,   197,   198,     4,   195,     0
};

#endif

#if YYDEBUG != 0
static const short yyrline[] = { 0,
   175,   177,   178,   179,   184,   186,   189,   197,   211,   221,
   223,   226,   228,   229,   232,   238,   243,   244,   245,   248,
   252,   255,   261,   266,   272,   280,   285,   289,   295,   300,
   304,   309,   313,   316,   321,   325,   329,   333,   338,   342,
   345,   349,   353,   357,   361,   365,   369,   372,   376,   379,
   383,   386,   393,   397,   403,   405,   406,   407,   408,   409,
   410,   411,   412,   413,   414,   415,   416,   419,   424,   439,
   444,   450,   455,   456,   457,   458,   459,   460,   461,   462,
   463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
   473,   474,   475,   476,   477,   478,   479,   480,   483,   486,
   490,   496,   502,   505,   509,   515,   521,   524,   528,   534,
   540,   543,   547,   555,   561,   564,   568,   576,   582,   585,
   589,   597,   603,   606,   610,   622,   628,   631,   635,   647,
   653,   656,   660,   672,   678,   681,   685,   698,   704,   707,
   711,   724,   730,   733,   737,   750,   756,   759,   763,   776,
   782,   785,   789,   802,   808,   811,   815,   828,   834,   837,
   841,   864,   870,   873,   877,   900,   906,   909,   913,   936,
   942,   945,   949,   967,   973,   976,   980,   998,  1004,  1007,
  1011,  1029,  1035,  1038,  1042,  1059,  1065,  1068,  1072,  1089,
  1095,  1098,  1102,  1119,  1125,  1131,  1138,  1146,  1152,  1158,
  1165,  1173,  1182,  1184,  1185,  1186,  1187,  1190,  1192,  1195,
  1226,  1260,  1307,  1322,  1331,  1346,  1358,  1372,  1395,  1419,
  1431,  1445,  1457,  1471,  1491,  1513,  1525,  1541,  1552,  1558,
  1577,  1591,  1597,  1603,  1622,  1628,  1634,  1650,  1657,  1663,
  1669,  1680,  1691,  1716,  1722,  1741,  1762,  1770,  1776,  1782,
  1791,  1797,  1803,  1813,  1819,  1824,  1829,  1836,  1838,  1839,
  1842,  1847,  1852,  1867,  1882,  1901,  1917,  1925,  1930,  1938,
  1950,  2019,  2039,  2046,  2050,  2070,  2082,  2092,  2113,  2134,
  2155,  2161,  2166,  2171,  2175,  2183,  2194,  2201,  2211,  2216,
  2221,  2226,  2231,  2236,  2241,  2246,  2251,  2259,  2264,  2269,
  2274,  2279,  2285,  2291,  2297,  2303,  2311,  2315,  2320,  2347,
  2371,  2379,  2398,  2416,  2434,  2456,  2477,  2498,  2512,  2531,
  2536,  2545,  2547,  2548,  2549,  2550,  2553,  2555,  2556,  2557,
  2558,  2559,  2560,  2561,  2562,  2569,  2570,  2571,  2572,  2573,
  2574,  2575,  2576,  2577,  2578,  2579,  2580,  2581,  2582,  2583,
  2584,  2585,  2586,  2587,  2588,  2589,  2590,  2591,  2592,  2593,
  2594,  2595,  2596,  2597,  2598,  2599,  2600,  2602,  2603,  2604,
  2605,  2606,  2607,  2608,  2609,  2610,  2611,  2612,  2613,  2614,
  2615,  2616,  2617,  2618,  2619,  2620,  2621,  2622,  2627,  2632,
  2633,  2634,  2638,  2649,  2666,  2677,  2696,  2712,  2728,  2744,
  2761,  2766,  2770,  2774,  2778,  2784,  2789,  2793,  2797,  2803,
  2807,  2812,  2816,  2821,  2825,  2829,  2835,  2841,  2848,  2854,
  2858,  2862,  2872,  2879,  2890,  2904,  2920,  2940,  2964,  2970,
  2974,  2978,  2989,  2994,  3005,  3010,  3028,  3033,  3046,  3052,
  3058,  3063,  3071,  3084,  3088,  3106,  3120
};
#endif


#if YYDEBUG != 0 || defined (YYERROR_VERBOSE)

static const char * const yytname[] = {   "$","error","$undefined.","tDOUBLE",
"tSTRING","tBIGSTR","tEND","tAFFECT","tDOTS","tPi","tMPI_Rank","tMPI_Size","tExp",
"tLog","tLog10","tSqrt","tSin","tAsin","tCos","tAcos","tTan","tRand","tAtan",
"tAtan2","tSinh","tCosh","tTanh","tFabs","tFloor","tCeil","tFmod","tModulo",
"tHypot","tPrintf","tSprintf","tStrCat","tStrPrefix","tDraw","tPoint","tCircle",
"tEllipse","tLine","tSurface","tSpline","tVolume","tCharacteristic","tLength",
"tParametric","tElliptic","tPlane","tRuled","tTransfinite","tComplex","tPhysical",
"tUsing","tBump","tProgression","tPlugin","tRotate","tTranslate","tSymmetry",
"tDilate","tExtrude","tDuplicata","tLoop","tRecombine","tDelete","tCoherence",
"tIntersect","tAttractor","tLayers","tScalarPoint","tVectorPoint","tTensorPoint",
"tScalarLine","tVectorLine","tTensorLine","tScalarTriangle","tVectorTriangle",
"tTensorTriangle","tScalarQuadrangle","tVectorQuadrangle","tTensorQuadrangle",
"tScalarTetrahedron","tVectorTetrahedron","tTensorTetrahedron","tScalarHexahedron",
"tVectorHexahedron","tTensorHexahedron","tScalarPrism","tVectorPrism","tTensorPrism",
"tScalarPyramid","tVectorPyramid","tTensorPyramid","tText2D","tText3D","tBSpline",
"tBezier","tNurbs","tOrder","tWith","tBounds","tKnots","tColor","tColorTable",
"tFor","tIn","tEndFor","tIf","tEndIf","tExit","tReturn","tCall","tFunction",
"tMesh","tB_SPLINE_SURFACE_WITH_KNOTS","tB_SPLINE_CURVE_WITH_KNOTS","tCARTESIAN_POINT",
"tTRUE","tFALSE","tUNSPECIFIED","tU","tV","tEDGE_CURVE","tVERTEX_POINT","tORIENTED_EDGE",
"tPLANE","tFACE_OUTER_BOUND","tEDGE_LOOP","tADVANCED_FACE","tVECTOR","tDIRECTION",
"tAXIS2_PLACEMENT_3D","tISO","tENDISO","tENDSEC","tDATA","tHEADER","tFILE_DESCRIPTION",
"tFILE_SCHEMA","tFILE_NAME","tMANIFOLD_SOLID_BREP","tCLOSED_SHELL","tADVANCED_BREP_SHAPE_REPRESENTATION",
"tFACE_BOUND","tCYLINDRICAL_SURFACE","tCONICAL_SURFACE","tCIRCLE","tTRIMMED_CURVE",
"tGEOMETRIC_SET","tCOMPOSITE_CURVE_SEGMENT","tCONTINUOUS","tCOMPOSITE_CURVE",
"tTOROIDAL_SURFACE","tPRODUCT_DEFINITION","tPRODUCT_DEFINITION_SHAPE","tSHAPE_DEFINITION_REPRESENTATION",
"tELLIPSE","tTrimmed","tSolid","tEndSolid","tVertex","tFacet","tNormal","tOuter",
"tLoopSTL","tEndLoop","tEndFacet","tAFFECTPLUS","tAFFECTMINUS","tAFFECTTIMES",
"tAFFECTDIVIDE","'?'","tOR","tAND","tEQUAL","tNOTEQUAL","tAPPROXEQUAL","'<'",
"tLESSOREQUAL","'>'","tGREATEROREQUAL","'+'","'-'","'*'","'/'","'%'","tCROSSPRODUCT",
"'!'","tPLUSPLUS","tMINUSMINUS","UNARYPREC","'^'","'('","')'","'['","']'","'.'",
"','","'{'","'}'","All","SignedDouble","STLFormatItem","StepFormatItems","StepFormatItem",
"StepSpecial","StepHeaderItem","StepDataItem","GeomFormatList","GeomFormat",
"Printf","View","Views","ScalarPointValues","ScalarPoint","@1","VectorPointValues",
"VectorPoint","@2","TensorPointValues","TensorPoint","@3","ScalarLineValues",
"ScalarLine","@4","VectorLineValues","VectorLine","@5","TensorLineValues","TensorLine",
"@6","ScalarTriangleValues","ScalarTriangle","@7","VectorTriangleValues","VectorTriangle",
"@8","TensorTriangleValues","TensorTriangle","@9","ScalarQuadrangleValues","ScalarQuadrangle",
"@10","VectorQuadrangleValues","VectorQuadrangle","@11","TensorQuadrangleValues",
"TensorQuadrangle","@12","ScalarTetrahedronValues","ScalarTetrahedron","@13",
"VectorTetrahedronValues","VectorTetrahedron","@14","TensorTetrahedronValues",
"TensorTetrahedron","@15","ScalarHexahedronValues","ScalarHexahedron","@16",
"VectorHexahedronValues","VectorHexahedron","@17","TensorHexahedronValues","TensorHexahedron",
"@18","ScalarPrismValues","ScalarPrism","@19","VectorPrismValues","VectorPrism",
"@20","TensorPrismValues","TensorPrism","@21","ScalarPyramidValues","ScalarPyramid",
"@22","VectorPyramidValues","VectorPyramid","@23","TensorPyramidValues","TensorPyramid",
"@24","Text2DValues","Text2D","@25","Text3DValues","Text3D","@26","NumericAffectation",
"NumericIncrement","Affectation","Shape","Transform","MultipleShape","ListOfShapes",
"Duplicata","Delete","Colorify","Command","Loop","Extrude","@27","@28","@29",
"@30","@31","@32","ExtrudeParameters","ExtrudeParameter","Transfini","Coherence",
"BoolExpr","FExpr","FExpr_Single","VExpr","VExpr_Single","ListOfStrings","RecursiveListOfStrings",
"ListOfListOfDouble","RecursiveListOfListOfDouble","ListOfDouble","FExpr_Multi",
"RecursiveListOfDouble","ColorExpr","ListOfColor","RecursiveListOfColor","StringExpr", NULL
};
#endif

static const short yyr1[] = {     0,
   202,   202,   202,   202,   203,   203,   204,   204,   204,   205,
   205,   206,   206,   206,   207,   207,   207,   207,   207,   208,
   208,   208,   209,   209,   209,   209,   209,   209,   209,   209,
   209,   209,   209,   209,   209,   209,   209,   209,   209,   209,
   209,   209,   209,   209,   209,   209,   209,   209,   209,   209,
   209,   209,   210,   210,   211,   211,   211,   211,   211,   211,
   211,   211,   211,   211,   211,   211,   211,   212,   212,   213,
   213,   214,   214,   214,   214,   214,   214,   214,   214,   214,
   214,   214,   214,   214,   214,   214,   214,   214,   214,   214,
   214,   214,   214,   214,   214,   214,   214,   214,   215,   215,
   217,   216,   218,   218,   220,   219,   221,   221,   223,   222,
   224,   224,   226,   225,   227,   227,   229,   228,   230,   230,
   232,   231,   233,   233,   235,   234,   236,   236,   238,   237,
   239,   239,   241,   240,   242,   242,   244,   243,   245,   245,
   247,   246,   248,   248,   250,   249,   251,   251,   253,   252,
   254,   254,   256,   255,   257,   257,   259,   258,   260,   260,
   262,   261,   263,   263,   265,   264,   266,   266,   268,   267,
   269,   269,   271,   270,   272,   272,   274,   273,   275,   275,
   277,   276,   278,   278,   280,   279,   281,   281,   283,   282,
   284,   284,   286,   285,   287,   287,   289,   288,   290,   290,
   292,   291,   293,   293,   293,   293,   293,   294,   294,   295,
   295,   295,   295,   295,   295,   295,   295,   295,   295,   295,
   295,   295,   295,   295,   295,   295,   295,   296,   296,   296,
   296,   296,   296,   296,   296,   296,   296,   296,   296,   296,
   296,   296,   296,   296,   296,   296,   296,   296,   296,   296,
   296,   296,   296,   297,   297,   297,   297,   298,   298,   298,
   299,   299,   299,   299,   299,   300,   301,   301,   301,   302,
   303,   303,   303,   303,   303,   304,   304,   304,   304,   304,
   304,   304,   304,   304,   304,   305,   305,   305,   305,   305,
   305,   306,   305,   307,   305,   308,   305,   305,   305,   305,
   309,   305,   310,   305,   311,   305,   312,   312,   313,   313,
   313,   314,   314,   314,   314,   314,   314,   314,   314,   315,
   315,   316,   316,   316,   316,   316,   317,   317,   317,   317,
   317,   317,   317,   317,   317,   317,   317,   317,   317,   317,
   317,   317,   317,   317,   317,   317,   317,   317,   317,   317,
   317,   317,   317,   317,   317,   317,   317,   317,   317,   317,
   317,   317,   317,   317,   317,   317,   317,   317,   317,   317,
   317,   317,   317,   317,   317,   317,   317,   317,   317,   317,
   317,   317,   317,   317,   317,   317,   317,   317,   318,   318,
   318,   318,   318,   318,   318,   318,   318,   318,   318,   318,
   319,   319,   319,   319,   319,   320,   320,   320,   320,   321,
   321,   322,   322,   323,   323,   323,   324,   324,   325,   325,
   325,   325,   326,   326,   326,   326,   326,   326,   327,   327,
   327,   327,   328,   328,   328,   328,   329,   329,   330,   330,
   331,   331,   331,   331,   331,   331,   331
};

static const short yyr2[] = {     0,
     1,     1,     1,     2,     1,     2,     1,    21,     1,     0,
     2,     1,     1,     1,     2,     2,     2,     2,     2,     7,
     5,    17,     9,    23,    31,    15,    11,    11,    15,     9,
    13,     9,    11,    13,     9,     9,    11,     9,    11,     9,
    11,    13,    13,    11,    13,    17,     9,    11,    11,    13,
    11,     9,     0,     2,     1,     1,     1,     1,     1,     1,
     1,     1,     1,     1,     1,     1,     1,     5,     7,     6,
     8,     0,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     1,     3,
     0,    13,     1,     3,     0,    13,     1,     3,     0,    13,
     1,     3,     0,    19,     1,     3,     0,    19,     1,     3,
     0,    19,     1,     3,     0,    25,     1,     3,     0,    25,
     1,     3,     0,    25,     1,     3,     0,    31,     1,     3,
     0,    31,     1,     3,     0,    31,     1,     3,     0,    31,
     1,     3,     0,    31,     1,     3,     0,    31,     1,     3,
     0,    55,     1,     3,     0,    55,     1,     3,     0,    55,
     1,     3,     0,    43,     1,     3,     0,    43,     1,     3,
     0,    43,     1,     3,     0,    37,     1,     3,     0,    37,
     1,     3,     0,    37,     1,     3,     0,    13,     1,     3,
     0,    15,     1,     1,     1,     1,     1,     1,     1,     4,
     7,     9,     6,     3,     6,     6,     9,     6,     9,     5,
     8,     8,    11,     6,     9,     9,     9,     7,     8,    12,
     6,     7,     7,    12,     7,     7,     9,    17,     8,     8,
     7,     7,    11,     8,    12,     8,    22,    20,     8,     8,
     8,     7,     8,     5,    11,     5,     9,     1,     1,     1,
     0,     2,     6,     6,     6,     4,     4,     6,     3,     5,
     3,     3,     7,     2,     2,     6,     8,     8,    10,     1,
     2,     1,     3,     4,     1,     8,    12,    14,     8,    12,
    14,     0,    12,     0,    16,     0,    18,     8,    12,    14,
     0,    12,     0,    16,     0,    18,     1,     2,     9,     7,
     2,     6,     9,     9,     8,     8,     8,     6,     4,     2,
     2,     1,     1,     1,     1,     1,     1,     3,     2,     2,
     2,     3,     3,     3,     3,     3,     3,     3,     3,     3,
     3,     3,     3,     3,     3,     5,     4,     4,     4,     4,
     4,     4,     4,     4,     4,     4,     6,     4,     4,     4,
     4,     4,     4,     6,     6,     6,     4,     4,     4,     4,
     4,     4,     4,     4,     4,     4,     4,     6,     4,     4,
     4,     4,     4,     4,     6,     6,     6,     4,     1,     1,
     1,     1,     1,     4,     2,     5,     3,     6,     4,     7,
     1,     2,     2,     3,     3,    11,     9,     7,     7,     0,
     3,     1,     3,     0,     3,     3,     1,     3,     1,     1,
     3,     4,     3,     5,     3,     4,     6,     7,     1,     1,
     3,     3,     9,     7,     1,     5,     3,     6,     1,     3,
     1,     6,     4,     4,     6,     6,     9
};

static const short yydefact[] = {     0,
     0,     7,     9,     0,     2,     1,     3,     4,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,    11,    12,
    14,    13,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   280,     0,   285,
     0,   282,     0,     0,     0,    54,    56,    55,    57,    58,
    59,    60,    61,    62,    67,    66,    63,    64,    65,     5,
     0,     0,     0,    15,    16,    18,    17,    19,   410,   410,
     0,   389,   393,   441,   203,   390,   391,   392,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   204,   205,   206,   207,     0,     0,     0,   208,
   209,     0,     0,     0,     0,     0,     0,   327,     0,     0,
   275,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,   401,
     0,     0,     0,     0,     0,   261,     0,     0,     0,   261,
   320,   321,     0,     0,     0,     0,     0,     0,   435,     0,
     0,     0,     0,     0,   274,     0,   281,     0,     6,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,   395,     0,    72,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   330,   329,   331,     0,     0,     0,
     0,     0,     0,     0,     0,   214,   272,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   271,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   393,     0,     0,   419,     0,   420,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   403,   402,     0,     0,     0,     0,   261,   261,
     0,     0,     0,     0,     0,     0,     0,   269,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,   261,     0,
     0,     0,   283,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   412,     0,     0,     0,     0,
     0,   397,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   441,     0,     0,
     0,   328,     0,     0,   429,   430,     0,     0,   203,     0,
     0,     0,     0,   210,     0,   345,   344,   342,   343,   338,
   340,   339,   341,   333,   332,   334,   335,   336,   337,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   393,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   405,   404,   260,     0,   259,   258,     0,     0,     0,
     0,     0,     0,     0,     0,   266,   262,   319,     0,     0,
   267,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   284,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,   411,     0,     0,    21,
     0,   394,   399,    72,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,    73,    74,    75,    76,    77,    78,    79,    80,    81,
    82,    83,    84,    85,    86,    87,    88,    89,    90,    91,
    92,    93,    94,    95,    96,    97,    98,   347,   368,   348,
   369,   349,   370,   350,   371,   351,   372,   352,   373,   353,
   374,   354,   375,   355,   376,   367,   388,   356,   377,     0,
     0,   358,   379,   359,   380,   360,   381,   361,   382,   362,
   383,   363,   384,     0,     0,     0,     0,     0,     0,     0,
     0,   444,     0,     0,   443,     0,     0,     0,     0,     0,
     0,     0,     0,   220,     0,     0,     0,     0,     0,    68,
     0,     0,     0,     0,     0,     0,     0,     0,     0,   425,
     0,     0,     0,   421,   423,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   254,   256,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   270,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   413,     0,   410,
     0,   396,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,    70,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   213,   431,   432,     0,     0,     0,     0,     0,
   215,   216,   218,     0,     0,   439,     0,   224,   346,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,   426,
     0,   422,     0,   231,     0,     0,     0,     0,   312,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,   318,   268,
     0,     0,     0,     0,     0,   414,     0,   436,     0,     0,
     0,   276,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   322,   323,   324,
   325,   326,     0,     0,     0,     0,     0,     0,     0,    20,
     0,   398,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,   357,
   378,   364,   385,   365,   386,   366,   387,     0,   446,   445,
   442,     0,   203,     0,     0,     0,     0,   211,     0,     0,
     0,   437,    69,   228,   235,     0,   236,     0,   232,     0,
   233,   252,     0,     0,   424,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,   273,     0,
     0,     0,     0,   261,     0,     0,     0,   292,     0,   301,
     0,     0,     0,     0,     0,   241,   242,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   410,   400,    71,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   221,     0,     0,   222,     0,   440,     0,   240,   250,   427,
     0,     0,   316,   244,   246,     0,     0,   315,   317,   251,
   229,   239,   249,   253,     0,     0,     0,   409,     0,   408,
     0,     0,   286,     0,   289,     0,     0,   298,     0,   263,
   264,   265,     0,     0,   414,     0,   417,     0,     0,     0,
     0,   434,     0,   278,   277,     0,     0,     0,     0,     0,
    23,     0,    32,     0,    36,     0,    30,     0,     0,    35,
     0,    40,    38,     0,     0,     0,     0,     0,     0,    47,
     0,     0,     0,     0,     0,    52,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   212,   217,   219,     0,   225,
     0,   237,   428,     0,   314,   313,   226,   227,   261,     0,
   257,     0,     0,     0,     0,     0,     0,     0,     0,   416,
     0,   415,     0,     0,     0,     0,     0,     0,     0,   414,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,   447,     0,   438,     0,
     0,     0,   407,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   307,     0,     0,     0,     0,     0,     0,
   418,     0,     0,   433,   279,     0,     0,    37,     0,     0,
     0,     0,    27,     0,    33,     0,    39,    28,    41,     0,
    44,     0,    48,    49,     0,     0,    51,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   223,     0,   255,     0,     0,
     0,     0,   294,     0,   311,     0,     0,   308,   303,     0,
     0,     0,     0,     0,     0,   243,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   101,   105,   109,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   197,     0,     0,   406,   287,     0,
   290,     0,     0,     0,   293,   299,     0,     0,   302,   230,
   234,     0,     0,   245,     0,     0,     0,     0,     0,    31,
    34,    42,     0,    43,    50,    45,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,   296,     0,     0,   305,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   201,     0,   288,     0,   291,     0,
     0,     0,   300,     0,     0,     0,     0,     0,     0,    26,
    29,     0,     0,     0,    99,     0,   103,     0,   107,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   195,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,   295,     0,
     0,   310,   304,     0,     0,     0,     0,     0,     0,    46,
    22,   100,   102,   104,   106,   108,   110,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,   196,   198,
     0,   199,   238,     0,     0,     0,     0,     0,     0,     0,
     0,   113,   117,   121,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   297,   309,   306,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   200,   202,     0,     0,     8,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   248,     0,     0,     0,   111,     0,   115,     0,
   119,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,   247,     0,    24,   112,
   114,   116,   118,   120,   122,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   125,   129,   133,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   123,     0,   127,     0,   131,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   124,   126,   128,   130,   132,
   134,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   137,   141,   145,
   149,   153,   157,     0,     0,     0,     0,     0,     0,     0,
     0,     0,    25,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   135,     0,   139,     0,   143,     0,
   147,     0,   151,     0,   155,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   136,   138,   140,   142,   144,
   146,   148,   150,   152,   154,   156,   158,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   185,   189,   193,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   183,     0,   187,     0,   191,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   184,   186,   188,   190,   192,   194,     0,
     0,     0,   173,   177,   181,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   171,     0,   175,     0,   179,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,   172,   174,
   176,   178,   180,   182,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   161,   165,   169,     0,     0,     0,     0,     0,
     0,     0,   159,     0,   163,     0,   167,     0,     0,     0,
     0,     0,     0,   160,   162,   164,   166,   168,   170,     0,
     0,     0
};

static const short yydefgoto[] = {  2250,
    82,     5,     6,    19,    20,    21,    22,     7,    66,    67,
    68,   414,  1574,   622,  1488,  1576,   623,  1489,  1578,   624,
  1490,  1786,   625,  1733,  1788,   626,  1734,  1790,   627,  1735,
  1922,   628,  1884,  1924,   629,  1885,  1926,   630,  1886,  2034,
   631,  2004,  2036,   632,  2005,  2038,   633,  2006,  2040,   634,
  2007,  2042,   635,  2008,  2044,   636,  2009,  2232,   637,  2226,
  2234,   638,  2227,  2236,   639,  2228,  2181,   640,  2169,  2183,
   641,  2170,  2185,   642,  2171,  2130,   643,  2112,  2132,   644,
  2113,  2134,   645,  2114,  1601,   646,  1512,  1691,   647,  1603,
   135,   237,    69,   537,   524,   525,   526,   527,    73,    74,
    75,    76,    77,  1156,  1462,  1560,  1159,  1467,  1564,  1333,
  1334,    78,    79,   943,   326,   138,   343,   170,   232,   407,
  1051,  1166,  1167,   328,   467,   191,   708,   857,   139
};

static const short yypact[] = {  2651,
    87,-32768,-32768,   -42,-32768,   373,  2796,-32768,    16,   104,
   123,   143,   152,   163,   167,    77,    97,   139,-32768,-32768,
-32768,-32768,  2268,   146,   181,   156,   159,   202,   -44,   297,
   234,   240,   334,   248,   401,   413,   416,   442,   161,   415,
   268,   263,   -67,   -67,   266,   337,   267,   443,     3,   482,
   489,   258,   302,   306,   -14,     4,    12,-32768,   310,-32768,
   519,-32768,   515,   524,   516,-32768,-32768,-32768,-32768,-32768,
-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,
   545,    16,  2900,-32768,-32768,-32768,-32768,-32768,   349,   349,
   546,-32768,   102,     8,-32768,-32768,-32768,-32768,   -37,   194,
   233,   255,   280,   284,   295,   298,   305,   309,   321,   324,
   330,   346,   350,   353,   367,   368,   371,   372,   375,   376,
   382,   395,-32768,-32768,-32768,-32768,  2370,  2370,  2370,-32768,
-32768,  2370,   394,    36,  2370,   568,   636,-32768,   587,   580,
-32768,  2370,  2370,  2370,   402,  2370,   409,  2370,  2370,  1172,
  2370,   420,   422,   478,  1172,   484,   497,   500,   530,   531,
   535,   536,   610,   -67,   -67,   -67,  2370,  2370,  -105,-32768,
   -97,   -67,   533,   543,   544,-32768,  1172,   449,   703,-32768,
-32768,-32768,  1172,  1172,  2370,  2370,   -48,  2370,   518,  2370,
   548,   633,  2370,  2370,-32768,   739,-32768,   555,-32768,    16,
   556,   563,   573,   574,   575,   576,   581,   582,   583,   584,
   585,   586,   613,   614,   630,   631,   632,   634,   637,   644,
   655,   657,   662,   675,   676,   679,   680,   681,   682,   683,
   768,   673,   635,   684,  2370,   874,-32768,   -67,-32768,  2370,
  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,
  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,
  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,
  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,
  2370,    66,    79,    79,   688,   688,   688, 10437,   875,  2400,
  9787,     6,   686,   878,   731,-32768,-32768,  2370,  2370,  2370,
  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,
  2370,  2370,-32768,   -63, 10460, 10483, 10506,  2370, 10529,  2370,
 10552, 10575,   193,  1457,  2400,   660,   882,-32768, 10598,  2370,
  2370,  2370,   883,  2370,  2370,  2370,  2370,  2370,  2370,  2370,
   696,  -111,-32768,-32768,  1263,  3277,   -67,   -67,   412,   412,
   -45,  2370,  2370,  2370,    -8,    68,  2370,-32768,  1974,   885,
   886, 10621, 10644,   792,  2370, 10667,   791,  3298,-32768,   697,
  2049, 10690,-32768,  2370,   733,   891,   894,   895,   896,   897,
   904,   914,   915,   916,   917,   918,   920,   921,   925,   926,
   965,   967,   968,   969,   971,   973,   974,   975,   777,   981,
   991,   995,   997,  1000,   999,-32768,    69,  1004,  1005,  1007,
  9812,    11,   -76,  2840, 10713,  9837, 10736,  9862, 10759,  9887,
 10782,  9912, 10805,  9937, 10828,  9962, 10851,  9987, 10874, 10012,
 10897, 10037, 10920, 10062, 10943, 10087,  3319,  3340, 10966, 10112,
 10989, 10137, 11012, 10162, 11035, 10187, 11058, 10212, 11081, 10237,
  3361,  3382,  3403,  3424,  3445,  3466,    18,-32768,   111,   806,
   818,-32768,  1172,  2489,   660,-32768,   374,   154,    79,  2370,
  1008,  1011,    13,-32768,  2072,   782,   678,   352,   352,   253,
   253,   253,   253,   208,   208,   688,   688,   688,   688,  1010,
  2400,  1012,  1013,  1017, 11104,  1018, 11127,  1019,  1020,   924,
   254,  2400,   380,  2370,  2370,  1021,  2395, 11150, 11173,  2370,
  2455,  2484, 11196, 11219, 11242, 11265, 11288,   819,   -67,  2370,
  2370,-32768,-32768,-32768,   817,  2488,-32768,   828,  2370,  3487,
  3508,  3529,  -134,   -26,   -21,-32768,-32768,-32768,  2370, 10262,
-32768,   830,   831,  1025,  1027,   841, 11311,  1030,   842,  2370,
  2683,  2370,  2370,-32768, 11334,   873,   843,   844,   845,   846,
   848,   849,   850,   851,   852,   853,   857,   858,   859,   860,
   862,   863,   864,   866,   867,   868,   898,   899,   900,   901,
   902,   903,   905,   906,   907,   911,-32768,  1036,   908,-32768,
   912,    71,-32768,-32768,   922,   923,   928,   929,   931,   938,
   948,   950,   955,   983,   984,   985,   986,  1016,  1026,  1033,
  1034,  1037,  1039,  1042,  1043,  1044,  1045,  1046,  1048,  1049,
  1088,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,
-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,
-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,
-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,
-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,  2370,
  2370,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,
-32768,-32768,-32768,  2370,  2370,  2370,  2370,  2370,  2370,  2370,
  1091,-32768,  2400,    79,-32768,  1090,  2400,  1024,    43,  2370,
  1106,  1108,   808,-32768,  1112,   919,     4,  1114,  2370,-32768,
   137,   -67,  1172,  1172,  1237,  1172,  1238,  1172,  1172,-32768,
  2400,  1142,   381,-32768,  2425,   954,  1047,  1239,  1241,  1242,
   448,  1244,  1245,  1246,  1247,  1248,  1249,  1250,  1255,   121,
  3550,  3571,-32768,-32768,  2695,   -67,   -67,   -67,  2400,  2400,
  2400,  1032,  1254,  2370,  2370,  1172,  1172,  2370,  1257,  1172,
  1258,  3592,-32768,  2440,   579,  1260,  1099,  1262,  2370,  2370,
   -67,  1291,  1294,  1113,  1297,  1301,  1172,  1172,  1302,   -67,
  1303,  1304,  1172,  1172,  1320,  1321,  1324,  1326,  1329,  1172,
   434,  1172,  1330,  1332,  1333,  1337,  1338,-32768,  1339,   349,
  1331,-32768,  2885,  2370,  2370,  2370,  2370,  2370,  2370,  2370,
  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,
  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,-32768,
 11357, 10287, 11380, 10312, 11403, 10337, 11426, 10362, 10387,  1148,
   164,  1149,-32768,   660,-32768,    20,   177,  1150,  1340,  1216,
-32768,-32768,-32768,     4,  2370,-32768,   385,-32768, 12254,  1343,
    15,    50,  1344,  1172,  1345,  1172,  1346,  1347,   391,-32768,
  2400,-32768,  2370,-32768,  2370,  1172,  1172,  1172,-32768,   210,
  1172,  1172,  1172,  1172,  1172,  1172,  1172,   393,  2370,  2370,
  2370,  1146,  -116,  -107,  -103,   396,   414,   418,-32768,-32768,
  3613,  3634,  1348,  1351, 11449,   141,  1256,-32768,  2370,  2370,
  2370,-32768,  1158,    16,  1161,  3655,  3676,   -53,  1163,  1168,
  1165,  1170,  1169,  1174,  1171,  1175,   -31,  1176,  1178,  1181,
  1179,  1183,  1184,  1186,  1205,  1206,  1182,-32768,-32768,-32768,
-32768,-32768,  1207,  1208,  1209,  1211,  1233,  1185,  1235,-32768,
  1236,    11,  1361,  3697,  3718,  3739,  3760,  3781,  3802,  3823,
  3844,  3865,  3886,  3907,  3928,  3949,  3970,  3991,  4012,  4033,
  4054,  4075,  4096,  4117,  4138,  4159,  4180,  4201,  4222,-32768,
-32768,-32768,-32768,-32768,-32768,-32768,-32768,  1173,-32768,-32768,
-32768,  1172,    79,  2370,  1445,  1448,    13,-32768,  1447, 10412,
     4,-32768,-32768,-32768,-32768,   -67,-32768,  1449,-32768,  1451,
-32768,-32768,  1261,   438, 12254,  4243,  1453,  1459,  1485,  2370,
  2370,  1486,  1487,  1488,  1489,  1490,  1491,  1492,-32768,  2302,
  2921, 11472,  2622,   412,   -67,  1493,   -67,  1494,   -67,  1495,
  1496,  1497,  1498,  2370,  2370,-32768,-32768,  1456,  1172,  1172,
  1387,  1172,  2810,   425, 11495,  2370,    16,  1502,  2370,  1172,
  1500,  1531,  1529,  1269,  1530,   434,  1560,  1573,  2370,  1571,
  1575,  1574,  1576,  1580,   434,  2370,  2370,  2370,  1172,  1578,
  1582,   434,  2370,  1583,  1584,  1585,  2370,   349,-32768,-32768,
  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,
  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,
  2370,  2370,  2370,  2370,  2370,  2370,  1589,  1588,  1590,  1388,
-32768,  1581,  1592,-32768,  1392,-32768,    76,-32768,-32768,-32768,
  1403,  2370,-32768,-32768,-32768,  1586,  1641,-32768,-32768,-32768,
-32768,-32768,-32768,-32768,  1725,  1616,  1424,-32768,  2370,-32768,
  1425,   138,-32768,   144,-32768,  1427,   155,-32768,  1428,-32768,
-32768,-32768,  4264,  4285,   141,   178,-32768,   439,  1429,  1525,
  2370,-32768,  2370,-32768,-32768,  4306,    16,  1435,  4327,  1432,
-32768,  1433,-32768,  1434,-32768,  1440,-32768,  1437, 11518,-32768,
  1438,-32768,-32768,  1443,  1450, 11541,  4348, 11564,  1444,-32768,
  1454,  1455,  4369,  1460,  1458,-32768,  4390,  1461,  4411,  4432,
  4453,  4474,  4495,  4516,  4537,  4558,  4579,  4600,  4621,  4642,
  4663,  4684,  4705,  4726,  4747,  4768,  4789,  4810,  4831,  4852,
  4873,  4894,  4915,  4936,  1463,-32768,-32768,-32768,     4,-32768,
  1537,-32768,-32768,  4957,-32768,-32768,-32768,-32768,   412,  2886,
-32768,  1528,  1528,    90,  1528,    90,  2370,  2370,  1541,-32768,
  1172,-32768,  1172,  2370,  2944,  2967,  1172,  1501,  1642,   141,
   434,  1649,  2370,  1648,   434,  1650,  1652,  1656,  1658,  1659,
  2370,  1660,  1172,  1663,  1664,  2370,  1668,  1666,  2370,  1671,
  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,
  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,
  2370,  2370,  2370,  2370,  2370,  2370,-32768,  1667,-32768,  1672,
  1477,  2370,-32768,  1528,  1528,  2370,  2990,   182,  3013,   186,
  1673,  1480,   -19,-32768,  3036,   188,   -16,  3065,  3088,  1481,
-32768,  1503,  1769,-32768,-32768,  1499,    16,-32768,  1504,  1505,
  1506,  4978,-32768,  1511,-32768,  1512,-32768,-32768,-32768, 11587,
-32768,  1509,-32768,-32768, 11610,  1514,-32768, 11633,  1515, 11656,
 11679, 11702,  4999,  5020,  5041,  5062,  5083,  5104,  5125,  5146,
  5167,  5188,  5209,  5230,  5251,  5272,  5293,  5314,  5335,  5356,
  5377,  5398,  5419, 11725,  5440,-32768,  1516,-32768,  3117,  1135,
  1695,  2370,  1704,  2370,-32768,  1172,  1707,-32768,  1710,  2370,
  1712,  1713,  1714,  1172,  1172,-32768,  1715,    16,   434,   434,
   434,   434,  1717,  1718,  1719,   434,  1720,  1721,  1723,  1727,
-32768,-32768,-32768,  2370,  2370,  2370,  2370,  2370,  2370,  2370,
  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,
  2370,  2370,  2370,  2370,-32768,  2370,  1729,-32768,-32768,  3140,
-32768,  1535,  3170,  1538,-32768,-32768,  1536,  3208,-32768,-32768,
-32768,  1565,  1577,-32768,    16,  1587,  1594,  1579,  1593,-32768,
-32768,-32768,  1596,-32768,-32768,-32768,  1620,  1591,  1629,  1630,
  5461,  5482,  5503,  5524,  5545,  5566,  5587,  5608,  5629,  5650,
  5671,  5692,  5713,  5734,  5755,  5776,  5797,  5818,  5839,  5860,
  5881,  1631, 11748,  1633,  1724,    90,  1770,  1172,    90,  1771,
  1172,  1680,  1619,   434,   434,  1776,  1777,   434,  1779,  2370,
  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,
  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,
  2370,  2370,  2370,    79,-32768,  1780,-32768,   -15,-32768,  1635,
   445,   -13,-32768,  1636,  1632,  1637,    16,  1639,  1640,-32768,
-32768,  1645,  1646,   450, 12254,   451, 12254,   454, 12254,  5902,
  5923,  5944,  5965,  5986,  6007,  6028,  6049,  6070,  6091,  6112,
  6133,  6154,  6175,  6196,  6217,  6238,  6259,  6280,  6301,  6322,
   455,-32768,  1643,  1661,  1781,    90,  1172,  1783,  1836,    90,
  1744,  2370,    16,   434,  1172,  1854,  1855,  2370,  1857,  2370,
  1858,  2370,  1859,  2370,  2370,  2370,  2370,  2370,  2370,  2370,
  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,
  2370,  2370,  2370,  2370,    79,  1860,    79,  1861,-32768,    -7,
  1669,-32768,-32768,    -6,  1674,  6343,    16,  1670,  1676,-32768,
-32768, 12254,-32768, 12254,-32768, 12254,-32768, 11771, 11794, 11817,
  6364,  6385,  6406,  6427,  6448,  6469,  6490,  6511,  6532,  6553,
  6574,  6595,  6616,  6637,  6658,  6679,  6700,  6721,-32768,-32768,
   458,-32768,-32768,  1862,  1865,  1866,  2370,  2370,  1706,   434,
  1172,-32768,-32768,-32768,  2370,  2370,  2370,  2370,  2370,  2370,
  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,
  2370,  2370,    79,  1870,-32768,-32768,-32768,  6742,  3231,  1709,
  1679,  1716,  1703,  1722,  1726,  6763,  6784,  6805,  6826,  6847,
  6868,  6889,  6910,  6931,  6952,  6973,  6994,  7015,  7036,  7057,
  7078,  7099,  7120,-32768,-32768,  2370,  1873,-32768,  1172,   434,
  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,
  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,
  2370,  3254,-32768,  1758,  1763,   459, 12254,   470, 12254,   474,
 12254,  7141,  7162,  7183,  7204,  7225,  7246,  7267,  7288,  7309,
  7330,  7351,  7372,  7393,  7414,  7435,  7456,  7477,  7498,  1907,
  1172,  1908,  2370,  1910,  2370,  1911,  2370,  1913,  2370,  2370,
  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,
  2370,  2370,  2370,  2370,  2370,  2370,-32768,  1760,-32768, 12254,
-32768, 12254,-32768, 12254,-32768, 11840, 11863, 11886,  7519,  7540,
  7561,  7582,  7603,  7624,  7645,  7666,  7687,  7708,  7729,  7750,
  7771,  7792,  7813,  1172,-32768,-32768,-32768,  2370,  2370,  2370,
  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,
  2370,  2370,  1761,  1764,  1765,  1766,  7834,  7855,  7876,  7897,
  7918,  7939,  7960,  7981,  8002,  8023,  8044,  8065,  8086,  8107,
  8128,  1172,  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,
  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,
  1762,   477, 12254,   480, 12254,   481, 12254,  8149,  8170,  8191,
  8212,  8233,  8254,  8275,  8296,  8317,  8338,  8359,  8380,  8401,
  8422,  8443,   434,  2370,  1914,  2370,  1918,  2370,  1957,  2370,
  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,
  2370,  2370,  2370,  2370,  1772, 12254,-32768, 12254,-32768, 12254,
-32768, 11909, 11932, 11955, 11978, 12001, 12024,  8464,  8485,  8506,
  8527,  8548,  8569,  8590,  8611,  8632,  1962,-32768,-32768,-32768,
-32768,-32768,-32768,  2370,  2370,  2370,  2370,  2370,  2370,  2370,
  2370,  2370,-32768,  1782,  1784,  1785,  1786,  1787,  1788,  8653,
  8674,  8695,  8716,  8737,  8758,  8779,  8800,  8821,  2370,  2370,
  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,  2370,
  2370,  2370,  2370,   486, 12254,   490, 12254,   491, 12254,   494,
 12254,   501, 12254,   502, 12254,  8842,  8863,  8884,  8905,  8926,
  8947,  8968,  8989,  9010,  2370,  1963,  2370,  1964,  2370,  1975,
  2370,  1977,  2370,  1983,  2370,  1984,  2370,  2370,  2370,  2370,
  2370,  2370,  2370,  2370,  2370, 12254,-32768, 12254,-32768, 12254,
-32768, 12254,-32768, 12254,-32768, 12254,-32768,  9031,  9052,  9073,
  9094,  9115,  9136, 12047, 12070, 12093,  2370,  2370,  2370,  2370,
  2370,  2370,-32768,-32768,-32768,  9157,  9178,  9199,  9220,  9241,
  9262,  1791,  1792,  1793,  2370,  2370,  2370,  2370,  2370,  2370,
  2370,  2370,  2370,  9283,  9304,  9325,  9346,  9367,  9388,   505,
 12254,   506, 12254,   509, 12254,  2370,  2370,  2370,  2370,  2370,
  2370,  2370,  1988,  2370,  1989,  2370,  2005,  9409,  9430,  9451,
 12116, 12139, 12162, 12254,-32768, 12254,-32768, 12254,-32768,  2370,
  2370,  2370,-32768,-32768,-32768,  9472,  9493,  9514,  1820,  1822,
  1825,  2370,  2370,  2370,  2370,  2370,  2370,  9535,  9556,  9577,
   513, 12254,   514, 12254,   521, 12254,  2370,  2370,  2370,  2370,
  2022,  2370,  2023,  2370,  2024,  9598,  9619,  9640, 12254,-32768,
 12254,-32768, 12254,-32768,  2370,  2370,  2370,  9661,  9682,  9703,
  2370,  2370,  2370,  9724,  9745,  9766,  2370,  2370,  2370, 12185,
 12208, 12231,-32768,-32768,-32768,  1831,  1833,  1835,  2370,  2370,
  2370,   522, 12254,   537, 12254,   540, 12254,  2370,  2031,  2370,
  2033,  2370,  2035, 12254,-32768, 12254,-32768, 12254,-32768,  1980,
  2053,-32768
};

static const short yypgoto[] = {-32768,
   -34,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,
-32768,  1462,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,
-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,
-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,
-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,
-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,
-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,
-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,
-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,
  -287,   -20,-32768,  2047,  2048,  -346,  -154,  2051,-32768,-32768,
-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768, -1246,
 -1268,-32768,-32768, -1064,   -23,-32768,   -29,-32768,   -89,-32768,
 -1136,  1009,  1484,  -228,  -319,  -698,  1063,-32768,  -259
};


#define	YYLAST		12447


static const short yytable[] = {   137,
   233,  1186,   136,   528,   470,   503,   178,   189,   856,  1337,
  1195,   238,   469,   169,   171,   192,   706,  1202,    80,   145,
  1004,   355,   459,   460,   461,   359,    95,   187,  1259,   533,
    27,    28,   534,   535,    31,    32,    33,   145,    34,   292,
    36,    37,   147,    39,    40,  1331,   847,   200,  1331,  1331,
  1332,  1331,   364,  1332,  1332,  1005,  1332,  1331,  1331,   142,
    52,   466,  1332,  1332,  1408,   749,   347,   348,  1408,   457,
   458,   347,   348,   538,   539,   347,   348,   347,   348,   347,
   348,  1242,  1035,   458,  1036,   347,   348,   519,    53,    54,
    55,  1037,     8,  1038,   349,  1039,   466,  1040,  1006,   120,
   121,   122,   350,   285,   286,   287,   347,   348,   288,   291,
    83,   295,   120,   121,   122,   165,   166,   179,   315,   316,
   317,     9,   319,   594,   321,   322,   167,   329,    84,   347,
   348,   490,   168,  1349,   342,   491,   344,   347,   348,   293,
   294,  1061,   351,   345,   346,   365,   848,   849,    85,   146,
    65,   347,   348,   529,  1331,   999,   240,    86,   241,  1332,
    95,   362,   363,  1070,   366,   375,   368,   146,    87,   371,
   372,   711,    88,   750,   123,   124,   125,   126,   751,   188,
   700,  1407,   723,   993,  1411,  1605,   141,  1609,   123,   124,
   125,   126,   536,  1694,  1696,   130,   131,   347,   348,    81,
   130,   131,   180,   190,   158,   193,  1350,   239,   413,   702,
  1354,   411,   707,   690,   551,   691,   415,   416,   417,   418,
   419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
   429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
   439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
   449,   450,   451,   452,   453,   454,   455,   456,   347,   348,
   130,   131,   466,   587,  1020,  1021,   465,   588,   801,  1558,
    89,   471,  1562,   466,   475,   476,   477,   478,   479,   480,
   481,   482,   483,   484,   485,   486,   487,   488,   489,  1408,
    90,   130,   131,  1408,   495,   183,   497,   235,   184,   236,
   286,   465,  1126,   347,   348,   692,   507,   508,   509,   693,
   511,   512,   513,   514,   515,   516,   517,   522,   523,   889,
   347,   348,   123,   124,   125,   126,   347,   348,   530,   531,
   532,   860,    91,   540,  1049,   697,  1252,   347,   348,   140,
  1050,   547,  1253,   130,   131,   123,   124,   125,   126,   142,
   555,   699,   143,  1255,  1476,  1477,  1478,  1479,   990,  1650,
   147,  1483,   697,  1654,   347,   348,   130,   131,   347,   348,
   347,   348,  1260,   841,   173,    10,  1261,   174,   175,   150,
  1402,  1408,   130,   131,  1404,  1408,  1410,   242,   500,   243,
   236,   593,   309,   310,   311,   144,    92,    93,  1029,  1030,
   312,   869,    96,    97,    98,    99,   100,   101,   102,   103,
   104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
   114,   115,   116,   117,   118,   119,   244,   148,   245,   896,
   897,   898,  1173,   149,   842,   307,   308,   309,   310,   311,
   286,   151,   152,   130,   131,   312,   703,   701,   246,   722,
   247,   236,   159,   879,   153,   160,   161,   154,   162,  1568,
  1569,   163,   164,  1572,   466,   172,   176,   465,   845,    42,
    43,    44,    45,   248,    47,   249,   411,   250,   465,   251,
   725,   726,   155,   156,   177,   157,   731,   181,   252,   740,
   253,   254,   466,   255,   182,   185,   741,   742,   256,   186,
   257,   880,   258,   194,   259,   745,    11,    12,    13,    14,
    15,    16,    17,    18,   260,   752,   261,   262,   196,   263,
   466,   466,   466,   264,   195,   265,   762,   197,   764,   765,
   303,   304,   305,   306,   307,   308,   309,   310,   311,   266,
  1318,   267,   231,   268,   312,   269,   270,   199,   271,  1658,
   234,  1014,   938,   939,   940,   941,   942,   198,   992,   994,
   272,   274,   273,   275,   276,   278,   277,   279,   280,   282,
   281,   802,   697,   296,   698,   283,   127,   128,   697,   697,
   724,   872,   129,  1001,   314,  1002,   911,   132,   284,   697,
   289,  1013,   313,   290,   697,   318,  1041,   298,   299,   300,
   301,   302,   320,   303,   304,   305,   306,   307,   308,   309,
   310,   311,   697,   341,  1042,   331,   697,   312,  1043,   330,
   298,   299,   300,   301,   302,  1174,   303,   304,   305,   306,
   307,   308,   309,   310,   311,  1731,   697,  1261,  1131,  1262,
   312,   297,   466,  1607,   357,  1608,   831,   832,  1618,  1620,
  1619,  1621,  1622,  1645,  1623,  1646,  1723,  1813,  1724,  1814,
   833,   834,   835,   836,   837,   838,   839,   504,  1815,   465,
  1816,   332,  1817,   844,  1818,  1944,   850,  1945,  1946,  1948,
  1947,  1949,   861,   334,  2055,   859,  2056,  1151,  2057,  2059,
  2058,  2060,  2061,   336,  2062,  1785,   335,   465,   411,  2063,
  2065,  2064,  2066,  2142,  2144,  2143,  2145,  2146,   358,  2147,
   951,  2190,  2192,  2191,  2193,   367,   893,   894,   895,  2194,
  2238,  2195,  2239,   337,   338,   465,   465,   465,   339,   340,
   901,   902,   352,  1119,   905,  2240,   474,  2241,  2242,   370,
  2243,   918,   353,   354,   373,   916,   917,   369,   374,   376,
   927,   298,   299,   300,   301,   302,   377,   303,   304,   305,
   306,   307,   308,   309,   310,   311,   378,   379,   380,   381,
  1146,   312,   406,   912,   382,   383,   384,   385,   386,   387,
   954,   955,   956,   957,   958,   959,   960,   961,   962,   963,
   964,   965,   966,   967,   968,   969,   970,   971,   972,   973,
   974,   975,   976,   977,   978,   979,   388,   389,   298,   299,
   300,   301,   302,   853,   303,   304,   305,   306,   307,   308,
   309,   310,   311,   390,   391,   392,   995,   393,   312,   409,
   394,  1000,   298,   299,   300,   301,   302,   395,   303,   304,
   305,   306,   307,   308,   309,   310,   311,   465,   396,  1015,
   397,  1016,   312,   301,   302,   398,   303,   304,   305,   306,
   307,   308,   309,   310,   311,  1031,  1032,  1033,   399,   400,
   312,   408,   401,   402,   403,   404,   405,   412,  1965,  1057,
   312,   463,   410,   472,   473,  1053,  1054,  1055,   505,   510,
   518,   542,   543,   546,   549,   557,   552,   556,   558,   559,
   560,   561,  1321,   298,   299,   300,   301,   302,   562,   303,
   304,   305,   306,   307,   308,   309,   310,   311,   563,   564,
   565,   566,   567,   312,   568,   569,    92,    93,   580,   570,
   571,  1089,    96,    97,    98,    99,   100,   101,   102,   103,
   104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
   114,   115,   116,   117,   118,   119,   300,   301,   302,   874,
   303,   304,   305,   306,   307,   308,   309,   310,   311,   572,
  1120,   573,   574,   575,   312,   576,  1127,   577,   578,   579,
   298,   299,   300,   301,   302,   581,   303,   304,   305,   306,
   307,   308,   309,   310,   311,   582,  1136,  1137,  1208,   583,
   312,   584,   585,   586,   694,  1152,  1145,  1154,   589,  1157,
   590,   591,   695,   704,   705,   710,   739,   743,   712,   713,
  1163,  1164,  1177,   714,   716,   718,   719,   727,   744,   754,
   755,   756,  1176,   757,   758,  1179,   760,   899,   767,   761,
   798,   768,   769,   770,   771,  1189,   772,   773,   774,   775,
   776,   777,  1196,  1197,  1198,   778,   779,   780,   781,  1203,
   782,   783,   784,  1207,   785,   786,   787,  1209,  1210,  1211,
  1212,  1213,  1214,  1215,  1216,  1217,  1218,  1219,  1220,  1221,
  1222,  1223,  1224,  1225,  1226,  1227,  1228,  1229,  1230,  1231,
  1232,  1233,  1234,   830,   840,   843,   788,   789,   790,   791,
   792,   793,   799,   794,   795,   796,   127,   128,  1244,   797,
   800,   851,   129,   852,   855,   804,   805,   132,   854,   858,
   720,   806,   807,   721,   808,  1250,   298,   299,   300,   301,
   302,   809,   303,   304,   305,   306,   307,   308,   309,   310,
   311,   810,  1268,   811,    92,    93,   312,  1265,   812,  1266,
    96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
   106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
   116,   117,   118,   119,    92,   323,   813,   814,   815,   816,
    96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
   106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
   116,   117,   118,   119,   298,   299,   300,   301,   302,   817,
   303,   304,   305,   306,   307,   308,   309,   310,   311,   818,
   846,   998,  1328,  1330,   312,  1336,   819,   820,  1327,  1329,
   821,  1335,   822,  1338,  1339,   823,   824,   825,   826,   827,
  1343,   828,   829,   864,   866,   876,   875,   877,   878,  1352,
   881,   882,   883,   884,   885,   886,   887,  1360,   888,   900,
   914,   908,  1365,   906,   915,  1368,   913,  1370,  1371,  1372,
  1373,  1374,  1375,  1376,  1377,  1378,  1379,  1380,  1381,  1382,
  1383,  1384,  1385,  1386,  1387,  1388,  1389,  1390,  1391,  1392,
  1393,  1394,  1395,   919,  1602,   344,   920,   921,  1399,   922,
   285,   286,  1400,   923,   926,   928,   929,   298,   299,   300,
   301,   302,  1418,   303,   304,   305,   306,   307,   308,   309,
   310,   311,   932,   933,   127,   128,   934,   312,   935,   462,
   129,   936,   945,   520,   952,   132,   946,   947,   870,   948,
   949,   871,   989,   991,   950,  1034,   997,   996,  1003,  1007,
  1009,  1011,  1012,  1046,   127,   324,  1047,  1056,  1052,  1058,
   129,  1062,  1063,  1064,  1065,   132,  1090,  1066,  1067,  1068,
  1117,   325,  1072,  1069,  1071,  1073,  1080,  1074,  1460,  1086,
  1463,  1075,  1076,  1475,  1077,  1689,  1468,  1692,   298,   299,
   300,   301,   302,  1238,   303,   304,   305,   306,   307,   308,
   309,   310,   311,  1078,  1079,  1081,  1082,  1083,   312,  1084,
  1491,  1492,  1493,  1494,  1495,  1496,  1497,  1498,  1499,  1500,
  1501,  1502,  1503,  1504,  1505,  1506,  1507,  1508,  1509,  1510,
  1511,  1085,  1513,  1087,  1088,   298,   299,   300,   301,   302,
  1523,   303,   304,   305,   306,   307,   308,   309,   310,   311,
  1121,  1122,  1124,  1184,  1128,   312,  1129,  1130,  1133,    92,
   501,   520,  1165,  1754,  1134,    96,    97,    98,    99,   100,
   101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
   111,   112,   113,   114,   115,   116,   117,   118,   119,  1169,
  1135,  1138,  1139,  1140,  1141,  1142,  1143,  1144,  1153,  1155,
  1158,  1160,  1161,  1162,  1178,  1181,  1575,  1577,  1579,  1580,
  1581,  1582,  1583,  1584,  1585,  1586,  1587,  1588,  1589,  1590,
  1591,  1592,  1593,  1594,  1595,  1596,  1597,  1598,  1599,  1600,
    92,    93,  1613,  1182,  1183,  1185,    96,    97,    98,    99,
   100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
   110,   111,   112,   113,   114,   115,   116,   117,   118,   119,
   298,   299,   300,   301,   302,  1187,   303,   304,   305,   306,
   307,   308,   309,   310,   311,  1188,  1190,  1191,  1657,  1192,
   312,  1193,  1194,  1200,  1201,  1204,  1205,  1239,  1656,  1241,
  1206,  1245,  1235,  1236,  1662,  1237,  1664,  1240,  1666,  1243,
  1668,  1669,  1670,  1671,  1672,  1673,  1674,  1675,  1676,  1677,
  1678,  1679,  1680,  1681,  1682,  1683,  1684,  1685,  1686,  1687,
  1688,  1248,  1699,  1249,  1264,  1251,  1254,  1256,  1263,  1269,
  1271,  1272,  1273,   327,  1274,  1275,  1277,  1278,   333,   127,
   128,  1319,  1283,  1340,  1279,   129,  1246,  1348,  1284,  1285,
   132,  1351,  1288,  1353,  1356,  1355,   502,  1317,  1287,  1290,
   356,  1357,  1347,  1358,  1359,  1361,   360,   361,  1363,  1364,
  1366,  1367,  1396,  1728,  1729,  1369,  1397,  1398,  1405,  1406,
  1414,  1736,  1737,  1738,  1739,  1740,  1741,  1742,  1743,  1744,
  1745,  1746,  1747,  1748,  1749,  1750,  1751,  1752,  1753,  1417,
  1459,  1415,  1419,  1420,  1421,  1423,  1424,  1426,  1428,  1461,
  1324,  1325,  1465,  1430,  1457,  1466,   129,  1469,  1470,  1471,
  1474,  1326,  1480,  1481,  1482,  1484,  1485,   168,  1486,  1557,
  1247,  1487,  1782,  1514,  1516,  1519,  1518,  1787,  1789,  1791,
  1792,  1793,  1794,  1795,  1796,  1797,  1798,  1799,  1800,  1801,
  1802,  1803,  1804,  1805,  1806,  1807,  1808,  1809,   298,   299,
   300,   301,   302,  1521,   303,   304,   305,   306,   307,   308,
   309,   310,   311,  1526,  1416,  1559,  1563,  1522,   312,  1566,
  1567,  1570,  1571,  1573,  1604,  1524,  1649,  1527,  1652,  1840,
  1530,  1842,  1525,  1844,  1528,  1846,  1847,  1848,  1849,  1850,
  1851,  1852,  1853,  1854,  1855,  1856,  1857,  1858,  1859,  1860,
  1861,  1862,  1863,   298,   299,   300,   301,   302,  1529,   303,
   304,   305,   306,   307,   308,   309,   310,   311,  1531,  1532,
  1554,  1556,  1611,   312,  1606,  1610,  1612,  1614,  1615,  1616,
  1617,  1653,  1647,  1655,  1887,  1888,  1889,  1890,  1891,  1892,
  1893,  1894,  1895,  1896,  1897,  1898,  1899,  1900,  1901,  1660,
  1661,  1648,  1663,  1665,  1667,  1690,  1693,  1725,  1700,  1695,
  1726,  1727,  1730,  1697,  1701,  1755,  1758,  1759,  1783,  1923,
  1925,  1927,  1928,  1929,  1930,  1931,  1932,  1933,  1934,  1935,
  1936,  1937,  1938,  1939,  1940,  1941,  1942,   298,   299,   300,
   301,   302,  1761,   303,   304,   305,   306,   307,   308,   309,
   310,   311,  1837,  1839,  1760,  1841,  1843,   312,  1845,  1967,
  1966,  1762,  1968,  1969,  1970,  1763,  1972,  1973,  1974,  1975,
  1976,  1977,  1978,  1979,  1980,  1981,  1982,  1983,  1984,  1985,
  1986,   298,   299,   300,   301,   302,   696,   303,   304,   305,
   306,   307,   308,   309,   310,   311,  1811,  1812,  1864,  1902,
  1943,   312,  1971,  1903,  1904,  1905,  1987,  2003,  2077,  2079,
  2010,  2011,  2012,  2013,  2014,  2015,  2016,  2017,  2018,  2251,
  2081,  2019,  2083,  2020,  2021,  2022,  2023,  2024,  2085,  2087,
  2121,  2122,  2123,  2155,  2157,  2035,  2037,  2039,  2041,  2043,
  2045,  2046,  2047,  2048,  2049,  2050,  2051,  2052,  2053,  2054,
  2159,   533,    27,    28,   534,   535,    31,    32,    33,  2175,
    34,  2176,    36,    37,  2177,    39,    40,  2200,  2202,  2204,
  2229,  2076,  2230,  2078,  2231,  2080,  2245,  2082,  2247,  2084,
  2249,  2086,    52,  2088,  2089,  2090,  2091,  2092,  2093,  2094,
  2095,  2096,  2252,    70,    71,   803,   553,    72,  1168,  1123,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    53,    54,    55,  2106,  2107,  2108,  2109,  2110,  2111,   709,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,  2124,  2125,  2126,  2127,  2128,  2129,  2131,  2133,  2135,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,  2148,  2149,  2150,  2151,  2152,  2153,  2154,     0,
  2156,     0,  2158,     0,     0,     0,     0,     0,     0,     0,
     0,     0,    65,     0,     0,     0,  2166,  2167,  2168,     0,
     0,     0,     0,     0,     0,     0,     0,     0,  2178,  2179,
  2180,  2182,  2184,  2186,     0,     0,     0,     0,     0,     0,
     0,     0,     0,  2196,  2197,  2198,  2199,     0,  2201,     0,
  2203,     0,     0,     0,   541,     0,     0,     0,     0,     0,
     0,  2208,  2209,  2210,     0,     0,     0,  2214,  2215,  2216,
     0,     0,     0,  2220,  2221,  2222,   862,   863,     0,   865,
     0,   867,   868,     0,     0,  2233,  2235,  2237,     0,     0,
     0,     0,     0,     0,  2244,     0,  2246,     0,  2248,     0,
     0,   298,   299,   300,   301,   302,     0,   303,   304,   305,
   306,   307,   308,   309,   310,   311,     0,     0,     0,   903,
   904,   312,     0,   907,   298,   299,   300,   301,   302,     0,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
   924,   925,     0,     0,   312,     0,   930,   931,     0,     0,
    92,    93,    94,   937,    95,   944,    96,    97,    98,    99,
   100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
   110,   111,   112,   113,   114,   115,   116,   117,   118,   119,
     0,   120,   121,   122,    92,    93,   458,     0,     0,     0,
    96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
   106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
   116,   117,   118,   119,     0,   120,   121,   122,     0,     0,
     0,     0,     0,     0,     0,     0,     0,  1008,     0,  1010,
     0,     0,     0,     0,     0,     0,     0,     0,     0,  1017,
  1018,  1019,     0,     0,  1022,  1023,  1024,  1025,  1026,  1027,
  1028,     0,    92,    93,     0,     0,     0,     0,    96,    97,
    98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
   108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
   118,   119,    92,   323,     0,     0,     0,     0,    96,    97,
    98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
   108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
   118,   119,   873,     0,     0,     0,   123,   124,   125,   126,
     0,     0,     0,     0,     0,     0,     0,   910,     0,     0,
   127,   128,     0,     0,     0,     0,   129,   130,   131,     0,
     0,   132,     0,   133,     0,   134,     0,     0,     0,     0,
     0,     0,     0,     0,     0,  1118,     0,     0,     0,     0,
     0,     0,     0,     0,   127,   128,     0,     0,     0,     0,
   129,    92,   501,     0,     0,   132,     0,    96,    97,    98,
    99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
   109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
   119,     0,     0,     0,     0,   533,    27,    28,   534,   535,
    31,    32,    33,     0,    34,  1170,    36,    37,     0,    39,
    40,     0,     0,  1180,     0,     0,     0,     0,     0,     0,
     0,     0,   127,   128,     0,     0,    52,     0,   129,     0,
     0,     0,  1199,   132,     0,     0,     0,   298,   299,   300,
   301,   302,     0,   303,   304,   305,   306,   307,   308,   309,
   310,   311,   127,   464,    53,    54,    55,   312,   129,     0,
     0,     0,     0,   132,     0,   728,     0,   298,   299,   300,
   301,   302,     0,   303,   304,   305,   306,   307,   308,   309,
   310,   311,   298,   299,   300,   301,   302,   312,   303,   304,
   305,   306,   307,   308,   309,   310,   311,   298,   299,   300,
   301,   302,   312,   303,   304,   305,   306,   307,   308,   309,
   310,   311,     0,     0,     0,     0,    65,   312,     0,     0,
   -10,     1,     0,   -10,   -53,   732,   298,   299,   300,   301,
   302,     0,   303,   304,   305,   306,   307,   308,   309,   310,
   311,   127,   128,     0,     0,     0,   312,   129,     0,     0,
     0,     0,   132,   -53,   733,     0,     0,   -53,   -53,   -53,
   -53,   -53,   -53,   -53,   -53,   -53,     0,   -53,   -53,   -53,
   -53,   -53,   -53,   -53,     0,     0,     0,   -53,   -53,   -53,
   -53,   -53,   -53,   -53,     0,   -53,   -53,   -53,   -53,   -53,
   533,    27,    28,   534,   535,    31,    32,    33,     0,    34,
     0,    36,    37,     0,    39,    40,     0,     0,     0,     0,
     0,     0,     0,     0,  1341,     0,  1342,   -53,   -53,   -53,
  1346,    52,     0,     0,   -53,     0,   -53,     0,   -53,   -53,
   -53,   -53,   -53,   -53,   -53,     0,  1362,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,    53,
    54,    55,     0,     0,   -10,   -10,   -10,   -10,   -10,   -10,
   -10,   -10,     0,     0,   298,   299,   300,   301,   302,    23,
   303,   304,   305,   306,   307,   308,   309,   310,   311,   -53,
     2,     3,     0,     4,   312,     0,     0,     0,     0,     0,
  1149,     0,  1150,     0,     0,     0,     0,     0,    24,     0,
     0,     0,    25,    26,    27,    28,    29,    30,    31,    32,
    33,    65,    34,    35,    36,    37,    38,    39,    40,     0,
     0,     0,    41,    42,    43,    44,    45,    46,    47,     0,
    48,    49,    50,    51,    52,     0,     0,   298,   299,   300,
   301,   302,     0,   303,   304,   305,   306,   307,   308,   309,
   310,   311,     0,   763,     0,     0,     0,   312,     0,  1464,
     0,     0,    53,    54,    55,   892,     0,  1472,  1473,    56,
     0,    57,     0,    58,    59,    60,    61,    62,    63,    64,
   595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
   605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
   615,   616,   617,   618,   619,   620,     0,     0,     0,     0,
   201,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,    65,   595,   596,   597,   598,   599,
   600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
   610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
   620,     0,   298,   299,   300,   301,   302,     0,   303,   304,
   305,   306,   307,   308,   309,   310,   311,     0,     0,     0,
     0,  1561,   312,     0,  1565,     0,     0,     0,  1171,     0,
  1172,     0,     0,     0,     0,   202,   203,   204,     0,     0,
     0,     0,     0,   205,   206,   207,   208,   209,   210,   211,
   212,   213,   214,     0,     0,     0,     0,     0,     0,     0,
   621,   215,   216,   217,   218,   219,   220,   221,   222,   223,
   224,     0,   225,   226,   227,   228,   229,   230,   298,   299,
   300,   301,   302,     0,   303,   304,   305,   306,   307,   308,
   309,   310,   311,     0,     0,     0,     0,     0,   312,     0,
     0,     0,     0,     0,  1322,   953,  1323,     0,     0,     0,
  1651,     0,     0,   298,   299,   300,   301,   302,  1659,   303,
   304,   305,   306,   307,   308,   309,   310,   311,     0,     0,
     0,     0,     0,   312,     0,     0,   298,   299,   300,   301,
   302,  1147,   303,   304,   305,   306,   307,   308,   309,   310,
   311,     0,     0,     0,     0,     0,   312,     0,     0,   298,
   299,   300,   301,   302,  1344,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
     0,     0,   298,   299,   300,   301,   302,  1345,   303,   304,
   305,   306,   307,   308,   309,   310,   311,     0,     0,     0,
     0,     0,   312,     0,  1732,   298,   299,   300,   301,   302,
  1401,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     0,     0,     0,     0,     0,   312,     0,     0,   298,   299,
   300,   301,   302,  1403,   303,   304,   305,   306,   307,   308,
   309,   310,   311,     0,     0,     0,     0,     0,   312,     0,
     0,     0,     0,     0,     0,     0,  1409,   298,   299,   300,
   301,   302,  1784,   303,   304,   305,   306,   307,   308,   309,
   310,   311,     0,     0,     0,     0,     0,   312,     0,     0,
   298,   299,   300,   301,   302,  1412,   303,   304,   305,   306,
   307,   308,   309,   310,   311,     0,     0,     0,     0,     0,
   312,     0,     0,     0,     0,     0,     0,     0,  1413,   298,
   299,   300,   301,   302,  1838,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
     0,     0,   298,   299,   300,   301,   302,  1458,   303,   304,
   305,   306,   307,   308,   309,   310,   311,     0,     0,     0,
     0,     0,   312,     0,     0,     0,     0,     0,     0,     0,
  1515,     0,   298,   299,   300,   301,   302,  1883,   303,   304,
   305,   306,   307,   308,   309,   310,   311,     0,     0,     0,
     0,     0,   312,     0,     0,     0,     0,     0,     0,     0,
  1517,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   298,   299,   300,   301,   302,  1921,   303,   304,   305,   306,
   307,   308,   309,   310,   311,     0,     0,     0,     0,     0,
   312,     0,     0,   298,   299,   300,   301,   302,  1520,   303,
   304,   305,   306,   307,   308,   309,   310,   311,     0,     0,
     0,     0,     0,   312,     0,     0,   298,   299,   300,   301,
   302,  1757,   303,   304,   305,   306,   307,   308,   309,   310,
   311,     0,     0,     0,     0,     0,   312,     0,     0,   298,
   299,   300,   301,   302,  1810,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
   298,   299,   300,   301,   302,   521,   303,   304,   305,   306,
   307,   308,   309,   310,   311,     0,     0,     0,     0,     0,
   312,   298,   299,   300,   301,   302,   550,   303,   304,   305,
   306,   307,   308,   309,   310,   311,     0,     0,     0,     0,
     0,   312,   298,   299,   300,   301,   302,   670,   303,   304,
   305,   306,   307,   308,   309,   310,   311,     0,     0,     0,
     0,     0,   312,   298,   299,   300,   301,   302,   671,   303,
   304,   305,   306,   307,   308,   309,   310,   311,     0,     0,
     0,     0,     0,   312,   298,   299,   300,   301,   302,   684,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     0,     0,     0,     0,   312,   298,   299,   300,   301,   302,
   685,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     0,     0,     0,     0,     0,   312,   298,   299,   300,   301,
   302,   686,   303,   304,   305,   306,   307,   308,   309,   310,
   311,     0,     0,     0,     0,     0,   312,   298,   299,   300,
   301,   302,   687,   303,   304,   305,   306,   307,   308,   309,
   310,   311,     0,     0,     0,     0,     0,   312,   298,   299,
   300,   301,   302,   688,   303,   304,   305,   306,   307,   308,
   309,   310,   311,     0,     0,     0,     0,     0,   312,   298,
   299,   300,   301,   302,   689,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
   298,   299,   300,   301,   302,   746,   303,   304,   305,   306,
   307,   308,   309,   310,   311,     0,     0,     0,     0,     0,
   312,   298,   299,   300,   301,   302,   747,   303,   304,   305,
   306,   307,   308,   309,   310,   311,     0,     0,     0,     0,
     0,   312,   298,   299,   300,   301,   302,   748,   303,   304,
   305,   306,   307,   308,   309,   310,   311,     0,     0,     0,
     0,     0,   312,   298,   299,   300,   301,   302,   890,   303,
   304,   305,   306,   307,   308,   309,   310,   311,     0,     0,
     0,     0,     0,   312,   298,   299,   300,   301,   302,   891,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     0,     0,     0,     0,   312,   298,   299,   300,   301,   302,
   909,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     0,     0,     0,     0,     0,   312,   298,   299,   300,   301,
   302,  1044,   303,   304,   305,   306,   307,   308,   309,   310,
   311,     0,     0,     0,     0,     0,   312,   298,   299,   300,
   301,   302,  1045,   303,   304,   305,   306,   307,   308,   309,
   310,   311,     0,     0,     0,     0,     0,   312,   298,   299,
   300,   301,   302,  1059,   303,   304,   305,   306,   307,   308,
   309,   310,   311,     0,     0,     0,     0,     0,   312,   298,
   299,   300,   301,   302,  1060,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
   298,   299,   300,   301,   302,  1091,   303,   304,   305,   306,
   307,   308,   309,   310,   311,     0,     0,     0,     0,     0,
   312,   298,   299,   300,   301,   302,  1092,   303,   304,   305,
   306,   307,   308,   309,   310,   311,     0,     0,     0,     0,
     0,   312,   298,   299,   300,   301,   302,  1093,   303,   304,
   305,   306,   307,   308,   309,   310,   311,     0,     0,     0,
     0,     0,   312,   298,   299,   300,   301,   302,  1094,   303,
   304,   305,   306,   307,   308,   309,   310,   311,     0,     0,
     0,     0,     0,   312,   298,   299,   300,   301,   302,  1095,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     0,     0,     0,     0,   312,   298,   299,   300,   301,   302,
  1096,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     0,     0,     0,     0,     0,   312,   298,   299,   300,   301,
   302,  1097,   303,   304,   305,   306,   307,   308,   309,   310,
   311,     0,     0,     0,     0,     0,   312,   298,   299,   300,
   301,   302,  1098,   303,   304,   305,   306,   307,   308,   309,
   310,   311,     0,     0,     0,     0,     0,   312,   298,   299,
   300,   301,   302,  1099,   303,   304,   305,   306,   307,   308,
   309,   310,   311,     0,     0,     0,     0,     0,   312,   298,
   299,   300,   301,   302,  1100,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
   298,   299,   300,   301,   302,  1101,   303,   304,   305,   306,
   307,   308,   309,   310,   311,     0,     0,     0,     0,     0,
   312,   298,   299,   300,   301,   302,  1102,   303,   304,   305,
   306,   307,   308,   309,   310,   311,     0,     0,     0,     0,
     0,   312,   298,   299,   300,   301,   302,  1103,   303,   304,
   305,   306,   307,   308,   309,   310,   311,     0,     0,     0,
     0,     0,   312,   298,   299,   300,   301,   302,  1104,   303,
   304,   305,   306,   307,   308,   309,   310,   311,     0,     0,
     0,     0,     0,   312,   298,   299,   300,   301,   302,  1105,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     0,     0,     0,     0,   312,   298,   299,   300,   301,   302,
  1106,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     0,     0,     0,     0,     0,   312,   298,   299,   300,   301,
   302,  1107,   303,   304,   305,   306,   307,   308,   309,   310,
   311,     0,     0,     0,     0,     0,   312,   298,   299,   300,
   301,   302,  1108,   303,   304,   305,   306,   307,   308,   309,
   310,   311,     0,     0,     0,     0,     0,   312,   298,   299,
   300,   301,   302,  1109,   303,   304,   305,   306,   307,   308,
   309,   310,   311,     0,     0,     0,     0,     0,   312,   298,
   299,   300,   301,   302,  1110,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
   298,   299,   300,   301,   302,  1111,   303,   304,   305,   306,
   307,   308,   309,   310,   311,     0,     0,     0,     0,     0,
   312,   298,   299,   300,   301,   302,  1112,   303,   304,   305,
   306,   307,   308,   309,   310,   311,     0,     0,     0,     0,
     0,   312,   298,   299,   300,   301,   302,  1113,   303,   304,
   305,   306,   307,   308,   309,   310,   311,     0,     0,     0,
     0,     0,   312,   298,   299,   300,   301,   302,  1114,   303,
   304,   305,   306,   307,   308,   309,   310,   311,     0,     0,
     0,     0,     0,   312,   298,   299,   300,   301,   302,  1115,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     0,     0,     0,     0,   312,   298,   299,   300,   301,   302,
  1116,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     0,     0,     0,     0,     0,   312,   298,   299,   300,   301,
   302,  1132,   303,   304,   305,   306,   307,   308,   309,   310,
   311,     0,     0,     0,     0,     0,   312,   298,   299,   300,
   301,   302,  1257,   303,   304,   305,   306,   307,   308,   309,
   310,   311,     0,     0,     0,     0,     0,   312,   298,   299,
   300,   301,   302,  1258,   303,   304,   305,   306,   307,   308,
   309,   310,   311,     0,     0,     0,     0,     0,   312,   298,
   299,   300,   301,   302,  1267,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
   298,   299,   300,   301,   302,  1270,   303,   304,   305,   306,
   307,   308,   309,   310,   311,     0,     0,     0,     0,     0,
   312,   298,   299,   300,   301,   302,  1281,   303,   304,   305,
   306,   307,   308,   309,   310,   311,     0,     0,     0,     0,
     0,   312,   298,   299,   300,   301,   302,  1286,   303,   304,
   305,   306,   307,   308,   309,   310,   311,     0,     0,     0,
     0,     0,   312,   298,   299,   300,   301,   302,  1289,   303,
   304,   305,   306,   307,   308,   309,   310,   311,     0,     0,
     0,     0,     0,   312,   298,   299,   300,   301,   302,  1291,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     0,     0,     0,     0,   312,   298,   299,   300,   301,   302,
  1292,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     0,     0,     0,     0,     0,   312,   298,   299,   300,   301,
   302,  1293,   303,   304,   305,   306,   307,   308,   309,   310,
   311,     0,     0,     0,     0,     0,   312,   298,   299,   300,
   301,   302,  1294,   303,   304,   305,   306,   307,   308,   309,
   310,   311,     0,     0,     0,     0,     0,   312,   298,   299,
   300,   301,   302,  1295,   303,   304,   305,   306,   307,   308,
   309,   310,   311,     0,     0,     0,     0,     0,   312,   298,
   299,   300,   301,   302,  1296,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
   298,   299,   300,   301,   302,  1297,   303,   304,   305,   306,
   307,   308,   309,   310,   311,     0,     0,     0,     0,     0,
   312,   298,   299,   300,   301,   302,  1298,   303,   304,   305,
   306,   307,   308,   309,   310,   311,     0,     0,     0,     0,
     0,   312,   298,   299,   300,   301,   302,  1299,   303,   304,
   305,   306,   307,   308,   309,   310,   311,     0,     0,     0,
     0,     0,   312,   298,   299,   300,   301,   302,  1300,   303,
   304,   305,   306,   307,   308,   309,   310,   311,     0,     0,
     0,     0,     0,   312,   298,   299,   300,   301,   302,  1301,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     0,     0,     0,     0,   312,   298,   299,   300,   301,   302,
  1302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     0,     0,     0,     0,     0,   312,   298,   299,   300,   301,
   302,  1303,   303,   304,   305,   306,   307,   308,   309,   310,
   311,     0,     0,     0,     0,     0,   312,   298,   299,   300,
   301,   302,  1304,   303,   304,   305,   306,   307,   308,   309,
   310,   311,     0,     0,     0,     0,     0,   312,   298,   299,
   300,   301,   302,  1305,   303,   304,   305,   306,   307,   308,
   309,   310,   311,     0,     0,     0,     0,     0,   312,   298,
   299,   300,   301,   302,  1306,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
   298,   299,   300,   301,   302,  1307,   303,   304,   305,   306,
   307,   308,   309,   310,   311,     0,     0,     0,     0,     0,
   312,   298,   299,   300,   301,   302,  1308,   303,   304,   305,
   306,   307,   308,   309,   310,   311,     0,     0,     0,     0,
     0,   312,   298,   299,   300,   301,   302,  1309,   303,   304,
   305,   306,   307,   308,   309,   310,   311,     0,     0,     0,
     0,     0,   312,   298,   299,   300,   301,   302,  1310,   303,
   304,   305,   306,   307,   308,   309,   310,   311,     0,     0,
     0,     0,     0,   312,   298,   299,   300,   301,   302,  1311,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     0,     0,     0,     0,   312,   298,   299,   300,   301,   302,
  1312,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     0,     0,     0,     0,     0,   312,   298,   299,   300,   301,
   302,  1313,   303,   304,   305,   306,   307,   308,   309,   310,
   311,     0,     0,     0,     0,     0,   312,   298,   299,   300,
   301,   302,  1314,   303,   304,   305,   306,   307,   308,   309,
   310,   311,     0,     0,     0,     0,     0,   312,   298,   299,
   300,   301,   302,  1315,   303,   304,   305,   306,   307,   308,
   309,   310,   311,     0,     0,     0,     0,     0,   312,   298,
   299,   300,   301,   302,  1316,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
   298,   299,   300,   301,   302,  1320,   303,   304,   305,   306,
   307,   308,   309,   310,   311,     0,     0,     0,     0,     0,
   312,   298,   299,   300,   301,   302,  1422,   303,   304,   305,
   306,   307,   308,   309,   310,   311,     0,     0,     0,     0,
     0,   312,   298,   299,   300,   301,   302,  1434,   303,   304,
   305,   306,   307,   308,   309,   310,   311,     0,     0,     0,
     0,     0,   312,   298,   299,   300,   301,   302,  1435,   303,
   304,   305,   306,   307,   308,   309,   310,   311,     0,     0,
     0,     0,     0,   312,   298,   299,   300,   301,   302,  1436,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     0,     0,     0,     0,   312,   298,   299,   300,   301,   302,
  1437,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     0,     0,     0,     0,     0,   312,   298,   299,   300,   301,
   302,  1438,   303,   304,   305,   306,   307,   308,   309,   310,
   311,     0,     0,     0,     0,     0,   312,   298,   299,   300,
   301,   302,  1439,   303,   304,   305,   306,   307,   308,   309,
   310,   311,     0,     0,     0,     0,     0,   312,   298,   299,
   300,   301,   302,  1440,   303,   304,   305,   306,   307,   308,
   309,   310,   311,     0,     0,     0,     0,     0,   312,   298,
   299,   300,   301,   302,  1441,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
   298,   299,   300,   301,   302,  1442,   303,   304,   305,   306,
   307,   308,   309,   310,   311,     0,     0,     0,     0,     0,
   312,   298,   299,   300,   301,   302,  1443,   303,   304,   305,
   306,   307,   308,   309,   310,   311,     0,     0,     0,     0,
     0,   312,   298,   299,   300,   301,   302,  1444,   303,   304,
   305,   306,   307,   308,   309,   310,   311,     0,     0,     0,
     0,     0,   312,   298,   299,   300,   301,   302,  1445,   303,
   304,   305,   306,   307,   308,   309,   310,   311,     0,     0,
     0,     0,     0,   312,   298,   299,   300,   301,   302,  1446,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     0,     0,     0,     0,   312,   298,   299,   300,   301,   302,
  1447,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     0,     0,     0,     0,     0,   312,   298,   299,   300,   301,
   302,  1448,   303,   304,   305,   306,   307,   308,   309,   310,
   311,     0,     0,     0,     0,     0,   312,   298,   299,   300,
   301,   302,  1449,   303,   304,   305,   306,   307,   308,   309,
   310,   311,     0,     0,     0,     0,     0,   312,   298,   299,
   300,   301,   302,  1450,   303,   304,   305,   306,   307,   308,
   309,   310,   311,     0,     0,     0,     0,     0,   312,   298,
   299,   300,   301,   302,  1451,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
   298,   299,   300,   301,   302,  1452,   303,   304,   305,   306,
   307,   308,   309,   310,   311,     0,     0,     0,     0,     0,
   312,   298,   299,   300,   301,   302,  1453,   303,   304,   305,
   306,   307,   308,   309,   310,   311,     0,     0,     0,     0,
     0,   312,   298,   299,   300,   301,   302,  1454,   303,   304,
   305,   306,   307,   308,   309,   310,   311,     0,     0,     0,
     0,     0,   312,   298,   299,   300,   301,   302,  1456,   303,
   304,   305,   306,   307,   308,   309,   310,   311,     0,     0,
     0,     0,     0,   312,   298,   299,   300,   301,   302,  1533,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     0,     0,     0,     0,   312,   298,   299,   300,   301,   302,
  1534,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     0,     0,     0,     0,     0,   312,   298,   299,   300,   301,
   302,  1535,   303,   304,   305,   306,   307,   308,   309,   310,
   311,     0,     0,     0,     0,     0,   312,   298,   299,   300,
   301,   302,  1536,   303,   304,   305,   306,   307,   308,   309,
   310,   311,     0,     0,     0,     0,     0,   312,   298,   299,
   300,   301,   302,  1537,   303,   304,   305,   306,   307,   308,
   309,   310,   311,     0,     0,     0,     0,     0,   312,   298,
   299,   300,   301,   302,  1538,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
   298,   299,   300,   301,   302,  1539,   303,   304,   305,   306,
   307,   308,   309,   310,   311,     0,     0,     0,     0,     0,
   312,   298,   299,   300,   301,   302,  1540,   303,   304,   305,
   306,   307,   308,   309,   310,   311,     0,     0,     0,     0,
     0,   312,   298,   299,   300,   301,   302,  1541,   303,   304,
   305,   306,   307,   308,   309,   310,   311,     0,     0,     0,
     0,     0,   312,   298,   299,   300,   301,   302,  1542,   303,
   304,   305,   306,   307,   308,   309,   310,   311,     0,     0,
     0,     0,     0,   312,   298,   299,   300,   301,   302,  1543,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     0,     0,     0,     0,   312,   298,   299,   300,   301,   302,
  1544,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     0,     0,     0,     0,     0,   312,   298,   299,   300,   301,
   302,  1545,   303,   304,   305,   306,   307,   308,   309,   310,
   311,     0,     0,     0,     0,     0,   312,   298,   299,   300,
   301,   302,  1546,   303,   304,   305,   306,   307,   308,   309,
   310,   311,     0,     0,     0,     0,     0,   312,   298,   299,
   300,   301,   302,  1547,   303,   304,   305,   306,   307,   308,
   309,   310,   311,     0,     0,     0,     0,     0,   312,   298,
   299,   300,   301,   302,  1548,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
   298,   299,   300,   301,   302,  1549,   303,   304,   305,   306,
   307,   308,   309,   310,   311,     0,     0,     0,     0,     0,
   312,   298,   299,   300,   301,   302,  1550,   303,   304,   305,
   306,   307,   308,   309,   310,   311,     0,     0,     0,     0,
     0,   312,   298,   299,   300,   301,   302,  1551,   303,   304,
   305,   306,   307,   308,   309,   310,   311,     0,     0,     0,
     0,     0,   312,   298,   299,   300,   301,   302,  1552,   303,
   304,   305,   306,   307,   308,   309,   310,   311,     0,     0,
     0,     0,     0,   312,   298,   299,   300,   301,   302,  1553,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     0,     0,     0,     0,   312,   298,   299,   300,   301,   302,
  1624,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     0,     0,     0,     0,     0,   312,   298,   299,   300,   301,
   302,  1625,   303,   304,   305,   306,   307,   308,   309,   310,
   311,     0,     0,     0,     0,     0,   312,   298,   299,   300,
   301,   302,  1626,   303,   304,   305,   306,   307,   308,   309,
   310,   311,     0,     0,     0,     0,     0,   312,   298,   299,
   300,   301,   302,  1627,   303,   304,   305,   306,   307,   308,
   309,   310,   311,     0,     0,     0,     0,     0,   312,   298,
   299,   300,   301,   302,  1628,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
   298,   299,   300,   301,   302,  1629,   303,   304,   305,   306,
   307,   308,   309,   310,   311,     0,     0,     0,     0,     0,
   312,   298,   299,   300,   301,   302,  1630,   303,   304,   305,
   306,   307,   308,   309,   310,   311,     0,     0,     0,     0,
     0,   312,   298,   299,   300,   301,   302,  1631,   303,   304,
   305,   306,   307,   308,   309,   310,   311,     0,     0,     0,
     0,     0,   312,   298,   299,   300,   301,   302,  1632,   303,
   304,   305,   306,   307,   308,   309,   310,   311,     0,     0,
     0,     0,     0,   312,   298,   299,   300,   301,   302,  1633,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     0,     0,     0,     0,   312,   298,   299,   300,   301,   302,
  1634,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     0,     0,     0,     0,     0,   312,   298,   299,   300,   301,
   302,  1635,   303,   304,   305,   306,   307,   308,   309,   310,
   311,     0,     0,     0,     0,     0,   312,   298,   299,   300,
   301,   302,  1636,   303,   304,   305,   306,   307,   308,   309,
   310,   311,     0,     0,     0,     0,     0,   312,   298,   299,
   300,   301,   302,  1637,   303,   304,   305,   306,   307,   308,
   309,   310,   311,     0,     0,     0,     0,     0,   312,   298,
   299,   300,   301,   302,  1638,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
   298,   299,   300,   301,   302,  1639,   303,   304,   305,   306,
   307,   308,   309,   310,   311,     0,     0,     0,     0,     0,
   312,   298,   299,   300,   301,   302,  1640,   303,   304,   305,
   306,   307,   308,   309,   310,   311,     0,     0,     0,     0,
     0,   312,   298,   299,   300,   301,   302,  1641,   303,   304,
   305,   306,   307,   308,   309,   310,   311,     0,     0,     0,
     0,     0,   312,   298,   299,   300,   301,   302,  1642,   303,
   304,   305,   306,   307,   308,   309,   310,   311,     0,     0,
     0,     0,     0,   312,   298,   299,   300,   301,   302,  1643,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     0,     0,     0,     0,   312,   298,   299,   300,   301,   302,
  1644,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     0,     0,     0,     0,     0,   312,   298,   299,   300,   301,
   302,  1698,   303,   304,   305,   306,   307,   308,   309,   310,
   311,     0,     0,     0,     0,     0,   312,   298,   299,   300,
   301,   302,  1705,   303,   304,   305,   306,   307,   308,   309,
   310,   311,     0,     0,     0,     0,     0,   312,   298,   299,
   300,   301,   302,  1706,   303,   304,   305,   306,   307,   308,
   309,   310,   311,     0,     0,     0,     0,     0,   312,   298,
   299,   300,   301,   302,  1707,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
   298,   299,   300,   301,   302,  1708,   303,   304,   305,   306,
   307,   308,   309,   310,   311,     0,     0,     0,     0,     0,
   312,   298,   299,   300,   301,   302,  1709,   303,   304,   305,
   306,   307,   308,   309,   310,   311,     0,     0,     0,     0,
     0,   312,   298,   299,   300,   301,   302,  1710,   303,   304,
   305,   306,   307,   308,   309,   310,   311,     0,     0,     0,
     0,     0,   312,   298,   299,   300,   301,   302,  1711,   303,
   304,   305,   306,   307,   308,   309,   310,   311,     0,     0,
     0,     0,     0,   312,   298,   299,   300,   301,   302,  1712,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     0,     0,     0,     0,   312,   298,   299,   300,   301,   302,
  1713,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     0,     0,     0,     0,     0,   312,   298,   299,   300,   301,
   302,  1714,   303,   304,   305,   306,   307,   308,   309,   310,
   311,     0,     0,     0,     0,     0,   312,   298,   299,   300,
   301,   302,  1715,   303,   304,   305,   306,   307,   308,   309,
   310,   311,     0,     0,     0,     0,     0,   312,   298,   299,
   300,   301,   302,  1716,   303,   304,   305,   306,   307,   308,
   309,   310,   311,     0,     0,     0,     0,     0,   312,   298,
   299,   300,   301,   302,  1717,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
   298,   299,   300,   301,   302,  1718,   303,   304,   305,   306,
   307,   308,   309,   310,   311,     0,     0,     0,     0,     0,
   312,   298,   299,   300,   301,   302,  1719,   303,   304,   305,
   306,   307,   308,   309,   310,   311,     0,     0,     0,     0,
     0,   312,   298,   299,   300,   301,   302,  1720,   303,   304,
   305,   306,   307,   308,   309,   310,   311,     0,     0,     0,
     0,     0,   312,   298,   299,   300,   301,   302,  1721,   303,
   304,   305,   306,   307,   308,   309,   310,   311,     0,     0,
     0,     0,     0,   312,   298,   299,   300,   301,   302,  1722,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     0,     0,     0,     0,   312,   298,   299,   300,   301,   302,
  1756,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     0,     0,     0,     0,     0,   312,   298,   299,   300,   301,
   302,  1764,   303,   304,   305,   306,   307,   308,   309,   310,
   311,     0,     0,     0,     0,     0,   312,   298,   299,   300,
   301,   302,  1765,   303,   304,   305,   306,   307,   308,   309,
   310,   311,     0,     0,     0,     0,     0,   312,   298,   299,
   300,   301,   302,  1766,   303,   304,   305,   306,   307,   308,
   309,   310,   311,     0,     0,     0,     0,     0,   312,   298,
   299,   300,   301,   302,  1767,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
   298,   299,   300,   301,   302,  1768,   303,   304,   305,   306,
   307,   308,   309,   310,   311,     0,     0,     0,     0,     0,
   312,   298,   299,   300,   301,   302,  1769,   303,   304,   305,
   306,   307,   308,   309,   310,   311,     0,     0,     0,     0,
     0,   312,   298,   299,   300,   301,   302,  1770,   303,   304,
   305,   306,   307,   308,   309,   310,   311,     0,     0,     0,
     0,     0,   312,   298,   299,   300,   301,   302,  1771,   303,
   304,   305,   306,   307,   308,   309,   310,   311,     0,     0,
     0,     0,     0,   312,   298,   299,   300,   301,   302,  1772,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     0,     0,     0,     0,   312,   298,   299,   300,   301,   302,
  1773,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     0,     0,     0,     0,     0,   312,   298,   299,   300,   301,
   302,  1774,   303,   304,   305,   306,   307,   308,   309,   310,
   311,     0,     0,     0,     0,     0,   312,   298,   299,   300,
   301,   302,  1775,   303,   304,   305,   306,   307,   308,   309,
   310,   311,     0,     0,     0,     0,     0,   312,   298,   299,
   300,   301,   302,  1776,   303,   304,   305,   306,   307,   308,
   309,   310,   311,     0,     0,     0,     0,     0,   312,   298,
   299,   300,   301,   302,  1777,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
   298,   299,   300,   301,   302,  1778,   303,   304,   305,   306,
   307,   308,   309,   310,   311,     0,     0,     0,     0,     0,
   312,   298,   299,   300,   301,   302,  1779,   303,   304,   305,
   306,   307,   308,   309,   310,   311,     0,     0,     0,     0,
     0,   312,   298,   299,   300,   301,   302,  1780,   303,   304,
   305,   306,   307,   308,   309,   310,   311,     0,     0,     0,
     0,     0,   312,   298,   299,   300,   301,   302,  1781,   303,
   304,   305,   306,   307,   308,   309,   310,   311,     0,     0,
     0,     0,     0,   312,   298,   299,   300,   301,   302,  1819,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     0,     0,     0,     0,   312,   298,   299,   300,   301,   302,
  1820,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     0,     0,     0,     0,     0,   312,   298,   299,   300,   301,
   302,  1821,   303,   304,   305,   306,   307,   308,   309,   310,
   311,     0,     0,     0,     0,     0,   312,   298,   299,   300,
   301,   302,  1822,   303,   304,   305,   306,   307,   308,   309,
   310,   311,     0,     0,     0,     0,     0,   312,   298,   299,
   300,   301,   302,  1823,   303,   304,   305,   306,   307,   308,
   309,   310,   311,     0,     0,     0,     0,     0,   312,   298,
   299,   300,   301,   302,  1824,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
   298,   299,   300,   301,   302,  1825,   303,   304,   305,   306,
   307,   308,   309,   310,   311,     0,     0,     0,     0,     0,
   312,   298,   299,   300,   301,   302,  1826,   303,   304,   305,
   306,   307,   308,   309,   310,   311,     0,     0,     0,     0,
     0,   312,   298,   299,   300,   301,   302,  1827,   303,   304,
   305,   306,   307,   308,   309,   310,   311,     0,     0,     0,
     0,     0,   312,   298,   299,   300,   301,   302,  1828,   303,
   304,   305,   306,   307,   308,   309,   310,   311,     0,     0,
     0,     0,     0,   312,   298,   299,   300,   301,   302,  1829,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     0,     0,     0,     0,   312,   298,   299,   300,   301,   302,
  1830,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     0,     0,     0,     0,     0,   312,   298,   299,   300,   301,
   302,  1831,   303,   304,   305,   306,   307,   308,   309,   310,
   311,     0,     0,     0,     0,     0,   312,   298,   299,   300,
   301,   302,  1832,   303,   304,   305,   306,   307,   308,   309,
   310,   311,     0,     0,     0,     0,     0,   312,   298,   299,
   300,   301,   302,  1833,   303,   304,   305,   306,   307,   308,
   309,   310,   311,     0,     0,     0,     0,     0,   312,   298,
   299,   300,   301,   302,  1834,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
   298,   299,   300,   301,   302,  1835,   303,   304,   305,   306,
   307,   308,   309,   310,   311,     0,     0,     0,     0,     0,
   312,   298,   299,   300,   301,   302,  1836,   303,   304,   305,
   306,   307,   308,   309,   310,   311,     0,     0,     0,     0,
     0,   312,   298,   299,   300,   301,   302,  1868,   303,   304,
   305,   306,   307,   308,   309,   310,   311,     0,     0,     0,
     0,     0,   312,   298,   299,   300,   301,   302,  1869,   303,
   304,   305,   306,   307,   308,   309,   310,   311,     0,     0,
     0,     0,     0,   312,   298,   299,   300,   301,   302,  1870,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     0,     0,     0,     0,   312,   298,   299,   300,   301,   302,
  1871,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     0,     0,     0,     0,     0,   312,   298,   299,   300,   301,
   302,  1872,   303,   304,   305,   306,   307,   308,   309,   310,
   311,     0,     0,     0,     0,     0,   312,   298,   299,   300,
   301,   302,  1873,   303,   304,   305,   306,   307,   308,   309,
   310,   311,     0,     0,     0,     0,     0,   312,   298,   299,
   300,   301,   302,  1874,   303,   304,   305,   306,   307,   308,
   309,   310,   311,     0,     0,     0,     0,     0,   312,   298,
   299,   300,   301,   302,  1875,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
   298,   299,   300,   301,   302,  1876,   303,   304,   305,   306,
   307,   308,   309,   310,   311,     0,     0,     0,     0,     0,
   312,   298,   299,   300,   301,   302,  1877,   303,   304,   305,
   306,   307,   308,   309,   310,   311,     0,     0,     0,     0,
     0,   312,   298,   299,   300,   301,   302,  1878,   303,   304,
   305,   306,   307,   308,   309,   310,   311,     0,     0,     0,
     0,     0,   312,   298,   299,   300,   301,   302,  1879,   303,
   304,   305,   306,   307,   308,   309,   310,   311,     0,     0,
     0,     0,     0,   312,   298,   299,   300,   301,   302,  1880,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     0,     0,     0,     0,   312,   298,   299,   300,   301,   302,
  1881,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     0,     0,     0,     0,     0,   312,   298,   299,   300,   301,
   302,  1882,   303,   304,   305,   306,   307,   308,   309,   310,
   311,     0,     0,     0,     0,     0,   312,   298,   299,   300,
   301,   302,  1906,   303,   304,   305,   306,   307,   308,   309,
   310,   311,     0,     0,     0,     0,     0,   312,   298,   299,
   300,   301,   302,  1907,   303,   304,   305,   306,   307,   308,
   309,   310,   311,     0,     0,     0,     0,     0,   312,   298,
   299,   300,   301,   302,  1908,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
   298,   299,   300,   301,   302,  1909,   303,   304,   305,   306,
   307,   308,   309,   310,   311,     0,     0,     0,     0,     0,
   312,   298,   299,   300,   301,   302,  1910,   303,   304,   305,
   306,   307,   308,   309,   310,   311,     0,     0,     0,     0,
     0,   312,   298,   299,   300,   301,   302,  1911,   303,   304,
   305,   306,   307,   308,   309,   310,   311,     0,     0,     0,
     0,     0,   312,   298,   299,   300,   301,   302,  1912,   303,
   304,   305,   306,   307,   308,   309,   310,   311,     0,     0,
     0,     0,     0,   312,   298,   299,   300,   301,   302,  1913,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     0,     0,     0,     0,   312,   298,   299,   300,   301,   302,
  1914,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     0,     0,     0,     0,     0,   312,   298,   299,   300,   301,
   302,  1915,   303,   304,   305,   306,   307,   308,   309,   310,
   311,     0,     0,     0,     0,     0,   312,   298,   299,   300,
   301,   302,  1916,   303,   304,   305,   306,   307,   308,   309,
   310,   311,     0,     0,     0,     0,     0,   312,   298,   299,
   300,   301,   302,  1917,   303,   304,   305,   306,   307,   308,
   309,   310,   311,     0,     0,     0,     0,     0,   312,   298,
   299,   300,   301,   302,  1918,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
   298,   299,   300,   301,   302,  1919,   303,   304,   305,   306,
   307,   308,   309,   310,   311,     0,     0,     0,     0,     0,
   312,   298,   299,   300,   301,   302,  1920,   303,   304,   305,
   306,   307,   308,   309,   310,   311,     0,     0,     0,     0,
     0,   312,   298,   299,   300,   301,   302,  1950,   303,   304,
   305,   306,   307,   308,   309,   310,   311,     0,     0,     0,
     0,     0,   312,   298,   299,   300,   301,   302,  1951,   303,
   304,   305,   306,   307,   308,   309,   310,   311,     0,     0,
     0,     0,     0,   312,   298,   299,   300,   301,   302,  1952,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     0,     0,     0,     0,   312,   298,   299,   300,   301,   302,
  1953,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     0,     0,     0,     0,     0,   312,   298,   299,   300,   301,
   302,  1954,   303,   304,   305,   306,   307,   308,   309,   310,
   311,     0,     0,     0,     0,     0,   312,   298,   299,   300,
   301,   302,  1955,   303,   304,   305,   306,   307,   308,   309,
   310,   311,     0,     0,     0,     0,     0,   312,   298,   299,
   300,   301,   302,  1956,   303,   304,   305,   306,   307,   308,
   309,   310,   311,     0,     0,     0,     0,     0,   312,   298,
   299,   300,   301,   302,  1957,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
   298,   299,   300,   301,   302,  1958,   303,   304,   305,   306,
   307,   308,   309,   310,   311,     0,     0,     0,     0,     0,
   312,   298,   299,   300,   301,   302,  1959,   303,   304,   305,
   306,   307,   308,   309,   310,   311,     0,     0,     0,     0,
     0,   312,   298,   299,   300,   301,   302,  1960,   303,   304,
   305,   306,   307,   308,   309,   310,   311,     0,     0,     0,
     0,     0,   312,   298,   299,   300,   301,   302,  1961,   303,
   304,   305,   306,   307,   308,   309,   310,   311,     0,     0,
     0,     0,     0,   312,   298,   299,   300,   301,   302,  1962,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     0,     0,     0,     0,   312,   298,   299,   300,   301,   302,
  1963,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     0,     0,     0,     0,     0,   312,   298,   299,   300,   301,
   302,  1964,   303,   304,   305,   306,   307,   308,   309,   310,
   311,     0,     0,     0,     0,     0,   312,   298,   299,   300,
   301,   302,  1994,   303,   304,   305,   306,   307,   308,   309,
   310,   311,     0,     0,     0,     0,     0,   312,   298,   299,
   300,   301,   302,  1995,   303,   304,   305,   306,   307,   308,
   309,   310,   311,     0,     0,     0,     0,     0,   312,   298,
   299,   300,   301,   302,  1996,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
   298,   299,   300,   301,   302,  1997,   303,   304,   305,   306,
   307,   308,   309,   310,   311,     0,     0,     0,     0,     0,
   312,   298,   299,   300,   301,   302,  1998,   303,   304,   305,
   306,   307,   308,   309,   310,   311,     0,     0,     0,     0,
     0,   312,   298,   299,   300,   301,   302,  1999,   303,   304,
   305,   306,   307,   308,   309,   310,   311,     0,     0,     0,
     0,     0,   312,   298,   299,   300,   301,   302,  2000,   303,
   304,   305,   306,   307,   308,   309,   310,   311,     0,     0,
     0,     0,     0,   312,   298,   299,   300,   301,   302,  2001,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     0,     0,     0,     0,   312,   298,   299,   300,   301,   302,
  2002,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     0,     0,     0,     0,     0,   312,   298,   299,   300,   301,
   302,  2025,   303,   304,   305,   306,   307,   308,   309,   310,
   311,     0,     0,     0,     0,     0,   312,   298,   299,   300,
   301,   302,  2026,   303,   304,   305,   306,   307,   308,   309,
   310,   311,     0,     0,     0,     0,     0,   312,   298,   299,
   300,   301,   302,  2027,   303,   304,   305,   306,   307,   308,
   309,   310,   311,     0,     0,     0,     0,     0,   312,   298,
   299,   300,   301,   302,  2028,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
   298,   299,   300,   301,   302,  2029,   303,   304,   305,   306,
   307,   308,   309,   310,   311,     0,     0,     0,     0,     0,
   312,   298,   299,   300,   301,   302,  2030,   303,   304,   305,
   306,   307,   308,   309,   310,   311,     0,     0,     0,     0,
     0,   312,   298,   299,   300,   301,   302,  2031,   303,   304,
   305,   306,   307,   308,   309,   310,   311,     0,     0,     0,
     0,     0,   312,   298,   299,   300,   301,   302,  2032,   303,
   304,   305,   306,   307,   308,   309,   310,   311,     0,     0,
     0,     0,     0,   312,   298,   299,   300,   301,   302,  2033,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     0,     0,     0,     0,   312,   298,   299,   300,   301,   302,
  2067,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     0,     0,     0,     0,     0,   312,   298,   299,   300,   301,
   302,  2068,   303,   304,   305,   306,   307,   308,   309,   310,
   311,     0,     0,     0,     0,     0,   312,   298,   299,   300,
   301,   302,  2069,   303,   304,   305,   306,   307,   308,   309,
   310,   311,     0,     0,     0,     0,     0,   312,   298,   299,
   300,   301,   302,  2070,   303,   304,   305,   306,   307,   308,
   309,   310,   311,     0,     0,     0,     0,     0,   312,   298,
   299,   300,   301,   302,  2071,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
   298,   299,   300,   301,   302,  2072,   303,   304,   305,   306,
   307,   308,   309,   310,   311,     0,     0,     0,     0,     0,
   312,   298,   299,   300,   301,   302,  2073,   303,   304,   305,
   306,   307,   308,   309,   310,   311,     0,     0,     0,     0,
     0,   312,   298,   299,   300,   301,   302,  2074,   303,   304,
   305,   306,   307,   308,   309,   310,   311,     0,     0,     0,
     0,     0,   312,   298,   299,   300,   301,   302,  2075,   303,
   304,   305,   306,   307,   308,   309,   310,   311,     0,     0,
     0,     0,     0,   312,   298,   299,   300,   301,   302,  2097,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     0,     0,     0,     0,   312,   298,   299,   300,   301,   302,
  2098,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     0,     0,     0,     0,     0,   312,   298,   299,   300,   301,
   302,  2099,   303,   304,   305,   306,   307,   308,   309,   310,
   311,     0,     0,     0,     0,     0,   312,   298,   299,   300,
   301,   302,  2100,   303,   304,   305,   306,   307,   308,   309,
   310,   311,     0,     0,     0,     0,     0,   312,   298,   299,
   300,   301,   302,  2101,   303,   304,   305,   306,   307,   308,
   309,   310,   311,     0,     0,     0,     0,     0,   312,   298,
   299,   300,   301,   302,  2102,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
   298,   299,   300,   301,   302,  2115,   303,   304,   305,   306,
   307,   308,   309,   310,   311,     0,     0,     0,     0,     0,
   312,   298,   299,   300,   301,   302,  2116,   303,   304,   305,
   306,   307,   308,   309,   310,   311,     0,     0,     0,     0,
     0,   312,   298,   299,   300,   301,   302,  2117,   303,   304,
   305,   306,   307,   308,   309,   310,   311,     0,     0,     0,
     0,     0,   312,   298,   299,   300,   301,   302,  2118,   303,
   304,   305,   306,   307,   308,   309,   310,   311,     0,     0,
     0,     0,     0,   312,   298,   299,   300,   301,   302,  2119,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     0,     0,     0,     0,   312,   298,   299,   300,   301,   302,
  2120,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     0,     0,     0,     0,     0,   312,   298,   299,   300,   301,
   302,  2136,   303,   304,   305,   306,   307,   308,   309,   310,
   311,     0,     0,     0,     0,     0,   312,   298,   299,   300,
   301,   302,  2137,   303,   304,   305,   306,   307,   308,   309,
   310,   311,     0,     0,     0,     0,     0,   312,   298,   299,
   300,   301,   302,  2138,   303,   304,   305,   306,   307,   308,
   309,   310,   311,     0,     0,     0,     0,     0,   312,   298,
   299,   300,   301,   302,  2139,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
   298,   299,   300,   301,   302,  2140,   303,   304,   305,   306,
   307,   308,   309,   310,   311,     0,     0,     0,     0,     0,
   312,   298,   299,   300,   301,   302,  2141,   303,   304,   305,
   306,   307,   308,   309,   310,   311,     0,     0,     0,     0,
     0,   312,   298,   299,   300,   301,   302,  2160,   303,   304,
   305,   306,   307,   308,   309,   310,   311,     0,     0,     0,
     0,     0,   312,   298,   299,   300,   301,   302,  2161,   303,
   304,   305,   306,   307,   308,   309,   310,   311,     0,     0,
     0,     0,     0,   312,   298,   299,   300,   301,   302,  2162,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     0,     0,     0,     0,   312,   298,   299,   300,   301,   302,
  2172,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     0,     0,     0,     0,     0,   312,   298,   299,   300,   301,
   302,  2173,   303,   304,   305,   306,   307,   308,   309,   310,
   311,     0,     0,     0,     0,     0,   312,   298,   299,   300,
   301,   302,  2174,   303,   304,   305,   306,   307,   308,   309,
   310,   311,     0,     0,     0,     0,     0,   312,   298,   299,
   300,   301,   302,  2187,   303,   304,   305,   306,   307,   308,
   309,   310,   311,     0,     0,     0,     0,     0,   312,   298,
   299,   300,   301,   302,  2188,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
   298,   299,   300,   301,   302,  2189,   303,   304,   305,   306,
   307,   308,   309,   310,   311,     0,     0,     0,     0,     0,
   312,   298,   299,   300,   301,   302,  2205,   303,   304,   305,
   306,   307,   308,   309,   310,   311,     0,     0,     0,     0,
     0,   312,   298,   299,   300,   301,   302,  2206,   303,   304,
   305,   306,   307,   308,   309,   310,   311,     0,     0,     0,
     0,     0,   312,   298,   299,   300,   301,   302,  2207,   303,
   304,   305,   306,   307,   308,   309,   310,   311,     0,     0,
     0,     0,     0,   312,   298,   299,   300,   301,   302,  2211,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     0,     0,     0,     0,   312,   298,   299,   300,   301,   302,
  2212,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     0,     0,     0,     0,     0,   312,   298,   299,   300,   301,
   302,  2213,   303,   304,   305,   306,   307,   308,   309,   310,
   311,     0,     0,     0,     0,     0,   312,   298,   299,   300,
   301,   302,  2217,   303,   304,   305,   306,   307,   308,   309,
   310,   311,     0,     0,     0,     0,     0,   312,   298,   299,
   300,   301,   302,  2218,   303,   304,   305,   306,   307,   308,
   309,   310,   311,     0,     0,     0,     0,     0,   312,   298,
   299,   300,   301,   302,  2219,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
     0,     0,     0,   468,   298,   299,   300,   301,   302,     0,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     0,     0,     0,     0,   312,     0,     0,     0,   592,   298,
   299,   300,   301,   302,     0,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
     0,     0,     0,   649,   298,   299,   300,   301,   302,     0,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     0,     0,     0,     0,   312,     0,     0,     0,   651,   298,
   299,   300,   301,   302,     0,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
     0,     0,     0,   653,   298,   299,   300,   301,   302,     0,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     0,     0,     0,     0,   312,     0,     0,     0,   655,   298,
   299,   300,   301,   302,     0,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
     0,     0,     0,   657,   298,   299,   300,   301,   302,     0,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     0,     0,     0,     0,   312,     0,     0,     0,   659,   298,
   299,   300,   301,   302,     0,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
     0,     0,     0,   661,   298,   299,   300,   301,   302,     0,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     0,     0,     0,     0,   312,     0,     0,     0,   663,   298,
   299,   300,   301,   302,     0,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
     0,     0,     0,   665,   298,   299,   300,   301,   302,     0,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     0,     0,     0,     0,   312,     0,     0,     0,   667,   298,
   299,   300,   301,   302,     0,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
     0,     0,     0,   669,   298,   299,   300,   301,   302,     0,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     0,     0,     0,     0,   312,     0,     0,     0,   673,   298,
   299,   300,   301,   302,     0,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
     0,     0,     0,   675,   298,   299,   300,   301,   302,     0,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     0,     0,     0,     0,   312,     0,     0,     0,   677,   298,
   299,   300,   301,   302,     0,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
     0,     0,     0,   679,   298,   299,   300,   301,   302,     0,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     0,     0,     0,     0,   312,     0,     0,     0,   681,   298,
   299,   300,   301,   302,     0,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
     0,     0,     0,   683,   298,   299,   300,   301,   302,     0,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     0,     0,     0,     0,   312,     0,     0,     0,   753,   298,
   299,   300,   301,   302,     0,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
     0,     0,     0,   981,   298,   299,   300,   301,   302,     0,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     0,     0,     0,     0,   312,     0,     0,     0,   983,   298,
   299,   300,   301,   302,     0,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
     0,     0,     0,   985,   298,   299,   300,   301,   302,     0,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     0,     0,     0,     0,   312,     0,     0,     0,   987,   298,
   299,   300,   301,   302,     0,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
     0,     0,     0,   988,   298,   299,   300,   301,   302,     0,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     0,     0,     0,     0,   312,     0,     0,     0,  1125,   298,
   299,   300,   301,   302,     0,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
     0,   462,   298,   299,   300,   301,   302,     0,   303,   304,
   305,   306,   307,   308,   309,   310,   311,     0,     0,     0,
     0,     0,   312,     0,   492,   298,   299,   300,   301,   302,
     0,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     0,     0,     0,     0,     0,   312,     0,   493,   298,   299,
   300,   301,   302,     0,   303,   304,   305,   306,   307,   308,
   309,   310,   311,     0,     0,     0,     0,     0,   312,     0,
   494,   298,   299,   300,   301,   302,     0,   303,   304,   305,
   306,   307,   308,   309,   310,   311,     0,     0,     0,     0,
     0,   312,     0,   496,   298,   299,   300,   301,   302,     0,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     0,     0,     0,     0,   312,     0,   498,   298,   299,   300,
   301,   302,     0,   303,   304,   305,   306,   307,   308,   309,
   310,   311,     0,     0,     0,     0,     0,   312,     0,   499,
   298,   299,   300,   301,   302,     0,   303,   304,   305,   306,
   307,   308,   309,   310,   311,     0,     0,     0,     0,     0,
   312,     0,   506,   298,   299,   300,   301,   302,     0,   303,
   304,   305,   306,   307,   308,   309,   310,   311,     0,     0,
     0,     0,     0,   312,     0,   544,   298,   299,   300,   301,
   302,     0,   303,   304,   305,   306,   307,   308,   309,   310,
   311,     0,     0,     0,     0,     0,   312,     0,   545,   298,
   299,   300,   301,   302,     0,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
     0,   548,   298,   299,   300,   301,   302,     0,   303,   304,
   305,   306,   307,   308,   309,   310,   311,     0,     0,     0,
     0,     0,   312,     0,   554,   298,   299,   300,   301,   302,
     0,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     0,     0,     0,     0,     0,   312,     0,   648,   298,   299,
   300,   301,   302,     0,   303,   304,   305,   306,   307,   308,
   309,   310,   311,     0,     0,     0,     0,     0,   312,     0,
   650,   298,   299,   300,   301,   302,     0,   303,   304,   305,
   306,   307,   308,   309,   310,   311,     0,     0,     0,     0,
     0,   312,     0,   652,   298,   299,   300,   301,   302,     0,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     0,     0,     0,     0,   312,     0,   654,   298,   299,   300,
   301,   302,     0,   303,   304,   305,   306,   307,   308,   309,
   310,   311,     0,     0,     0,     0,     0,   312,     0,   656,
   298,   299,   300,   301,   302,     0,   303,   304,   305,   306,
   307,   308,   309,   310,   311,     0,     0,     0,     0,     0,
   312,     0,   658,   298,   299,   300,   301,   302,     0,   303,
   304,   305,   306,   307,   308,   309,   310,   311,     0,     0,
     0,     0,     0,   312,     0,   660,   298,   299,   300,   301,
   302,     0,   303,   304,   305,   306,   307,   308,   309,   310,
   311,     0,     0,     0,     0,     0,   312,     0,   662,   298,
   299,   300,   301,   302,     0,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
     0,   664,   298,   299,   300,   301,   302,     0,   303,   304,
   305,   306,   307,   308,   309,   310,   311,     0,     0,     0,
     0,     0,   312,     0,   666,   298,   299,   300,   301,   302,
     0,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     0,     0,     0,     0,     0,   312,     0,   668,   298,   299,
   300,   301,   302,     0,   303,   304,   305,   306,   307,   308,
   309,   310,   311,     0,     0,     0,     0,     0,   312,     0,
   672,   298,   299,   300,   301,   302,     0,   303,   304,   305,
   306,   307,   308,   309,   310,   311,     0,     0,     0,     0,
     0,   312,     0,   674,   298,   299,   300,   301,   302,     0,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     0,     0,     0,     0,   312,     0,   676,   298,   299,   300,
   301,   302,     0,   303,   304,   305,   306,   307,   308,   309,
   310,   311,     0,     0,     0,     0,     0,   312,     0,   678,
   298,   299,   300,   301,   302,     0,   303,   304,   305,   306,
   307,   308,   309,   310,   311,     0,     0,     0,     0,     0,
   312,     0,   680,   298,   299,   300,   301,   302,     0,   303,
   304,   305,   306,   307,   308,   309,   310,   311,     0,     0,
     0,     0,     0,   312,     0,   682,   298,   299,   300,   301,
   302,     0,   303,   304,   305,   306,   307,   308,   309,   310,
   311,     0,     0,     0,     0,     0,   312,     0,   715,   298,
   299,   300,   301,   302,     0,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
     0,   717,   298,   299,   300,   301,   302,     0,   303,   304,
   305,   306,   307,   308,   309,   310,   311,     0,     0,     0,
     0,     0,   312,     0,   729,   298,   299,   300,   301,   302,
     0,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     0,     0,     0,     0,     0,   312,     0,   730,   298,   299,
   300,   301,   302,     0,   303,   304,   305,   306,   307,   308,
   309,   310,   311,     0,     0,     0,     0,     0,   312,     0,
   734,   298,   299,   300,   301,   302,     0,   303,   304,   305,
   306,   307,   308,   309,   310,   311,     0,     0,     0,     0,
     0,   312,     0,   735,   298,   299,   300,   301,   302,     0,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     0,     0,     0,     0,   312,     0,   736,   298,   299,   300,
   301,   302,     0,   303,   304,   305,   306,   307,   308,   309,
   310,   311,     0,     0,     0,     0,     0,   312,     0,   737,
   298,   299,   300,   301,   302,     0,   303,   304,   305,   306,
   307,   308,   309,   310,   311,     0,     0,     0,     0,     0,
   312,     0,   738,   298,   299,   300,   301,   302,     0,   303,
   304,   305,   306,   307,   308,   309,   310,   311,     0,     0,
     0,     0,     0,   312,     0,   759,   298,   299,   300,   301,
   302,     0,   303,   304,   305,   306,   307,   308,   309,   310,
   311,     0,     0,     0,     0,     0,   312,     0,   766,   298,
   299,   300,   301,   302,     0,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
     0,   980,   298,   299,   300,   301,   302,     0,   303,   304,
   305,   306,   307,   308,   309,   310,   311,     0,     0,     0,
     0,     0,   312,     0,   982,   298,   299,   300,   301,   302,
     0,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     0,     0,     0,     0,     0,   312,     0,   984,   298,   299,
   300,   301,   302,     0,   303,   304,   305,   306,   307,   308,
   309,   310,   311,     0,     0,     0,     0,     0,   312,     0,
   986,   298,   299,   300,   301,   302,     0,   303,   304,   305,
   306,   307,   308,   309,   310,   311,     0,     0,     0,     0,
     0,   312,     0,  1048,   298,   299,   300,   301,   302,     0,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     0,     0,     0,     0,   312,     0,  1148,   298,   299,   300,
   301,   302,     0,   303,   304,   305,   306,   307,   308,   309,
   310,   311,     0,     0,     0,     0,     0,   312,     0,  1175,
   298,   299,   300,   301,   302,     0,   303,   304,   305,   306,
   307,   308,   309,   310,   311,     0,     0,     0,     0,     0,
   312,     0,  1276,   298,   299,   300,   301,   302,     0,   303,
   304,   305,   306,   307,   308,   309,   310,   311,     0,     0,
     0,     0,     0,   312,     0,  1280,   298,   299,   300,   301,
   302,     0,   303,   304,   305,   306,   307,   308,   309,   310,
   311,     0,     0,     0,     0,     0,   312,     0,  1282,   298,
   299,   300,   301,   302,     0,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
     0,  1425,   298,   299,   300,   301,   302,     0,   303,   304,
   305,   306,   307,   308,   309,   310,   311,     0,     0,     0,
     0,     0,   312,     0,  1427,   298,   299,   300,   301,   302,
     0,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     0,     0,     0,     0,     0,   312,     0,  1429,   298,   299,
   300,   301,   302,     0,   303,   304,   305,   306,   307,   308,
   309,   310,   311,     0,     0,     0,     0,     0,   312,     0,
  1431,   298,   299,   300,   301,   302,     0,   303,   304,   305,
   306,   307,   308,   309,   310,   311,     0,     0,     0,     0,
     0,   312,     0,  1432,   298,   299,   300,   301,   302,     0,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     0,     0,     0,     0,   312,     0,  1433,   298,   299,   300,
   301,   302,     0,   303,   304,   305,   306,   307,   308,   309,
   310,   311,     0,     0,     0,     0,     0,   312,     0,  1455,
   298,   299,   300,   301,   302,     0,   303,   304,   305,   306,
   307,   308,   309,   310,   311,     0,     0,     0,     0,     0,
   312,     0,  1555,   298,   299,   300,   301,   302,     0,   303,
   304,   305,   306,   307,   308,   309,   310,   311,     0,     0,
     0,     0,     0,   312,     0,  1702,   298,   299,   300,   301,
   302,     0,   303,   304,   305,   306,   307,   308,   309,   310,
   311,     0,     0,     0,     0,     0,   312,     0,  1703,   298,
   299,   300,   301,   302,     0,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
     0,  1704,   298,   299,   300,   301,   302,     0,   303,   304,
   305,   306,   307,   308,   309,   310,   311,     0,     0,     0,
     0,     0,   312,     0,  1865,   298,   299,   300,   301,   302,
     0,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     0,     0,     0,     0,     0,   312,     0,  1866,   298,   299,
   300,   301,   302,     0,   303,   304,   305,   306,   307,   308,
   309,   310,   311,     0,     0,     0,     0,     0,   312,     0,
  1867,   298,   299,   300,   301,   302,     0,   303,   304,   305,
   306,   307,   308,   309,   310,   311,     0,     0,     0,     0,
     0,   312,     0,  1988,   298,   299,   300,   301,   302,     0,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     0,     0,     0,     0,   312,     0,  1989,   298,   299,   300,
   301,   302,     0,   303,   304,   305,   306,   307,   308,   309,
   310,   311,     0,     0,     0,     0,     0,   312,     0,  1990,
   298,   299,   300,   301,   302,     0,   303,   304,   305,   306,
   307,   308,   309,   310,   311,     0,     0,     0,     0,     0,
   312,     0,  1991,   298,   299,   300,   301,   302,     0,   303,
   304,   305,   306,   307,   308,   309,   310,   311,     0,     0,
     0,     0,     0,   312,     0,  1992,   298,   299,   300,   301,
   302,     0,   303,   304,   305,   306,   307,   308,   309,   310,
   311,     0,     0,     0,     0,     0,   312,     0,  1993,   298,
   299,   300,   301,   302,     0,   303,   304,   305,   306,   307,
   308,   309,   310,   311,     0,     0,     0,     0,     0,   312,
     0,  2103,   298,   299,   300,   301,   302,     0,   303,   304,
   305,   306,   307,   308,   309,   310,   311,     0,     0,     0,
     0,     0,   312,     0,  2104,   298,   299,   300,   301,   302,
     0,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     0,     0,     0,     0,     0,   312,     0,  2105,   298,   299,
   300,   301,   302,     0,   303,   304,   305,   306,   307,   308,
   309,   310,   311,     0,     0,     0,     0,     0,   312,     0,
  2163,   298,   299,   300,   301,   302,     0,   303,   304,   305,
   306,   307,   308,   309,   310,   311,     0,     0,     0,     0,
     0,   312,     0,  2164,   298,   299,   300,   301,   302,     0,
   303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     0,     0,     0,     0,   312,     0,  2165,   298,   299,   300,
   301,   302,     0,   303,   304,   305,   306,   307,   308,   309,
   310,   311,     0,     0,     0,     0,     0,   312,     0,  2223,
   298,   299,   300,   301,   302,     0,   303,   304,   305,   306,
   307,   308,   309,   310,   311,     0,     0,     0,     0,     0,
   312,     0,  2224,   298,   299,   300,   301,   302,     0,   303,
   304,   305,   306,   307,   308,   309,   310,   311,     0,     0,
     0,     0,     0,   312,     0,  2225,   298,   299,   300,   301,
   302,     0,   303,   304,   305,   306,   307,   308,   309,   310,
   311,     0,     0,     0,     0,     0,   312
};

static const short yycheck[] = {    23,
    90,  1066,    23,   350,   292,   325,     4,     4,   707,  1256,
  1075,     4,     7,    43,    44,     4,     4,  1082,     3,    64,
     6,   176,   282,   283,   284,   180,     7,    42,  1165,    38,
    39,    40,    41,    42,    43,    44,    45,    64,    47,     4,
    49,    50,    64,    52,    53,    65,     4,    82,    65,    65,
    70,    65,   101,    70,    70,     6,    70,    65,    65,   194,
    69,   290,    70,    70,  1333,   200,   183,   184,  1337,     4,
     5,   183,   184,     6,     7,   183,   184,   183,   184,   183,
   184,     6,   199,     5,   201,   183,   184,   199,    97,    98,
    99,   199,     6,   201,   200,   199,   325,   201,    49,    34,
    35,    36,   200,   127,   128,   129,   183,   184,   132,   133,
     7,   135,    34,    35,    36,   183,   184,   115,   142,   143,
   144,   164,   146,   200,   148,   149,   194,   151,     6,   183,
   184,   195,   200,  1270,   164,   199,   166,   183,   184,   104,
   105,   195,   172,   167,   168,   194,   104,   105,     6,   194,
   159,   183,   184,   199,    65,   854,   194,     6,   196,    70,
     7,   185,   186,   195,   188,   200,   190,   194,     6,   193,
   194,   491,     6,   200,   169,   170,   171,   172,   200,   194,
   468,   201,   502,     7,   201,   201,     6,   201,   169,   170,
   171,   172,   201,   201,   201,   190,   191,   183,   184,   184,
   190,   191,   200,   200,    44,   194,  1271,   200,   238,   469,
  1275,   235,   200,   196,   369,   198,   240,   241,   242,   243,
   244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
   254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
   264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
   274,   275,   276,   277,   278,   279,   280,   281,   183,   184,
   190,   191,   491,   195,    55,    56,   290,   199,   198,  1516,
   194,   292,  1519,   502,   298,   299,   300,   301,   302,   303,
   304,   305,   306,   307,   308,   309,   310,   311,   312,  1558,
   194,   190,   191,  1562,   318,    38,   320,   196,    41,   198,
   324,   325,  1001,   183,   184,   195,   330,   331,   332,   199,
   334,   335,   336,   337,   338,   339,   340,   347,   348,   199,
   183,   184,   169,   170,   171,   172,   183,   184,   352,   353,
   354,   195,   194,   357,   194,   199,   199,   183,   184,   194,
   200,   365,   199,   190,   191,   169,   170,   171,   172,   194,
   374,   198,   194,   199,  1419,  1420,  1421,  1422,   195,  1606,
    64,  1426,   199,  1610,   183,   184,   190,   191,   183,   184,
   183,   184,   195,   693,    38,     3,   199,    41,    42,    46,
   199,  1650,   190,   191,   199,  1654,   199,   194,   196,   196,
   198,   412,   185,   186,   187,   194,     3,     4,     6,     7,
   193,   721,     9,    10,    11,    12,    13,    14,    15,    16,
    17,    18,    19,    20,    21,    22,    23,    24,    25,    26,
    27,    28,    29,    30,    31,    32,   194,   194,   196,   749,
   750,   751,     8,   194,   694,   183,   184,   185,   186,   187,
   464,   194,    42,   190,   191,   193,   470,   468,   194,   196,
   196,   198,    38,     6,    42,    41,    42,    42,    44,  1524,
  1525,   194,   200,  1528,   693,   200,   200,   491,   697,    58,
    59,    60,    61,   194,    63,   196,   500,   194,   502,   196,
   504,   505,    41,    42,    42,    44,   510,     6,   194,   519,
   196,   194,   721,   196,     6,   194,   520,   521,   194,   194,
   196,    54,   194,   194,   196,   529,   134,   135,   136,   137,
   138,   139,   140,   141,   194,   539,   196,   194,     4,   196,
   749,   750,   751,   194,     6,   196,   550,     4,   552,   553,
   179,   180,   181,   182,   183,   184,   185,   186,   187,   194,
  1239,   196,   194,   194,   193,   196,   194,     3,   196,  1614,
     5,   871,   119,   120,   121,   122,   123,    42,   846,   847,
   194,   194,   196,   196,   194,   194,   196,   196,   194,   194,
   196,   592,   199,     6,   201,   194,   183,   184,   199,   199,
   201,   201,   189,   199,     5,   201,     8,   194,   194,   199,
   197,   201,     6,   200,   199,   194,   201,   173,   174,   175,
   176,   177,   194,   179,   180,   181,   182,   183,   184,   185,
   186,   187,   199,     4,   201,   194,   199,   193,   201,   200,
   173,   174,   175,   176,   177,   201,   179,   180,   181,   182,
   183,   184,   185,   186,   187,  1700,   199,   199,   201,   201,
   193,     6,   871,   199,   196,   201,   670,   671,   199,   199,
   201,   201,   199,   199,   201,   201,   199,   199,   201,   201,
   684,   685,   686,   687,   688,   689,   690,     8,   199,   693,
   201,   194,   199,   697,   201,   199,   700,   201,   199,   199,
   201,   201,   712,   200,   199,   709,   201,  1034,   199,   199,
   201,   201,   199,   194,   201,  1760,   200,   721,   722,   199,
   199,   201,   201,   199,   199,   201,   201,   199,     6,   201,
   800,   199,   199,   201,   201,   198,   746,   747,   748,   199,
   199,   201,   201,   194,   194,   749,   750,   751,   194,   194,
   754,   755,   200,   993,   758,   199,     6,   201,   199,   107,
   201,   771,   200,   200,     6,   769,   770,   200,   194,   194,
   780,   173,   174,   175,   176,   177,   194,   179,   180,   181,
   182,   183,   184,   185,   186,   187,   194,   194,   194,   194,
  1030,   193,     5,   195,   194,   194,   194,   194,   194,   194,
   804,   805,   806,   807,   808,   809,   810,   811,   812,   813,
   814,   815,   816,   817,   818,   819,   820,   821,   822,   823,
   824,   825,   826,   827,   828,   829,   194,   194,   173,   174,
   175,   176,   177,     6,   179,   180,   181,   182,   183,   184,
   185,   186,   187,   194,   194,   194,   847,   194,   193,   195,
   194,   855,   173,   174,   175,   176,   177,   194,   179,   180,
   181,   182,   183,   184,   185,   186,   187,   871,   194,   873,
   194,   875,   193,   176,   177,   194,   179,   180,   181,   182,
   183,   184,   185,   186,   187,   889,   890,   891,   194,   194,
   193,   199,   194,   194,   194,   194,   194,     4,  1943,   914,
   193,     7,   199,   198,     7,   909,   910,   911,     7,     7,
   195,     7,     7,   102,   104,     5,   200,   165,     5,     5,
     5,     5,  1249,   173,   174,   175,   176,   177,     5,   179,
   180,   181,   182,   183,   184,   185,   186,   187,     5,     5,
     5,     5,     5,   193,     5,     5,     3,     4,   152,     5,
     5,   952,     9,    10,    11,    12,    13,    14,    15,    16,
    17,    18,    19,    20,    21,    22,    23,    24,    25,    26,
    27,    28,    29,    30,    31,    32,   175,   176,   177,     6,
   179,   180,   181,   182,   183,   184,   185,   186,   187,     5,
   994,     5,     5,     5,   193,     5,  1006,     5,     5,     5,
   173,   174,   175,   176,   177,     5,   179,   180,   181,   182,
   183,   184,   185,   186,   187,     5,  1020,  1021,  1088,     5,
   193,     5,     3,     5,   199,  1035,  1030,  1037,     5,  1039,
     6,     5,   195,     6,     4,     6,   198,   201,     7,     7,
  1044,  1045,  1057,     7,     7,     7,     7,     7,   201,   200,
   200,     7,  1056,     7,   194,  1059,     7,     6,   166,   198,
     5,   199,   199,   199,   199,  1069,   199,   199,   199,   199,
   199,   199,  1076,  1077,  1078,   199,   199,   199,   199,  1083,
   199,   199,   199,  1087,   199,   199,   199,  1091,  1092,  1093,
  1094,  1095,  1096,  1097,  1098,  1099,  1100,  1101,  1102,  1103,
  1104,  1105,  1106,  1107,  1108,  1109,  1110,  1111,  1112,  1113,
  1114,  1115,  1116,     6,     4,     6,   199,   199,   199,   199,
   199,   199,   195,   199,   199,   199,   183,   184,  1132,   199,
   199,     6,   189,     6,   196,   194,   194,   194,     7,     6,
   197,   194,   194,   200,   194,  1149,   173,   174,   175,   176,
   177,   194,   179,   180,   181,   182,   183,   184,   185,   186,
   187,   194,  1177,   194,     3,     4,   193,  1171,   194,  1173,
     9,    10,    11,    12,    13,    14,    15,    16,    17,    18,
    19,    20,    21,    22,    23,    24,    25,    26,    27,    28,
    29,    30,    31,    32,     3,     4,   194,   194,   194,   194,
     9,    10,    11,    12,    13,    14,    15,    16,    17,    18,
    19,    20,    21,    22,    23,    24,    25,    26,    27,    28,
    29,    30,    31,    32,   173,   174,   175,   176,   177,   194,
   179,   180,   181,   182,   183,   184,   185,   186,   187,   194,
   197,     6,  1252,  1253,   193,  1255,   194,   194,  1252,  1253,
   194,  1255,   194,  1257,  1258,   194,   194,   194,   194,   194,
  1264,   194,   194,     7,     7,     7,   200,     7,     7,  1273,
     7,     7,     7,     7,     7,     7,     7,  1281,     4,     6,
   162,     4,  1286,     7,     3,  1289,     7,  1291,  1292,  1293,
  1294,  1295,  1296,  1297,  1298,  1299,  1300,  1301,  1302,  1303,
  1304,  1305,  1306,  1307,  1308,  1309,  1310,  1311,  1312,  1313,
  1314,  1315,  1316,     3,  1554,  1325,     3,   185,  1322,     3,
  1324,  1325,  1326,     3,     3,     3,     3,   173,   174,   175,
   176,   177,  1347,   179,   180,   181,   182,   183,   184,   185,
   186,   187,     3,     3,   183,   184,     3,   193,     3,   195,
   189,     3,     3,   199,     4,   194,     5,     5,   197,     3,
     3,   200,   195,   195,     6,   200,     7,   198,     6,     6,
     6,     6,     6,     6,   183,   184,     6,   200,   103,   199,
   189,   199,   195,   199,   195,   194,     6,   199,   195,   199,
   198,   200,   195,   199,   199,   195,   195,   199,  1402,   195,
  1404,   199,   199,  1418,   199,  1645,  1410,  1647,   173,   174,
   175,   176,   177,     6,   179,   180,   181,   182,   183,   184,
   185,   186,   187,   199,   199,   199,   199,   199,   193,   199,
  1434,  1435,  1436,  1437,  1438,  1439,  1440,  1441,  1442,  1443,
  1444,  1445,  1446,  1447,  1448,  1449,  1450,  1451,  1452,  1453,
  1454,   199,  1456,   199,   199,   173,   174,   175,   176,   177,
  1475,   179,   180,   181,   182,   183,   184,   185,   186,   187,
     6,     4,     6,   185,     6,   193,     6,   197,     6,     3,
     4,   199,     7,  1723,     6,     9,    10,    11,    12,    13,
    14,    15,    16,    17,    18,    19,    20,    21,    22,    23,
    24,    25,    26,    27,    28,    29,    30,    31,    32,   103,
     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,
     6,     6,     6,     6,     3,     6,  1530,  1531,  1532,  1533,
  1534,  1535,  1536,  1537,  1538,  1539,  1540,  1541,  1542,  1543,
  1544,  1545,  1546,  1547,  1548,  1549,  1550,  1551,  1552,  1553,
     3,     4,  1567,     3,     6,     6,     9,    10,    11,    12,
    13,    14,    15,    16,    17,    18,    19,    20,    21,    22,
    23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
   173,   174,   175,   176,   177,     6,   179,   180,   181,   182,
   183,   184,   185,   186,   187,     3,     6,     3,  1613,     6,
   193,     6,     3,     6,     3,     3,     3,     7,  1612,   198,
     6,     6,     4,     6,  1618,     6,  1620,     6,  1622,   197,
  1624,  1625,  1626,  1627,  1628,  1629,  1630,  1631,  1632,  1633,
  1634,  1635,  1636,  1637,  1638,  1639,  1640,  1641,  1642,  1643,
  1644,     6,  1657,   200,   100,   201,   200,   200,   200,   195,
   199,   199,   199,   150,   195,   199,   199,   195,   155,   183,
   184,   105,   199,   103,   195,   189,     6,     6,   195,   195,
   194,     3,   195,     6,     3,     6,   200,   195,   199,   199,
   177,     6,   162,     6,     6,     6,   183,   184,     6,     6,
     3,     6,     6,  1697,  1698,     5,     5,   201,     6,   200,
   200,  1705,  1706,  1707,  1708,  1709,  1710,  1711,  1712,  1713,
  1714,  1715,  1716,  1717,  1718,  1719,  1720,  1721,  1722,   201,
     6,   199,   199,   199,   199,   195,   195,   199,   195,     6,
   183,   184,     6,   199,   199,     6,   189,     6,     6,     6,
     6,   194,     6,     6,     6,     6,     6,   200,     6,     6,
     6,     5,  1756,     5,   200,   200,   199,  1761,  1762,  1763,
  1764,  1765,  1766,  1767,  1768,  1769,  1770,  1771,  1772,  1773,
  1774,  1775,  1776,  1777,  1778,  1779,  1780,  1781,   173,   174,
   175,   176,   177,   199,   179,   180,   181,   182,   183,   184,
   185,   186,   187,   195,     6,     6,     6,   201,   193,   100,
   162,     6,     6,     5,     5,   199,     6,   195,     6,  1813,
   200,  1815,   199,  1817,   199,  1819,  1820,  1821,  1822,  1823,
  1824,  1825,  1826,  1827,  1828,  1829,  1830,  1831,  1832,  1833,
  1834,  1835,  1836,   173,   174,   175,   176,   177,   199,   179,
   180,   181,   182,   183,   184,   185,   186,   187,   200,   200,
   200,   199,   201,   193,   200,   200,   200,   199,   199,   195,
   195,     6,   200,   100,  1868,  1869,  1870,  1871,  1872,  1873,
  1874,  1875,  1876,  1877,  1878,  1879,  1880,  1881,  1882,     6,
     6,   201,     6,     6,     6,     6,     6,     6,   199,   201,
     6,     6,   167,   200,   199,     6,   168,   199,     6,  1903,
  1904,  1905,  1906,  1907,  1908,  1909,  1910,  1911,  1912,  1913,
  1914,  1915,  1916,  1917,  1918,  1919,  1920,   173,   174,   175,
   176,   177,   200,   179,   180,   181,   182,   183,   184,   185,
   186,   187,     6,     6,   199,     6,     6,   193,     6,     6,
  1944,   200,  1946,     6,  1948,   200,  1950,  1951,  1952,  1953,
  1954,  1955,  1956,  1957,  1958,  1959,  1960,  1961,  1962,  1963,
  1964,   173,   174,   175,   176,   177,   463,   179,   180,   181,
   182,   183,   184,   185,   186,   187,   199,   195,   199,   199,
   199,   193,     6,   200,   200,   200,   195,     6,     6,     6,
  1994,  1995,  1996,  1997,  1998,  1999,  2000,  2001,  2002,     0,
     6,   200,     6,   200,   200,   200,   200,   200,     6,     6,
   200,   200,   200,     6,     6,  2019,  2020,  2021,  2022,  2023,
  2024,  2025,  2026,  2027,  2028,  2029,  2030,  2031,  2032,  2033,
     6,    38,    39,    40,    41,    42,    43,    44,    45,   200,
    47,   200,    49,    50,   200,    52,    53,     6,     6,     6,
   200,  2055,   200,  2057,   200,  2059,     6,  2061,     6,  2063,
     6,  2065,    69,  2067,  2068,  2069,  2070,  2071,  2072,  2073,
  2074,  2075,     0,     7,     7,   594,     8,     7,  1050,   997,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    97,    98,    99,  2097,  2098,  2099,  2100,  2101,  2102,     8,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,  2115,  2116,  2117,  2118,  2119,  2120,  2121,  2122,  2123,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,  2136,  2137,  2138,  2139,  2140,  2141,  2142,    -1,
  2144,    -1,  2146,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,   159,    -1,    -1,    -1,  2160,  2161,  2162,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2172,  2173,
  2174,  2175,  2176,  2177,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,  2187,  2188,  2189,  2190,    -1,  2192,    -1,
  2194,    -1,    -1,    -1,   201,    -1,    -1,    -1,    -1,    -1,
    -1,  2205,  2206,  2207,    -1,    -1,    -1,  2211,  2212,  2213,
    -1,    -1,    -1,  2217,  2218,  2219,   713,   714,    -1,   716,
    -1,   718,   719,    -1,    -1,  2229,  2230,  2231,    -1,    -1,
    -1,    -1,    -1,    -1,  2238,    -1,  2240,    -1,  2242,    -1,
    -1,   173,   174,   175,   176,   177,    -1,   179,   180,   181,
   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,   756,
   757,   193,    -1,   760,   173,   174,   175,   176,   177,    -1,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
   777,   778,    -1,    -1,   193,    -1,   783,   784,    -1,    -1,
     3,     4,     5,   790,     7,   792,     9,    10,    11,    12,
    13,    14,    15,    16,    17,    18,    19,    20,    21,    22,
    23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
    -1,    34,    35,    36,     3,     4,     5,    -1,    -1,    -1,
     9,    10,    11,    12,    13,    14,    15,    16,    17,    18,
    19,    20,    21,    22,    23,    24,    25,    26,    27,    28,
    29,    30,    31,    32,    -1,    34,    35,    36,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,   864,    -1,   866,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   876,
   877,   878,    -1,    -1,   881,   882,   883,   884,   885,   886,
   887,    -1,     3,     4,    -1,    -1,    -1,    -1,     9,    10,
    11,    12,    13,    14,    15,    16,    17,    18,    19,    20,
    21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
    31,    32,     3,     4,    -1,    -1,    -1,    -1,     9,    10,
    11,    12,    13,    14,    15,    16,    17,    18,    19,    20,
    21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
    31,    32,     8,    -1,    -1,    -1,   169,   170,   171,   172,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,
   183,   184,    -1,    -1,    -1,    -1,   189,   190,   191,    -1,
    -1,   194,    -1,   196,    -1,   198,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,   992,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,   183,   184,    -1,    -1,    -1,    -1,
   189,     3,     4,    -1,    -1,   194,    -1,     9,    10,    11,
    12,    13,    14,    15,    16,    17,    18,    19,    20,    21,
    22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
    32,    -1,    -1,    -1,    -1,    38,    39,    40,    41,    42,
    43,    44,    45,    -1,    47,  1052,    49,    50,    -1,    52,
    53,    -1,    -1,  1060,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,   183,   184,    -1,    -1,    69,    -1,   189,    -1,
    -1,    -1,  1079,   194,    -1,    -1,    -1,   173,   174,   175,
   176,   177,    -1,   179,   180,   181,   182,   183,   184,   185,
   186,   187,   183,   184,    97,    98,    99,   193,   189,    -1,
    -1,    -1,    -1,   194,    -1,   201,    -1,   173,   174,   175,
   176,   177,    -1,   179,   180,   181,   182,   183,   184,   185,
   186,   187,   173,   174,   175,   176,   177,   193,   179,   180,
   181,   182,   183,   184,   185,   186,   187,   173,   174,   175,
   176,   177,   193,   179,   180,   181,   182,   183,   184,   185,
   186,   187,    -1,    -1,    -1,    -1,   159,   193,    -1,    -1,
     0,     1,    -1,     3,     4,   201,   173,   174,   175,   176,
   177,    -1,   179,   180,   181,   182,   183,   184,   185,   186,
   187,   183,   184,    -1,    -1,    -1,   193,   189,    -1,    -1,
    -1,    -1,   194,    33,   201,    -1,    -1,    37,    38,    39,
    40,    41,    42,    43,    44,    45,    -1,    47,    48,    49,
    50,    51,    52,    53,    -1,    -1,    -1,    57,    58,    59,
    60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
    38,    39,    40,    41,    42,    43,    44,    45,    -1,    47,
    -1,    49,    50,    -1,    52,    53,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,  1261,    -1,  1263,    97,    98,    99,
  1267,    69,    -1,    -1,   104,    -1,   106,    -1,   108,   109,
   110,   111,   112,   113,   114,    -1,  1283,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    97,
    98,    99,    -1,    -1,   134,   135,   136,   137,   138,   139,
   140,   141,    -1,    -1,   173,   174,   175,   176,   177,     4,
   179,   180,   181,   182,   183,   184,   185,   186,   187,   159,
   160,   161,    -1,   163,   193,    -1,    -1,    -1,    -1,    -1,
   199,    -1,   201,    -1,    -1,    -1,    -1,    -1,    33,    -1,
    -1,    -1,    37,    38,    39,    40,    41,    42,    43,    44,
    45,   159,    47,    48,    49,    50,    51,    52,    53,    -1,
    -1,    -1,    57,    58,    59,    60,    61,    62,    63,    -1,
    65,    66,    67,    68,    69,    -1,    -1,   173,   174,   175,
   176,   177,    -1,   179,   180,   181,   182,   183,   184,   185,
   186,   187,    -1,   201,    -1,    -1,    -1,   193,    -1,  1406,
    -1,    -1,    97,    98,    99,   201,    -1,  1414,  1415,   104,
    -1,   106,    -1,   108,   109,   110,   111,   112,   113,   114,
    71,    72,    73,    74,    75,    76,    77,    78,    79,    80,
    81,    82,    83,    84,    85,    86,    87,    88,    89,    90,
    91,    92,    93,    94,    95,    96,    -1,    -1,    -1,    -1,
    41,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,   159,    71,    72,    73,    74,    75,
    76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
    86,    87,    88,    89,    90,    91,    92,    93,    94,    95,
    96,    -1,   173,   174,   175,   176,   177,    -1,   179,   180,
   181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
    -1,  1518,   193,    -1,  1521,    -1,    -1,    -1,   199,    -1,
   201,    -1,    -1,    -1,    -1,   116,   117,   118,    -1,    -1,
    -1,    -1,    -1,   124,   125,   126,   127,   128,   129,   130,
   131,   132,   133,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
   201,   142,   143,   144,   145,   146,   147,   148,   149,   150,
   151,    -1,   153,   154,   155,   156,   157,   158,   173,   174,
   175,   176,   177,    -1,   179,   180,   181,   182,   183,   184,
   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,    -1,
    -1,    -1,    -1,    -1,   199,   201,   201,    -1,    -1,    -1,
  1607,    -1,    -1,   173,   174,   175,   176,   177,  1615,   179,
   180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
    -1,    -1,    -1,   193,    -1,    -1,   173,   174,   175,   176,
   177,   201,   179,   180,   181,   182,   183,   184,   185,   186,
   187,    -1,    -1,    -1,    -1,    -1,   193,    -1,    -1,   173,
   174,   175,   176,   177,   201,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
    -1,    -1,   173,   174,   175,   176,   177,   201,   179,   180,
   181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
    -1,    -1,   193,    -1,  1701,   173,   174,   175,   176,   177,
   201,   179,   180,   181,   182,   183,   184,   185,   186,   187,
    -1,    -1,    -1,    -1,    -1,   193,    -1,    -1,   173,   174,
   175,   176,   177,   201,   179,   180,   181,   182,   183,   184,
   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,   201,   173,   174,   175,
   176,   177,  1759,   179,   180,   181,   182,   183,   184,   185,
   186,   187,    -1,    -1,    -1,    -1,    -1,   193,    -1,    -1,
   173,   174,   175,   176,   177,   201,   179,   180,   181,   182,
   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
   193,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   201,   173,
   174,   175,   176,   177,  1811,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
    -1,    -1,   173,   174,   175,   176,   177,   201,   179,   180,
   181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
    -1,    -1,   193,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
   201,    -1,   173,   174,   175,   176,   177,  1864,   179,   180,
   181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
    -1,    -1,   193,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
   201,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
   173,   174,   175,   176,   177,  1902,   179,   180,   181,   182,
   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
   193,    -1,    -1,   173,   174,   175,   176,   177,   201,   179,
   180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
    -1,    -1,    -1,   193,    -1,    -1,   173,   174,   175,   176,
   177,   201,   179,   180,   181,   182,   183,   184,   185,   186,
   187,    -1,    -1,    -1,    -1,    -1,   193,    -1,    -1,   173,
   174,   175,   176,   177,   201,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
   173,   174,   175,   176,   177,   199,   179,   180,   181,   182,
   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
   193,   173,   174,   175,   176,   177,   199,   179,   180,   181,
   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
    -1,   193,   173,   174,   175,   176,   177,   199,   179,   180,
   181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
    -1,    -1,   193,   173,   174,   175,   176,   177,   199,   179,
   180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,   199,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,
   199,   179,   180,   181,   182,   183,   184,   185,   186,   187,
    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,
   177,   199,   179,   180,   181,   182,   183,   184,   185,   186,
   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,
   176,   177,   199,   179,   180,   181,   182,   183,   184,   185,
   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,
   175,   176,   177,   199,   179,   180,   181,   182,   183,   184,
   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,
   174,   175,   176,   177,   199,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
   173,   174,   175,   176,   177,   199,   179,   180,   181,   182,
   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
   193,   173,   174,   175,   176,   177,   199,   179,   180,   181,
   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
    -1,   193,   173,   174,   175,   176,   177,   199,   179,   180,
   181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
    -1,    -1,   193,   173,   174,   175,   176,   177,   199,   179,
   180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,   199,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,
   199,   179,   180,   181,   182,   183,   184,   185,   186,   187,
    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,
   177,   199,   179,   180,   181,   182,   183,   184,   185,   186,
   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,
   176,   177,   199,   179,   180,   181,   182,   183,   184,   185,
   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,
   175,   176,   177,   199,   179,   180,   181,   182,   183,   184,
   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,
   174,   175,   176,   177,   199,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
   173,   174,   175,   176,   177,   199,   179,   180,   181,   182,
   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
   193,   173,   174,   175,   176,   177,   199,   179,   180,   181,
   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
    -1,   193,   173,   174,   175,   176,   177,   199,   179,   180,
   181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
    -1,    -1,   193,   173,   174,   175,   176,   177,   199,   179,
   180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,   199,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,
   199,   179,   180,   181,   182,   183,   184,   185,   186,   187,
    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,
   177,   199,   179,   180,   181,   182,   183,   184,   185,   186,
   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,
   176,   177,   199,   179,   180,   181,   182,   183,   184,   185,
   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,
   175,   176,   177,   199,   179,   180,   181,   182,   183,   184,
   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,
   174,   175,   176,   177,   199,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
   173,   174,   175,   176,   177,   199,   179,   180,   181,   182,
   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
   193,   173,   174,   175,   176,   177,   199,   179,   180,   181,
   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
    -1,   193,   173,   174,   175,   176,   177,   199,   179,   180,
   181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
    -1,    -1,   193,   173,   174,   175,   176,   177,   199,   179,
   180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,   199,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,
   199,   179,   180,   181,   182,   183,   184,   185,   186,   187,
    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,
   177,   199,   179,   180,   181,   182,   183,   184,   185,   186,
   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,
   176,   177,   199,   179,   180,   181,   182,   183,   184,   185,
   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,
   175,   176,   177,   199,   179,   180,   181,   182,   183,   184,
   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,
   174,   175,   176,   177,   199,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
   173,   174,   175,   176,   177,   199,   179,   180,   181,   182,
   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
   193,   173,   174,   175,   176,   177,   199,   179,   180,   181,
   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
    -1,   193,   173,   174,   175,   176,   177,   199,   179,   180,
   181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
    -1,    -1,   193,   173,   174,   175,   176,   177,   199,   179,
   180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,   199,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,
   199,   179,   180,   181,   182,   183,   184,   185,   186,   187,
    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,
   177,   199,   179,   180,   181,   182,   183,   184,   185,   186,
   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,
   176,   177,   199,   179,   180,   181,   182,   183,   184,   185,
   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,
   175,   176,   177,   199,   179,   180,   181,   182,   183,   184,
   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,
   174,   175,   176,   177,   199,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
   173,   174,   175,   176,   177,   199,   179,   180,   181,   182,
   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
   193,   173,   174,   175,   176,   177,   199,   179,   180,   181,
   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
    -1,   193,   173,   174,   175,   176,   177,   199,   179,   180,
   181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
    -1,    -1,   193,   173,   174,   175,   176,   177,   199,   179,
   180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,   199,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,
   199,   179,   180,   181,   182,   183,   184,   185,   186,   187,
    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,
   177,   199,   179,   180,   181,   182,   183,   184,   185,   186,
   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,
   176,   177,   199,   179,   180,   181,   182,   183,   184,   185,
   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,
   175,   176,   177,   199,   179,   180,   181,   182,   183,   184,
   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,
   174,   175,   176,   177,   199,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
   173,   174,   175,   176,   177,   199,   179,   180,   181,   182,
   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
   193,   173,   174,   175,   176,   177,   199,   179,   180,   181,
   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
    -1,   193,   173,   174,   175,   176,   177,   199,   179,   180,
   181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
    -1,    -1,   193,   173,   174,   175,   176,   177,   199,   179,
   180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,   199,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,
   199,   179,   180,   181,   182,   183,   184,   185,   186,   187,
    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,
   177,   199,   179,   180,   181,   182,   183,   184,   185,   186,
   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,
   176,   177,   199,   179,   180,   181,   182,   183,   184,   185,
   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,
   175,   176,   177,   199,   179,   180,   181,   182,   183,   184,
   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,
   174,   175,   176,   177,   199,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
   173,   174,   175,   176,   177,   199,   179,   180,   181,   182,
   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
   193,   173,   174,   175,   176,   177,   199,   179,   180,   181,
   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
    -1,   193,   173,   174,   175,   176,   177,   199,   179,   180,
   181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
    -1,    -1,   193,   173,   174,   175,   176,   177,   199,   179,
   180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,   199,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,
   199,   179,   180,   181,   182,   183,   184,   185,   186,   187,
    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,
   177,   199,   179,   180,   181,   182,   183,   184,   185,   186,
   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,
   176,   177,   199,   179,   180,   181,   182,   183,   184,   185,
   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,
   175,   176,   177,   199,   179,   180,   181,   182,   183,   184,
   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,
   174,   175,   176,   177,   199,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
   173,   174,   175,   176,   177,   199,   179,   180,   181,   182,
   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
   193,   173,   174,   175,   176,   177,   199,   179,   180,   181,
   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
    -1,   193,   173,   174,   175,   176,   177,   199,   179,   180,
   181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
    -1,    -1,   193,   173,   174,   175,   176,   177,   199,   179,
   180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,   199,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,
   199,   179,   180,   181,   182,   183,   184,   185,   186,   187,
    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,
   177,   199,   179,   180,   181,   182,   183,   184,   185,   186,
   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,
   176,   177,   199,   179,   180,   181,   182,   183,   184,   185,
   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,
   175,   176,   177,   199,   179,   180,   181,   182,   183,   184,
   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,
   174,   175,   176,   177,   199,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
   173,   174,   175,   176,   177,   199,   179,   180,   181,   182,
   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
   193,   173,   174,   175,   176,   177,   199,   179,   180,   181,
   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
    -1,   193,   173,   174,   175,   176,   177,   199,   179,   180,
   181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
    -1,    -1,   193,   173,   174,   175,   176,   177,   199,   179,
   180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,   199,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,
   199,   179,   180,   181,   182,   183,   184,   185,   186,   187,
    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,
   177,   199,   179,   180,   181,   182,   183,   184,   185,   186,
   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,
   176,   177,   199,   179,   180,   181,   182,   183,   184,   185,
   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,
   175,   176,   177,   199,   179,   180,   181,   182,   183,   184,
   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,
   174,   175,   176,   177,   199,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
   173,   174,   175,   176,   177,   199,   179,   180,   181,   182,
   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
   193,   173,   174,   175,   176,   177,   199,   179,   180,   181,
   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
    -1,   193,   173,   174,   175,   176,   177,   199,   179,   180,
   181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
    -1,    -1,   193,   173,   174,   175,   176,   177,   199,   179,
   180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,   199,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,
   199,   179,   180,   181,   182,   183,   184,   185,   186,   187,
    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,
   177,   199,   179,   180,   181,   182,   183,   184,   185,   186,
   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,
   176,   177,   199,   179,   180,   181,   182,   183,   184,   185,
   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,
   175,   176,   177,   199,   179,   180,   181,   182,   183,   184,
   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,
   174,   175,   176,   177,   199,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
   173,   174,   175,   176,   177,   199,   179,   180,   181,   182,
   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
   193,   173,   174,   175,   176,   177,   199,   179,   180,   181,
   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
    -1,   193,   173,   174,   175,   176,   177,   199,   179,   180,
   181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
    -1,    -1,   193,   173,   174,   175,   176,   177,   199,   179,
   180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,   199,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,
   199,   179,   180,   181,   182,   183,   184,   185,   186,   187,
    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,
   177,   199,   179,   180,   181,   182,   183,   184,   185,   186,
   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,
   176,   177,   199,   179,   180,   181,   182,   183,   184,   185,
   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,
   175,   176,   177,   199,   179,   180,   181,   182,   183,   184,
   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,
   174,   175,   176,   177,   199,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
   173,   174,   175,   176,   177,   199,   179,   180,   181,   182,
   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
   193,   173,   174,   175,   176,   177,   199,   179,   180,   181,
   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
    -1,   193,   173,   174,   175,   176,   177,   199,   179,   180,
   181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
    -1,    -1,   193,   173,   174,   175,   176,   177,   199,   179,
   180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,   199,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,
   199,   179,   180,   181,   182,   183,   184,   185,   186,   187,
    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,
   177,   199,   179,   180,   181,   182,   183,   184,   185,   186,
   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,
   176,   177,   199,   179,   180,   181,   182,   183,   184,   185,
   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,
   175,   176,   177,   199,   179,   180,   181,   182,   183,   184,
   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,
   174,   175,   176,   177,   199,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
   173,   174,   175,   176,   177,   199,   179,   180,   181,   182,
   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
   193,   173,   174,   175,   176,   177,   199,   179,   180,   181,
   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
    -1,   193,   173,   174,   175,   176,   177,   199,   179,   180,
   181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
    -1,    -1,   193,   173,   174,   175,   176,   177,   199,   179,
   180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,   199,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,
   199,   179,   180,   181,   182,   183,   184,   185,   186,   187,
    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,
   177,   199,   179,   180,   181,   182,   183,   184,   185,   186,
   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,
   176,   177,   199,   179,   180,   181,   182,   183,   184,   185,
   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,
   175,   176,   177,   199,   179,   180,   181,   182,   183,   184,
   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,
   174,   175,   176,   177,   199,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
   173,   174,   175,   176,   177,   199,   179,   180,   181,   182,
   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
   193,   173,   174,   175,   176,   177,   199,   179,   180,   181,
   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
    -1,   193,   173,   174,   175,   176,   177,   199,   179,   180,
   181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
    -1,    -1,   193,   173,   174,   175,   176,   177,   199,   179,
   180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,   199,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,
   199,   179,   180,   181,   182,   183,   184,   185,   186,   187,
    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,
   177,   199,   179,   180,   181,   182,   183,   184,   185,   186,
   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,
   176,   177,   199,   179,   180,   181,   182,   183,   184,   185,
   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,
   175,   176,   177,   199,   179,   180,   181,   182,   183,   184,
   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,
   174,   175,   176,   177,   199,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
   173,   174,   175,   176,   177,   199,   179,   180,   181,   182,
   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
   193,   173,   174,   175,   176,   177,   199,   179,   180,   181,
   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
    -1,   193,   173,   174,   175,   176,   177,   199,   179,   180,
   181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
    -1,    -1,   193,   173,   174,   175,   176,   177,   199,   179,
   180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,   199,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,
   199,   179,   180,   181,   182,   183,   184,   185,   186,   187,
    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,
   177,   199,   179,   180,   181,   182,   183,   184,   185,   186,
   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,
   176,   177,   199,   179,   180,   181,   182,   183,   184,   185,
   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,
   175,   176,   177,   199,   179,   180,   181,   182,   183,   184,
   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,
   174,   175,   176,   177,   199,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
   173,   174,   175,   176,   177,   199,   179,   180,   181,   182,
   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
   193,   173,   174,   175,   176,   177,   199,   179,   180,   181,
   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
    -1,   193,   173,   174,   175,   176,   177,   199,   179,   180,
   181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
    -1,    -1,   193,   173,   174,   175,   176,   177,   199,   179,
   180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,   199,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,
   199,   179,   180,   181,   182,   183,   184,   185,   186,   187,
    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,
   177,   199,   179,   180,   181,   182,   183,   184,   185,   186,
   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,
   176,   177,   199,   179,   180,   181,   182,   183,   184,   185,
   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,
   175,   176,   177,   199,   179,   180,   181,   182,   183,   184,
   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,
   174,   175,   176,   177,   199,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
   173,   174,   175,   176,   177,   199,   179,   180,   181,   182,
   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
   193,   173,   174,   175,   176,   177,   199,   179,   180,   181,
   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
    -1,   193,   173,   174,   175,   176,   177,   199,   179,   180,
   181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
    -1,    -1,   193,   173,   174,   175,   176,   177,   199,   179,
   180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,   199,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,
   199,   179,   180,   181,   182,   183,   184,   185,   186,   187,
    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,
   177,   199,   179,   180,   181,   182,   183,   184,   185,   186,
   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,
   176,   177,   199,   179,   180,   181,   182,   183,   184,   185,
   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,
   175,   176,   177,   199,   179,   180,   181,   182,   183,   184,
   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,
   174,   175,   176,   177,   199,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
   173,   174,   175,   176,   177,   199,   179,   180,   181,   182,
   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
   193,   173,   174,   175,   176,   177,   199,   179,   180,   181,
   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
    -1,   193,   173,   174,   175,   176,   177,   199,   179,   180,
   181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
    -1,    -1,   193,   173,   174,   175,   176,   177,   199,   179,
   180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,   199,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,
   199,   179,   180,   181,   182,   183,   184,   185,   186,   187,
    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,
   177,   199,   179,   180,   181,   182,   183,   184,   185,   186,
   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,
   176,   177,   199,   179,   180,   181,   182,   183,   184,   185,
   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,
   175,   176,   177,   199,   179,   180,   181,   182,   183,   184,
   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,
   174,   175,   176,   177,   199,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
   173,   174,   175,   176,   177,   199,   179,   180,   181,   182,
   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
   193,   173,   174,   175,   176,   177,   199,   179,   180,   181,
   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
    -1,   193,   173,   174,   175,   176,   177,   199,   179,   180,
   181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
    -1,    -1,   193,   173,   174,   175,   176,   177,   199,   179,
   180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,   199,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,
   199,   179,   180,   181,   182,   183,   184,   185,   186,   187,
    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,
   177,   199,   179,   180,   181,   182,   183,   184,   185,   186,
   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,
   176,   177,   199,   179,   180,   181,   182,   183,   184,   185,
   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,
   175,   176,   177,   199,   179,   180,   181,   182,   183,   184,
   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,
   174,   175,   176,   177,   199,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
   173,   174,   175,   176,   177,   199,   179,   180,   181,   182,
   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
   193,   173,   174,   175,   176,   177,   199,   179,   180,   181,
   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
    -1,   193,   173,   174,   175,   176,   177,   199,   179,   180,
   181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
    -1,    -1,   193,   173,   174,   175,   176,   177,   199,   179,
   180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,   199,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,
   199,   179,   180,   181,   182,   183,   184,   185,   186,   187,
    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,
   177,   199,   179,   180,   181,   182,   183,   184,   185,   186,
   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,
   176,   177,   199,   179,   180,   181,   182,   183,   184,   185,
   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,
   175,   176,   177,   199,   179,   180,   181,   182,   183,   184,
   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,
   174,   175,   176,   177,   199,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
   173,   174,   175,   176,   177,   199,   179,   180,   181,   182,
   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
   193,   173,   174,   175,   176,   177,   199,   179,   180,   181,
   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
    -1,   193,   173,   174,   175,   176,   177,   199,   179,   180,
   181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
    -1,    -1,   193,   173,   174,   175,   176,   177,   199,   179,
   180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,   199,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,
   199,   179,   180,   181,   182,   183,   184,   185,   186,   187,
    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,
   177,   199,   179,   180,   181,   182,   183,   184,   185,   186,
   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,
   176,   177,   199,   179,   180,   181,   182,   183,   184,   185,
   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,
   175,   176,   177,   199,   179,   180,   181,   182,   183,   184,
   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,
   174,   175,   176,   177,   199,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
   173,   174,   175,   176,   177,   199,   179,   180,   181,   182,
   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
   193,   173,   174,   175,   176,   177,   199,   179,   180,   181,
   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
    -1,   193,   173,   174,   175,   176,   177,   199,   179,   180,
   181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
    -1,    -1,   193,   173,   174,   175,   176,   177,   199,   179,
   180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,   199,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,
   199,   179,   180,   181,   182,   183,   184,   185,   186,   187,
    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,
   177,   199,   179,   180,   181,   182,   183,   184,   185,   186,
   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,
   176,   177,   199,   179,   180,   181,   182,   183,   184,   185,
   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,
   175,   176,   177,   199,   179,   180,   181,   182,   183,   184,
   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,
   174,   175,   176,   177,   199,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
   173,   174,   175,   176,   177,   199,   179,   180,   181,   182,
   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
   193,   173,   174,   175,   176,   177,   199,   179,   180,   181,
   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
    -1,   193,   173,   174,   175,   176,   177,   199,   179,   180,
   181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
    -1,    -1,   193,   173,   174,   175,   176,   177,   199,   179,
   180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,   199,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,
   199,   179,   180,   181,   182,   183,   184,   185,   186,   187,
    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,
   177,   199,   179,   180,   181,   182,   183,   184,   185,   186,
   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,
   176,   177,   199,   179,   180,   181,   182,   183,   184,   185,
   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,
   175,   176,   177,   199,   179,   180,   181,   182,   183,   184,
   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,
   174,   175,   176,   177,   199,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
   173,   174,   175,   176,   177,   199,   179,   180,   181,   182,
   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
   193,   173,   174,   175,   176,   177,   199,   179,   180,   181,
   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
    -1,   193,   173,   174,   175,   176,   177,   199,   179,   180,
   181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
    -1,    -1,   193,   173,   174,   175,   176,   177,   199,   179,
   180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,   199,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,
   199,   179,   180,   181,   182,   183,   184,   185,   186,   187,
    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,
   177,   199,   179,   180,   181,   182,   183,   184,   185,   186,
   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,
   176,   177,   199,   179,   180,   181,   182,   183,   184,   185,
   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,
   175,   176,   177,   199,   179,   180,   181,   182,   183,   184,
   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,
   174,   175,   176,   177,   199,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
   173,   174,   175,   176,   177,   199,   179,   180,   181,   182,
   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
   193,   173,   174,   175,   176,   177,   199,   179,   180,   181,
   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
    -1,   193,   173,   174,   175,   176,   177,   199,   179,   180,
   181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
    -1,    -1,   193,   173,   174,   175,   176,   177,   199,   179,
   180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,   199,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,
   199,   179,   180,   181,   182,   183,   184,   185,   186,   187,
    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,
   177,   199,   179,   180,   181,   182,   183,   184,   185,   186,
   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,
   176,   177,   199,   179,   180,   181,   182,   183,   184,   185,
   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,
   175,   176,   177,   199,   179,   180,   181,   182,   183,   184,
   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,
   174,   175,   176,   177,   199,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
   173,   174,   175,   176,   177,   199,   179,   180,   181,   182,
   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
   193,   173,   174,   175,   176,   177,   199,   179,   180,   181,
   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
    -1,   193,   173,   174,   175,   176,   177,   199,   179,   180,
   181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
    -1,    -1,   193,   173,   174,   175,   176,   177,   199,   179,
   180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,   199,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,
   199,   179,   180,   181,   182,   183,   184,   185,   186,   187,
    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,
   177,   199,   179,   180,   181,   182,   183,   184,   185,   186,
   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,
   176,   177,   199,   179,   180,   181,   182,   183,   184,   185,
   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,
   175,   176,   177,   199,   179,   180,   181,   182,   183,   184,
   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,
   174,   175,   176,   177,   199,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
   173,   174,   175,   176,   177,   199,   179,   180,   181,   182,
   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
   193,   173,   174,   175,   176,   177,   199,   179,   180,   181,
   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
    -1,   193,   173,   174,   175,   176,   177,   199,   179,   180,
   181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
    -1,    -1,   193,   173,   174,   175,   176,   177,   199,   179,
   180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,   199,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,
   199,   179,   180,   181,   182,   183,   184,   185,   186,   187,
    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,
   177,   199,   179,   180,   181,   182,   183,   184,   185,   186,
   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,
   176,   177,   199,   179,   180,   181,   182,   183,   184,   185,
   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,
   175,   176,   177,   199,   179,   180,   181,   182,   183,   184,
   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,
   174,   175,   176,   177,   199,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
   173,   174,   175,   176,   177,   199,   179,   180,   181,   182,
   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
   193,   173,   174,   175,   176,   177,   199,   179,   180,   181,
   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
    -1,   193,   173,   174,   175,   176,   177,   199,   179,   180,
   181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
    -1,    -1,   193,   173,   174,   175,   176,   177,   199,   179,
   180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,   199,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,
   199,   179,   180,   181,   182,   183,   184,   185,   186,   187,
    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,
   177,   199,   179,   180,   181,   182,   183,   184,   185,   186,
   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,
   176,   177,   199,   179,   180,   181,   182,   183,   184,   185,
   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,
   175,   176,   177,   199,   179,   180,   181,   182,   183,   184,
   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,
   174,   175,   176,   177,   199,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
   173,   174,   175,   176,   177,   199,   179,   180,   181,   182,
   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
   193,   173,   174,   175,   176,   177,   199,   179,   180,   181,
   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
    -1,   193,   173,   174,   175,   176,   177,   199,   179,   180,
   181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
    -1,    -1,   193,   173,   174,   175,   176,   177,   199,   179,
   180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,   199,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,
   199,   179,   180,   181,   182,   183,   184,   185,   186,   187,
    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,
   177,   199,   179,   180,   181,   182,   183,   184,   185,   186,
   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,
   176,   177,   199,   179,   180,   181,   182,   183,   184,   185,
   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,
   175,   176,   177,   199,   179,   180,   181,   182,   183,   184,
   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,
   174,   175,   176,   177,   199,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
   173,   174,   175,   176,   177,   199,   179,   180,   181,   182,
   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
   193,   173,   174,   175,   176,   177,   199,   179,   180,   181,
   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
    -1,   193,   173,   174,   175,   176,   177,   199,   179,   180,
   181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
    -1,    -1,   193,   173,   174,   175,   176,   177,   199,   179,
   180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,   199,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,   177,
   199,   179,   180,   181,   182,   183,   184,   185,   186,   187,
    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,   176,
   177,   199,   179,   180,   181,   182,   183,   184,   185,   186,
   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,   175,
   176,   177,   199,   179,   180,   181,   182,   183,   184,   185,
   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,   174,
   175,   176,   177,   199,   179,   180,   181,   182,   183,   184,
   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,   173,
   174,   175,   176,   177,   199,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
    -1,    -1,    -1,   197,   173,   174,   175,   176,   177,    -1,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
    -1,    -1,    -1,    -1,   193,    -1,    -1,    -1,   197,   173,
   174,   175,   176,   177,    -1,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
    -1,    -1,    -1,   197,   173,   174,   175,   176,   177,    -1,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
    -1,    -1,    -1,    -1,   193,    -1,    -1,    -1,   197,   173,
   174,   175,   176,   177,    -1,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
    -1,    -1,    -1,   197,   173,   174,   175,   176,   177,    -1,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
    -1,    -1,    -1,    -1,   193,    -1,    -1,    -1,   197,   173,
   174,   175,   176,   177,    -1,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
    -1,    -1,    -1,   197,   173,   174,   175,   176,   177,    -1,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
    -1,    -1,    -1,    -1,   193,    -1,    -1,    -1,   197,   173,
   174,   175,   176,   177,    -1,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
    -1,    -1,    -1,   197,   173,   174,   175,   176,   177,    -1,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
    -1,    -1,    -1,    -1,   193,    -1,    -1,    -1,   197,   173,
   174,   175,   176,   177,    -1,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
    -1,    -1,    -1,   197,   173,   174,   175,   176,   177,    -1,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
    -1,    -1,    -1,    -1,   193,    -1,    -1,    -1,   197,   173,
   174,   175,   176,   177,    -1,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
    -1,    -1,    -1,   197,   173,   174,   175,   176,   177,    -1,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
    -1,    -1,    -1,    -1,   193,    -1,    -1,    -1,   197,   173,
   174,   175,   176,   177,    -1,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
    -1,    -1,    -1,   197,   173,   174,   175,   176,   177,    -1,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
    -1,    -1,    -1,    -1,   193,    -1,    -1,    -1,   197,   173,
   174,   175,   176,   177,    -1,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
    -1,    -1,    -1,   197,   173,   174,   175,   176,   177,    -1,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
    -1,    -1,    -1,    -1,   193,    -1,    -1,    -1,   197,   173,
   174,   175,   176,   177,    -1,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
    -1,    -1,    -1,   197,   173,   174,   175,   176,   177,    -1,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
    -1,    -1,    -1,    -1,   193,    -1,    -1,    -1,   197,   173,
   174,   175,   176,   177,    -1,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
    -1,    -1,    -1,   197,   173,   174,   175,   176,   177,    -1,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
    -1,    -1,    -1,    -1,   193,    -1,    -1,    -1,   197,   173,
   174,   175,   176,   177,    -1,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
    -1,    -1,    -1,   197,   173,   174,   175,   176,   177,    -1,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
    -1,    -1,    -1,    -1,   193,    -1,    -1,    -1,   197,   173,
   174,   175,   176,   177,    -1,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
    -1,    -1,    -1,   197,   173,   174,   175,   176,   177,    -1,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
    -1,    -1,    -1,    -1,   193,    -1,    -1,    -1,   197,   173,
   174,   175,   176,   177,    -1,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
    -1,   195,   173,   174,   175,   176,   177,    -1,   179,   180,
   181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
    -1,    -1,   193,    -1,   195,   173,   174,   175,   176,   177,
    -1,   179,   180,   181,   182,   183,   184,   185,   186,   187,
    -1,    -1,    -1,    -1,    -1,   193,    -1,   195,   173,   174,
   175,   176,   177,    -1,   179,   180,   181,   182,   183,   184,
   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,    -1,
   195,   173,   174,   175,   176,   177,    -1,   179,   180,   181,
   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
    -1,   193,    -1,   195,   173,   174,   175,   176,   177,    -1,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
    -1,    -1,    -1,    -1,   193,    -1,   195,   173,   174,   175,
   176,   177,    -1,   179,   180,   181,   182,   183,   184,   185,
   186,   187,    -1,    -1,    -1,    -1,    -1,   193,    -1,   195,
   173,   174,   175,   176,   177,    -1,   179,   180,   181,   182,
   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
   193,    -1,   195,   173,   174,   175,   176,   177,    -1,   179,
   180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
    -1,    -1,    -1,   193,    -1,   195,   173,   174,   175,   176,
   177,    -1,   179,   180,   181,   182,   183,   184,   185,   186,
   187,    -1,    -1,    -1,    -1,    -1,   193,    -1,   195,   173,
   174,   175,   176,   177,    -1,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
    -1,   195,   173,   174,   175,   176,   177,    -1,   179,   180,
   181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
    -1,    -1,   193,    -1,   195,   173,   174,   175,   176,   177,
    -1,   179,   180,   181,   182,   183,   184,   185,   186,   187,
    -1,    -1,    -1,    -1,    -1,   193,    -1,   195,   173,   174,
   175,   176,   177,    -1,   179,   180,   181,   182,   183,   184,
   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,    -1,
   195,   173,   174,   175,   176,   177,    -1,   179,   180,   181,
   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
    -1,   193,    -1,   195,   173,   174,   175,   176,   177,    -1,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
    -1,    -1,    -1,    -1,   193,    -1,   195,   173,   174,   175,
   176,   177,    -1,   179,   180,   181,   182,   183,   184,   185,
   186,   187,    -1,    -1,    -1,    -1,    -1,   193,    -1,   195,
   173,   174,   175,   176,   177,    -1,   179,   180,   181,   182,
   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
   193,    -1,   195,   173,   174,   175,   176,   177,    -1,   179,
   180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
    -1,    -1,    -1,   193,    -1,   195,   173,   174,   175,   176,
   177,    -1,   179,   180,   181,   182,   183,   184,   185,   186,
   187,    -1,    -1,    -1,    -1,    -1,   193,    -1,   195,   173,
   174,   175,   176,   177,    -1,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
    -1,   195,   173,   174,   175,   176,   177,    -1,   179,   180,
   181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
    -1,    -1,   193,    -1,   195,   173,   174,   175,   176,   177,
    -1,   179,   180,   181,   182,   183,   184,   185,   186,   187,
    -1,    -1,    -1,    -1,    -1,   193,    -1,   195,   173,   174,
   175,   176,   177,    -1,   179,   180,   181,   182,   183,   184,
   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,    -1,
   195,   173,   174,   175,   176,   177,    -1,   179,   180,   181,
   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
    -1,   193,    -1,   195,   173,   174,   175,   176,   177,    -1,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
    -1,    -1,    -1,    -1,   193,    -1,   195,   173,   174,   175,
   176,   177,    -1,   179,   180,   181,   182,   183,   184,   185,
   186,   187,    -1,    -1,    -1,    -1,    -1,   193,    -1,   195,
   173,   174,   175,   176,   177,    -1,   179,   180,   181,   182,
   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
   193,    -1,   195,   173,   174,   175,   176,   177,    -1,   179,
   180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
    -1,    -1,    -1,   193,    -1,   195,   173,   174,   175,   176,
   177,    -1,   179,   180,   181,   182,   183,   184,   185,   186,
   187,    -1,    -1,    -1,    -1,    -1,   193,    -1,   195,   173,
   174,   175,   176,   177,    -1,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
    -1,   195,   173,   174,   175,   176,   177,    -1,   179,   180,
   181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
    -1,    -1,   193,    -1,   195,   173,   174,   175,   176,   177,
    -1,   179,   180,   181,   182,   183,   184,   185,   186,   187,
    -1,    -1,    -1,    -1,    -1,   193,    -1,   195,   173,   174,
   175,   176,   177,    -1,   179,   180,   181,   182,   183,   184,
   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,    -1,
   195,   173,   174,   175,   176,   177,    -1,   179,   180,   181,
   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
    -1,   193,    -1,   195,   173,   174,   175,   176,   177,    -1,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
    -1,    -1,    -1,    -1,   193,    -1,   195,   173,   174,   175,
   176,   177,    -1,   179,   180,   181,   182,   183,   184,   185,
   186,   187,    -1,    -1,    -1,    -1,    -1,   193,    -1,   195,
   173,   174,   175,   176,   177,    -1,   179,   180,   181,   182,
   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
   193,    -1,   195,   173,   174,   175,   176,   177,    -1,   179,
   180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
    -1,    -1,    -1,   193,    -1,   195,   173,   174,   175,   176,
   177,    -1,   179,   180,   181,   182,   183,   184,   185,   186,
   187,    -1,    -1,    -1,    -1,    -1,   193,    -1,   195,   173,
   174,   175,   176,   177,    -1,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
    -1,   195,   173,   174,   175,   176,   177,    -1,   179,   180,
   181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
    -1,    -1,   193,    -1,   195,   173,   174,   175,   176,   177,
    -1,   179,   180,   181,   182,   183,   184,   185,   186,   187,
    -1,    -1,    -1,    -1,    -1,   193,    -1,   195,   173,   174,
   175,   176,   177,    -1,   179,   180,   181,   182,   183,   184,
   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,    -1,
   195,   173,   174,   175,   176,   177,    -1,   179,   180,   181,
   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
    -1,   193,    -1,   195,   173,   174,   175,   176,   177,    -1,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
    -1,    -1,    -1,    -1,   193,    -1,   195,   173,   174,   175,
   176,   177,    -1,   179,   180,   181,   182,   183,   184,   185,
   186,   187,    -1,    -1,    -1,    -1,    -1,   193,    -1,   195,
   173,   174,   175,   176,   177,    -1,   179,   180,   181,   182,
   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
   193,    -1,   195,   173,   174,   175,   176,   177,    -1,   179,
   180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
    -1,    -1,    -1,   193,    -1,   195,   173,   174,   175,   176,
   177,    -1,   179,   180,   181,   182,   183,   184,   185,   186,
   187,    -1,    -1,    -1,    -1,    -1,   193,    -1,   195,   173,
   174,   175,   176,   177,    -1,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
    -1,   195,   173,   174,   175,   176,   177,    -1,   179,   180,
   181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
    -1,    -1,   193,    -1,   195,   173,   174,   175,   176,   177,
    -1,   179,   180,   181,   182,   183,   184,   185,   186,   187,
    -1,    -1,    -1,    -1,    -1,   193,    -1,   195,   173,   174,
   175,   176,   177,    -1,   179,   180,   181,   182,   183,   184,
   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,    -1,
   195,   173,   174,   175,   176,   177,    -1,   179,   180,   181,
   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
    -1,   193,    -1,   195,   173,   174,   175,   176,   177,    -1,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
    -1,    -1,    -1,    -1,   193,    -1,   195,   173,   174,   175,
   176,   177,    -1,   179,   180,   181,   182,   183,   184,   185,
   186,   187,    -1,    -1,    -1,    -1,    -1,   193,    -1,   195,
   173,   174,   175,   176,   177,    -1,   179,   180,   181,   182,
   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
   193,    -1,   195,   173,   174,   175,   176,   177,    -1,   179,
   180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
    -1,    -1,    -1,   193,    -1,   195,   173,   174,   175,   176,
   177,    -1,   179,   180,   181,   182,   183,   184,   185,   186,
   187,    -1,    -1,    -1,    -1,    -1,   193,    -1,   195,   173,
   174,   175,   176,   177,    -1,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
    -1,   195,   173,   174,   175,   176,   177,    -1,   179,   180,
   181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
    -1,    -1,   193,    -1,   195,   173,   174,   175,   176,   177,
    -1,   179,   180,   181,   182,   183,   184,   185,   186,   187,
    -1,    -1,    -1,    -1,    -1,   193,    -1,   195,   173,   174,
   175,   176,   177,    -1,   179,   180,   181,   182,   183,   184,
   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,    -1,
   195,   173,   174,   175,   176,   177,    -1,   179,   180,   181,
   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
    -1,   193,    -1,   195,   173,   174,   175,   176,   177,    -1,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
    -1,    -1,    -1,    -1,   193,    -1,   195,   173,   174,   175,
   176,   177,    -1,   179,   180,   181,   182,   183,   184,   185,
   186,   187,    -1,    -1,    -1,    -1,    -1,   193,    -1,   195,
   173,   174,   175,   176,   177,    -1,   179,   180,   181,   182,
   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
   193,    -1,   195,   173,   174,   175,   176,   177,    -1,   179,
   180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
    -1,    -1,    -1,   193,    -1,   195,   173,   174,   175,   176,
   177,    -1,   179,   180,   181,   182,   183,   184,   185,   186,
   187,    -1,    -1,    -1,    -1,    -1,   193,    -1,   195,   173,
   174,   175,   176,   177,    -1,   179,   180,   181,   182,   183,
   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,
    -1,   195,   173,   174,   175,   176,   177,    -1,   179,   180,
   181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
    -1,    -1,   193,    -1,   195,   173,   174,   175,   176,   177,
    -1,   179,   180,   181,   182,   183,   184,   185,   186,   187,
    -1,    -1,    -1,    -1,    -1,   193,    -1,   195,   173,   174,
   175,   176,   177,    -1,   179,   180,   181,   182,   183,   184,
   185,   186,   187,    -1,    -1,    -1,    -1,    -1,   193,    -1,
   195,   173,   174,   175,   176,   177,    -1,   179,   180,   181,
   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
    -1,   193,    -1,   195,   173,   174,   175,   176,   177,    -1,
   179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
    -1,    -1,    -1,    -1,   193,    -1,   195,   173,   174,   175,
   176,   177,    -1,   179,   180,   181,   182,   183,   184,   185,
   186,   187,    -1,    -1,    -1,    -1,    -1,   193,    -1,   195,
   173,   174,   175,   176,   177,    -1,   179,   180,   181,   182,
   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
   193,    -1,   195,   173,   174,   175,   176,   177,    -1,   179,
   180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
    -1,    -1,    -1,   193,    -1,   195,   173,   174,   175,   176,
   177,    -1,   179,   180,   181,   182,   183,   184,   185,   186,
   187,    -1,    -1,    -1,    -1,    -1,   193
};
/* -*-C-*-  Note some compilers choke on comments on `#line' lines.  */
#line 3 "/usr/lib/bison.simple"
/* This file comes from bison-1.28.  */

/* Skeleton output parser for bison,
   Copyright (C) 1984, 1989, 1990 Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */

/* As a special exception, when this file is copied by Bison into a
   Bison output file, you may use that output file without restriction.
   This special exception was added by the Free Software Foundation
   in version 1.24 of Bison.  */

/* This is the parser code that is written into each bison parser
  when the %semantic_parser declaration is not specified in the grammar.
  It was written by Richard Stallman by simplifying the hairy parser
  used when %semantic_parser is specified.  */

#ifndef YYSTACK_USE_ALLOCA
#ifdef alloca
#define YYSTACK_USE_ALLOCA
#else /* alloca not defined */
#ifdef __GNUC__
#define YYSTACK_USE_ALLOCA
#define alloca __builtin_alloca
#else /* not GNU C.  */
#if (!defined (__STDC__) && defined (sparc)) || defined (__sparc__) || defined (__sparc) || defined (__sgi) || (defined (__sun) && defined (__i386))
#define YYSTACK_USE_ALLOCA
#include <alloca.h>
#else /* not sparc */
/* We think this test detects Watcom and Microsoft C.  */
/* This used to test MSDOS, but that is a bad idea
   since that symbol is in the user namespace.  */
#if (defined (_MSDOS) || defined (_MSDOS_)) && !defined (__TURBOC__)
#if 0 /* No need for malloc.h, which pollutes the namespace;
	 instead, just don't use alloca.  */
#include <malloc.h>
#endif
#else /* not MSDOS, or __TURBOC__ */
#if defined(_AIX)
/* I don't know what this was needed for, but it pollutes the namespace.
   So I turned it off.   rms, 2 May 1997.  */
/* #include <malloc.h>  */
 #pragma alloca
#define YYSTACK_USE_ALLOCA
#else /* not MSDOS, or __TURBOC__, or _AIX */
#if 0
#ifdef __hpux /* haible@ilog.fr says this works for HPUX 9.05 and up,
		 and on HPUX 10.  Eventually we can turn this on.  */
#define YYSTACK_USE_ALLOCA
#define alloca __builtin_alloca
#endif /* __hpux */
#endif
#endif /* not _AIX */
#endif /* not MSDOS, or __TURBOC__ */
#endif /* not sparc */
#endif /* not GNU C */
#endif /* alloca not defined */
#endif /* YYSTACK_USE_ALLOCA not defined */

#ifdef YYSTACK_USE_ALLOCA
#define YYSTACK_ALLOC alloca
#else
#define YYSTACK_ALLOC malloc
#endif

/* Note: there must be only one dollar sign in this file.
   It is replaced by the list of actions, each action
   as one case of the switch.  */

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		-2
#define YYEOF		0
#define YYACCEPT	goto yyacceptlab
#define YYABORT 	goto yyabortlab
#define YYERROR		goto yyerrlab1
/* Like YYERROR except do call yyerror.
   This remains here temporarily to ease the
   transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */
#define YYFAIL		goto yyerrlab
#define YYRECOVERING()  (!!yyerrstatus)
#define YYBACKUP(token, value) \
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    { yychar = (token), yylval = (value);			\
      yychar1 = YYTRANSLATE (yychar);				\
      YYPOPSTACK;						\
      goto yybackup;						\
    }								\
  else								\
    { yyerror ("syntax error: cannot back up"); YYERROR; }	\
while (0)

#define YYTERROR	1
#define YYERRCODE	256

#ifndef YYPURE
#define YYLEX		yylex()
#endif

#ifdef YYPURE
#ifdef YYLSP_NEEDED
#ifdef YYLEX_PARAM
#define YYLEX		yylex(&yylval, &yylloc, YYLEX_PARAM)
#else
#define YYLEX		yylex(&yylval, &yylloc)
#endif
#else /* not YYLSP_NEEDED */
#ifdef YYLEX_PARAM
#define YYLEX		yylex(&yylval, YYLEX_PARAM)
#else
#define YYLEX		yylex(&yylval)
#endif
#endif /* not YYLSP_NEEDED */
#endif

/* If nonreentrant, generate the variables here */

#ifndef YYPURE

int	yychar;			/*  the lookahead symbol		*/
YYSTYPE	yylval;			/*  the semantic value of the		*/
				/*  lookahead symbol			*/

#ifdef YYLSP_NEEDED
YYLTYPE yylloc;			/*  location data for the lookahead	*/
				/*  symbol				*/
#endif

int yynerrs;			/*  number of parse errors so far       */
#endif  /* not YYPURE */

#if YYDEBUG != 0
int yydebug;			/*  nonzero means print parse trace	*/
/* Since this is uninitialized, it does not stop multiple parsers
   from coexisting.  */
#endif

/*  YYINITDEPTH indicates the initial size of the parser's stacks	*/

#ifndef	YYINITDEPTH
#define YYINITDEPTH 200
#endif

/*  YYMAXDEPTH is the maximum size the stacks can grow to
    (effective only if the built-in stack extension method is used).  */

#if YYMAXDEPTH == 0
#undef YYMAXDEPTH
#endif

#ifndef YYMAXDEPTH
#define YYMAXDEPTH 10000
#endif

/* Define __yy_memcpy.  Note that the size argument
   should be passed with type unsigned int, because that is what the non-GCC
   definitions require.  With GCC, __builtin_memcpy takes an arg
   of type size_t, but it can handle unsigned int.  */

#if __GNUC__ > 1		/* GNU C and GNU C++ define this.  */
#define __yy_memcpy(TO,FROM,COUNT)	__builtin_memcpy(TO,FROM,COUNT)
#else				/* not GNU C or C++ */
#ifndef __cplusplus

/* This is the most reliable way to avoid incompatibilities
   in available built-in functions on various systems.  */
static void
__yy_memcpy (to, from, count)
     char *to;
     char *from;
     unsigned int count;
{
  register char *f = from;
  register char *t = to;
  register int i = count;

  while (i-- > 0)
    *t++ = *f++;
}

#else /* __cplusplus */

/* This is the most reliable way to avoid incompatibilities
   in available built-in functions on various systems.  */
static void
__yy_memcpy (char *to, char *from, unsigned int count)
{
  register char *t = to;
  register char *f = from;
  register int i = count;

  while (i-- > 0)
    *t++ = *f++;
}

#endif
#endif

#line 217 "/usr/lib/bison.simple"

/* The user can define YYPARSE_PARAM as the name of an argument to be passed
   into yyparse.  The argument should have type void *.
   It should actually point to an object.
   Grammar actions can access the variable by casting it
   to the proper pointer type.  */

#ifdef YYPARSE_PARAM
#ifdef __cplusplus
#define YYPARSE_PARAM_ARG void *YYPARSE_PARAM
#define YYPARSE_PARAM_DECL
#else /* not __cplusplus */
#define YYPARSE_PARAM_ARG YYPARSE_PARAM
#define YYPARSE_PARAM_DECL void *YYPARSE_PARAM;
#endif /* not __cplusplus */
#else /* not YYPARSE_PARAM */
#define YYPARSE_PARAM_ARG
#define YYPARSE_PARAM_DECL
#endif /* not YYPARSE_PARAM */

/* Prevent warning if -Wstrict-prototypes.  */
#ifdef __GNUC__
#ifdef YYPARSE_PARAM
int yyparse (void *);
#else
int yyparse (void);
#endif
#endif

int
yyparse(YYPARSE_PARAM_ARG)
     YYPARSE_PARAM_DECL
{
  register int yystate;
  register int yyn;
  register short *yyssp;
  register YYSTYPE *yyvsp;
  int yyerrstatus;	/*  number of tokens to shift before error messages enabled */
  int yychar1 = 0;		/*  lookahead token as an internal (translated) token number */

  short	yyssa[YYINITDEPTH];	/*  the state stack			*/
  YYSTYPE yyvsa[YYINITDEPTH];	/*  the semantic value stack		*/

  short *yyss = yyssa;		/*  refer to the stacks thru separate pointers */
  YYSTYPE *yyvs = yyvsa;	/*  to allow yyoverflow to reallocate them elsewhere */

#ifdef YYLSP_NEEDED
  YYLTYPE yylsa[YYINITDEPTH];	/*  the location stack			*/
  YYLTYPE *yyls = yylsa;
  YYLTYPE *yylsp;

#define YYPOPSTACK   (yyvsp--, yyssp--, yylsp--)
#else
#define YYPOPSTACK   (yyvsp--, yyssp--)
#endif

  int yystacksize = YYINITDEPTH;
  int yyfree_stacks = 0;

#ifdef YYPURE
  int yychar;
  YYSTYPE yylval;
  int yynerrs;
#ifdef YYLSP_NEEDED
  YYLTYPE yylloc;
#endif
#endif

  YYSTYPE yyval;		/*  the variable used to return		*/
				/*  semantic values from the action	*/
				/*  routines				*/

  int yylen;

#if YYDEBUG != 0
  if (yydebug)
    fprintf(stderr, "Starting parse\n");
#endif

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY;		/* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */

  yyssp = yyss - 1;
  yyvsp = yyvs;
#ifdef YYLSP_NEEDED
  yylsp = yyls;
#endif

/* Push a new state, which is found in  yystate  .  */
/* In all cases, when you get here, the value and location stacks
   have just been pushed. so pushing a state here evens the stacks.  */
yynewstate:

  *++yyssp = yystate;

  if (yyssp >= yyss + yystacksize - 1)
    {
      /* Give user a chance to reallocate the stack */
      /* Use copies of these so that the &'s don't force the real ones into memory. */
      YYSTYPE *yyvs1 = yyvs;
      short *yyss1 = yyss;
#ifdef YYLSP_NEEDED
      YYLTYPE *yyls1 = yyls;
#endif

      /* Get the current used size of the three stacks, in elements.  */
      int size = yyssp - yyss + 1;

#ifdef yyoverflow
      /* Each stack pointer address is followed by the size of
	 the data in use in that stack, in bytes.  */
#ifdef YYLSP_NEEDED
      /* This used to be a conditional around just the two extra args,
	 but that might be undefined if yyoverflow is a macro.  */
      yyoverflow("parser stack overflow",
		 &yyss1, size * sizeof (*yyssp),
		 &yyvs1, size * sizeof (*yyvsp),
		 &yyls1, size * sizeof (*yylsp),
		 &yystacksize);
#else
      yyoverflow("parser stack overflow",
		 &yyss1, size * sizeof (*yyssp),
		 &yyvs1, size * sizeof (*yyvsp),
		 &yystacksize);
#endif

      yyss = yyss1; yyvs = yyvs1;
#ifdef YYLSP_NEEDED
      yyls = yyls1;
#endif
#else /* no yyoverflow */
      /* Extend the stack our own way.  */
      if (yystacksize >= YYMAXDEPTH)
	{
	  yyerror("parser stack overflow");
	  if (yyfree_stacks)
	    {
	      free (yyss);
	      free (yyvs);
#ifdef YYLSP_NEEDED
	      free (yyls);
#endif
	    }
	  return 2;
	}
      yystacksize *= 2;
      if (yystacksize > YYMAXDEPTH)
	yystacksize = YYMAXDEPTH;
#ifndef YYSTACK_USE_ALLOCA
      yyfree_stacks = 1;
#endif
      yyss = (short *) YYSTACK_ALLOC (yystacksize * sizeof (*yyssp));
      __yy_memcpy ((char *)yyss, (char *)yyss1,
		   size * (unsigned int) sizeof (*yyssp));
      yyvs = (YYSTYPE *) YYSTACK_ALLOC (yystacksize * sizeof (*yyvsp));
      __yy_memcpy ((char *)yyvs, (char *)yyvs1,
		   size * (unsigned int) sizeof (*yyvsp));
#ifdef YYLSP_NEEDED
      yyls = (YYLTYPE *) YYSTACK_ALLOC (yystacksize * sizeof (*yylsp));
      __yy_memcpy ((char *)yyls, (char *)yyls1,
		   size * (unsigned int) sizeof (*yylsp));
#endif
#endif /* no yyoverflow */

      yyssp = yyss + size - 1;
      yyvsp = yyvs + size - 1;
#ifdef YYLSP_NEEDED
      yylsp = yyls + size - 1;
#endif

#if YYDEBUG != 0
      if (yydebug)
	fprintf(stderr, "Stack size increased to %d\n", yystacksize);
#endif

      if (yyssp >= yyss + yystacksize - 1)
	YYABORT;
    }

#if YYDEBUG != 0
  if (yydebug)
    fprintf(stderr, "Entering state %d\n", yystate);
#endif

  goto yybackup;
 yybackup:

/* Do appropriate processing given the current state.  */
/* Read a lookahead token if we need one and don't already have one.  */
/* yyresume: */

  /* First try to decide what to do without reference to lookahead token.  */

  yyn = yypact[yystate];
  if (yyn == YYFLAG)
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* yychar is either YYEMPTY or YYEOF
     or a valid token in external form.  */

  if (yychar == YYEMPTY)
    {
#if YYDEBUG != 0
      if (yydebug)
	fprintf(stderr, "Reading a token: ");
#endif
      yychar = YYLEX;
    }

  /* Convert token to internal form (in yychar1) for indexing tables with */

  if (yychar <= 0)		/* This means end of input. */
    {
      yychar1 = 0;
      yychar = YYEOF;		/* Don't call YYLEX any more */

#if YYDEBUG != 0
      if (yydebug)
	fprintf(stderr, "Now at end of input.\n");
#endif
    }
  else
    {
      yychar1 = YYTRANSLATE(yychar);

#if YYDEBUG != 0
      if (yydebug)
	{
	  fprintf (stderr, "Next token is %d (%s", yychar, yytname[yychar1]);
	  /* Give the individual parser a way to print the precise meaning
	     of a token, for further debugging info.  */
#ifdef YYPRINT
	  YYPRINT (stderr, yychar, yylval);
#endif
	  fprintf (stderr, ")\n");
	}
#endif
    }

  yyn += yychar1;
  if (yyn < 0 || yyn > YYLAST || yycheck[yyn] != yychar1)
    goto yydefault;

  yyn = yytable[yyn];

  /* yyn is what to do for this token type in this state.
     Negative => reduce, -yyn is rule number.
     Positive => shift, yyn is new state.
       New state is final state => don't bother to shift,
       just return success.
     0, or most negative number => error.  */

  if (yyn < 0)
    {
      if (yyn == YYFLAG)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }
  else if (yyn == 0)
    goto yyerrlab;

  if (yyn == YYFINAL)
    YYACCEPT;

  /* Shift the lookahead token.  */

#if YYDEBUG != 0
  if (yydebug)
    fprintf(stderr, "Shifting token %d (%s), ", yychar, yytname[yychar1]);
#endif

  /* Discard the token being shifted unless it is eof.  */
  if (yychar != YYEOF)
    yychar = YYEMPTY;

  *++yyvsp = yylval;
#ifdef YYLSP_NEEDED
  *++yylsp = yylloc;
#endif

  /* count tokens shifted since error; after three, turn off error status.  */
  if (yyerrstatus) yyerrstatus--;

  yystate = yyn;
  goto yynewstate;

/* Do the default action for the current state.  */
yydefault:

  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;

/* Do a reduction.  yyn is the number of a rule to reduce with.  */
yyreduce:
  yylen = yyr2[yyn];
  if (yylen > 0)
    yyval = yyvsp[1-yylen]; /* implement default value of the action */

#if YYDEBUG != 0
  if (yydebug)
    {
      int i;

      fprintf (stderr, "Reducing via rule %d (line %d), ",
	       yyn, yyrline[yyn]);

      /* Print the symbols being reduced, and their result.  */
      for (i = yyprhs[yyn]; yyrhs[i] > 0; i++)
	fprintf (stderr, "%s ", yytname[yyrhs[i]]);
      fprintf (stderr, " -> %s\n", yytname[yyr1[yyn]]);
    }
#endif


  switch (yyn) {

case 4:
#line 179 "Gmsh.y"
{ yyerrok ; return 1; ;
    break;}
case 5:
#line 185 "Gmsh.y"
{ yyval.d = yyvsp[0].d; ;
    break;}
case 6:
#line 186 "Gmsh.y"
{ yyval.d = -yyvsp[0].d; ;
    break;}
case 7:
#line 191 "Gmsh.y"
{
      yymsg(INFO, "STL file format");
      STL_Surf = Create_Surface(1,MSH_SURF_STL);
      STL_Surf->STL = new STL_Data;
      return 1;
    ;
    break;}
case 8:
#line 205 "Gmsh.y"
{
      STL_Surf->STL->Add_Facet( yyvsp[-12].d, yyvsp[-11].d, yyvsp[-10].d,
				yyvsp[-8].d, yyvsp[-7].d, yyvsp[-6].d,
				yyvsp[-4].d, yyvsp[-3].d, yyvsp[-2].d);
      return 1;
    ;
    break;}
case 9:
#line 212 "Gmsh.y"
{
      yymsg(INFO, "STL file format read");
      Tree_Add(THEM->Surfaces, &STL_Surf);
      return 1;
    ;
    break;}
case 12:
#line 227 "Gmsh.y"
{ return 1; ;
    break;}
case 13:
#line 228 "Gmsh.y"
{ return 1; ;
    break;}
case 14:
#line 229 "Gmsh.y"
{ return 1; ;
    break;}
case 15:
#line 234 "Gmsh.y"
{
      yymsg(INFO, "Step Iso-10303-21 file format");
      Create_Step_Solid_BRep();
    ;
    break;}
case 16:
#line 239 "Gmsh.y"
{
      yymsg(INFO, "Step Iso-10303-21 file format read");
      Resolve_BREP ();
    ;
    break;}
case 20:
#line 250 "Gmsh.y"
{
    ;
    break;}
case 21:
#line 253 "Gmsh.y"
{
    ;
    break;}
case 22:
#line 257 "Gmsh.y"
{
   ;
    break;}
case 23:
#line 263 "Gmsh.y"
{
        Add_Cartesian_Point((int)yyvsp[-8].d,yyvsp[-4].c,yyvsp[-2].v[0],yyvsp[-2].v[1],yyvsp[-2].v[2]);
    ;
    break;}
case 24:
#line 269 "Gmsh.y"
{
       Add_BSpline_Curve_With_Knots ((int)yyvsp[-22].d, yyvsp[-18].c, (int) yyvsp[-16].d, yyvsp[-14].l,	yyvsp[-6].l, yyvsp[-4].l, 0., 1.);
    ;
    break;}
case 25:
#line 276 "Gmsh.y"
{
      Add_BSpline_Surface_With_Knots ((int)yyvsp[-30].d, yyvsp[-26].c, (int) yyvsp[-24].d, (int) yyvsp[-22].d, yyvsp[-20].l, yyvsp[-10].l,
				      yyvsp[-8].l, yyvsp[-6].l, yyvsp[-4].l, 0., 1., 0., 1. );
    ;
    break;}
case 26:
#line 282 "Gmsh.y"
{
      Add_Edge_Curve ((int)yyvsp[-14].d, yyvsp[-10].c , (int)yyvsp[-8].d , (int)yyvsp[-6].d, (int)yyvsp[-4].d);
    ;
    break;}
case 27:
#line 286 "Gmsh.y"
{
      Add_Face_Outer_Bound((int)yyvsp[-10].d,yyvsp[-6].c,(int)yyvsp[-4].d,yyvsp[-2].i,1);
    ;
    break;}
case 28:
#line 290 "Gmsh.y"
{
      // check the norm! Face_Bound : hole outside surface!
      yymsg(INFO, "Found a face bound");
      Add_Face_Outer_Bound((int)yyvsp[-10].d,yyvsp[-6].c,(int)yyvsp[-4].d,yyvsp[-2].i,0);
    ;
    break;}
case 29:
#line 297 "Gmsh.y"
{
      Add_Oriented_Edge((int)yyvsp[-14].d,yyvsp[-10].c,(int)yyvsp[-4].d,yyvsp[-2].i);
    ;
    break;}
case 30:
#line 301 "Gmsh.y"
{
      Add_Edge_Loop((int)yyvsp[-8].d,yyvsp[-4].c,yyvsp[-2].l);
    ;
    break;}
case 31:
#line 306 "Gmsh.y"
{
      Add_Advanced_Face((int)yyvsp[-12].d,yyvsp[-8].c,yyvsp[-6].l,(int)yyvsp[-4].d,yyvsp[-2].i);
    ;
    break;}
case 32:
#line 310 "Gmsh.y"
{
      Add_Vertex_Point((int)yyvsp[-8].d,yyvsp[-4].c,(int)yyvsp[-2].d);
    ;
    break;}
case 33:
#line 314 "Gmsh.y"
{
    ;
    break;}
case 34:
#line 318 "Gmsh.y"
{
      Add_Axis2_Placement3D  ( (int)yyvsp[-12].d, (int)yyvsp[-4].d, (int)yyvsp[-2].d, (int)yyvsp[-6].d);
    ;
    break;}
case 35:
#line 322 "Gmsh.y"
{
      Add_Direction((int)yyvsp[-8].d , yyvsp[-4].c, yyvsp[-2].v[0], yyvsp[-2].v[1], yyvsp[-2].v[2]);
    ;
    break;}
case 36:
#line 326 "Gmsh.y"
{
      Add_Plane((int)yyvsp[-8].d,yyvsp[-4].c,(int)yyvsp[-2].d);
    ;
    break;}
case 37:
#line 330 "Gmsh.y"
{
      Add_Line ((int)yyvsp[-10].d, yyvsp[-6].c , (int) yyvsp[-4].d, (int)yyvsp[-2].d);
    ;
    break;}
case 38:
#line 334 "Gmsh.y"
{
      yymsg(INFO, "Found a closed shell");
      Add_Closed_Shell((int)yyvsp[-8].d, yyvsp[-4].c , yyvsp[-2].l);
    ;
    break;}
case 39:
#line 340 "Gmsh.y"
{
    ;
    break;}
case 40:
#line 343 "Gmsh.y"
{
    ;
    break;}
case 41:
#line 346 "Gmsh.y"
{
      Add_Cylinder ((int)yyvsp[-10].d, yyvsp[-6].c , (int)yyvsp[-4].d, yyvsp[-2].d);
    ;
    break;}
case 42:
#line 350 "Gmsh.y"
{
      Add_Cone ((int)yyvsp[-12].d, yyvsp[-8].c , (int)yyvsp[-6].d, yyvsp[-4].d,yyvsp[-2].d);
    ;
    break;}
case 43:
#line 354 "Gmsh.y"
{
      Add_Torus ((int)yyvsp[-12].d, yyvsp[-8].c , (int)yyvsp[-6].d, yyvsp[-4].d,yyvsp[-2].d);
    ;
    break;}
case 44:
#line 358 "Gmsh.y"
{
      Add_Circle((int) yyvsp[-10].d, yyvsp[-6].c, (int) yyvsp[-4].d, yyvsp[-2].d);
    ;
    break;}
case 45:
#line 362 "Gmsh.y"
{
      Add_Ellipse((int) yyvsp[-12].d, yyvsp[-8].c, (int) yyvsp[-6].d, yyvsp[-4].d, yyvsp[-2].d);
    ;
    break;}
case 46:
#line 367 "Gmsh.y"
{
    ;
    break;}
case 47:
#line 370 "Gmsh.y"
{
    ;
    break;}
case 48:
#line 374 "Gmsh.y"
{
    ;
    break;}
case 49:
#line 377 "Gmsh.y"
{
    ;
    break;}
case 50:
#line 381 "Gmsh.y"
{
    ;
    break;}
case 51:
#line 384 "Gmsh.y"
{
    ;
    break;}
case 52:
#line 387 "Gmsh.y"
{
    ;
    break;}
case 53:
#line 395 "Gmsh.y"
{
  ;
    break;}
case 54:
#line 398 "Gmsh.y"
{
      yymsg(INFO, "Gmsh file format read");
    ;
    break;}
case 55:
#line 404 "Gmsh.y"
{ return 1; ;
    break;}
case 56:
#line 405 "Gmsh.y"
{ return 1; ;
    break;}
case 57:
#line 406 "Gmsh.y"
{ return 1; ;
    break;}
case 58:
#line 407 "Gmsh.y"
{ return 1; ;
    break;}
case 59:
#line 408 "Gmsh.y"
{ return 1; ;
    break;}
case 60:
#line 409 "Gmsh.y"
{ return 1; ;
    break;}
case 61:
#line 410 "Gmsh.y"
{ return 1; ;
    break;}
case 62:
#line 411 "Gmsh.y"
{ return 1; ;
    break;}
case 63:
#line 412 "Gmsh.y"
{ return 1; ;
    break;}
case 64:
#line 413 "Gmsh.y"
{ return 1; ;
    break;}
case 65:
#line 414 "Gmsh.y"
{ return 1; ;
    break;}
case 66:
#line 415 "Gmsh.y"
{ return 1; ;
    break;}
case 67:
#line 416 "Gmsh.y"
{ return 1; ;
    break;}
case 68:
#line 421 "Gmsh.y"
{
      Msg(DIRECT, yyvsp[-2].c);
    ;
    break;}
case 69:
#line 425 "Gmsh.y"
{
      i = PrintListOfDouble(yyvsp[-4].c,yyvsp[-2].l,tmpstring);
      if(i<0) 
	yymsg(GERROR, "Too few arguments in Printf");
      else if(i>0)
	yymsg(GERROR, "Too many arguments (%d) in Printf", i);
      else
	Msg(DIRECT, tmpstring);
      List_Delete(yyvsp[-2].l);
    ;
    break;}
case 70:
#line 441 "Gmsh.y"
{ 
      if(!strcmp(yyvsp[-5].c, "View")) EndView(View, 1, yyname, yyvsp[-4].c); 
    ;
    break;}
case 71:
#line 445 "Gmsh.y"
{
      if(!strcmp(yyvsp[-7].c, "View")) EndView(View, 1, yyname, yyvsp[-6].c);
    ;
    break;}
case 72:
#line 452 "Gmsh.y"
{
      View = BeginView(1); 
    ;
    break;}
case 99:
#line 485 "Gmsh.y"
{ List_Add(View->SP, &yyvsp[0].d) ; ;
    break;}
case 100:
#line 487 "Gmsh.y"
{ List_Add(View->SP, &yyvsp[0].d) ; ;
    break;}
case 101:
#line 492 "Gmsh.y"
{ 
      List_Add(View->SP, &yyvsp[-5].d); List_Add(View->SP, &yyvsp[-3].d);
      List_Add(View->SP, &yyvsp[-1].d);
    ;
    break;}
case 102:
#line 497 "Gmsh.y"
{
      View->NbSP++ ;
    ;
    break;}
case 103:
#line 504 "Gmsh.y"
{ List_Add(View->VP, &yyvsp[0].d) ; ;
    break;}
case 104:
#line 506 "Gmsh.y"
{ List_Add(View->VP, &yyvsp[0].d) ; ;
    break;}
case 105:
#line 511 "Gmsh.y"
{ 
      List_Add(View->VP, &yyvsp[-5].d); List_Add(View->VP, &yyvsp[-3].d);
      List_Add(View->VP, &yyvsp[-1].d); 
    ;
    break;}
case 106:
#line 516 "Gmsh.y"
{
      View->NbVP++ ;
    ;
    break;}
case 107:
#line 523 "Gmsh.y"
{ List_Add(View->TP, &yyvsp[0].d) ; ;
    break;}
case 108:
#line 525 "Gmsh.y"
{ List_Add(View->TP, &yyvsp[0].d) ; ;
    break;}
case 109:
#line 530 "Gmsh.y"
{ 
      List_Add(View->TP, &yyvsp[-5].d); List_Add(View->TP, &yyvsp[-3].d);
      List_Add(View->TP, &yyvsp[-1].d);
    ;
    break;}
case 110:
#line 535 "Gmsh.y"
{
      View->NbTP++ ;
    ;
    break;}
case 111:
#line 542 "Gmsh.y"
{ List_Add(View->SL, &yyvsp[0].d) ; ;
    break;}
case 112:
#line 544 "Gmsh.y"
{ List_Add(View->SL, &yyvsp[0].d) ; ;
    break;}
case 113:
#line 550 "Gmsh.y"
{ 
      List_Add(View->SL, &yyvsp[-11].d); List_Add(View->SL, &yyvsp[-5].d);
      List_Add(View->SL, &yyvsp[-9].d); List_Add(View->SL, &yyvsp[-3].d);
      List_Add(View->SL, &yyvsp[-7].d); List_Add(View->SL, &yyvsp[-1].d);
    ;
    break;}
case 114:
#line 556 "Gmsh.y"
{
      View->NbSL++ ;
    ;
    break;}
case 115:
#line 563 "Gmsh.y"
{ List_Add(View->VL, &yyvsp[0].d) ; ;
    break;}
case 116:
#line 565 "Gmsh.y"
{ List_Add(View->VL, &yyvsp[0].d) ; ;
    break;}
case 117:
#line 571 "Gmsh.y"
{ 
      List_Add(View->VL, &yyvsp[-11].d); List_Add(View->VL, &yyvsp[-5].d);
      List_Add(View->VL, &yyvsp[-9].d); List_Add(View->VL, &yyvsp[-3].d);
      List_Add(View->VL, &yyvsp[-7].d); List_Add(View->VL, &yyvsp[-1].d);
    ;
    break;}
case 118:
#line 577 "Gmsh.y"
{
      View->NbVL++ ;
    ;
    break;}
case 119:
#line 584 "Gmsh.y"
{ List_Add(View->TL, &yyvsp[0].d) ; ;
    break;}
case 120:
#line 586 "Gmsh.y"
{ List_Add(View->TL, &yyvsp[0].d) ; ;
    break;}
case 121:
#line 592 "Gmsh.y"
{ 
      List_Add(View->TL, &yyvsp[-11].d); List_Add(View->TL, &yyvsp[-5].d);
      List_Add(View->TL, &yyvsp[-9].d); List_Add(View->TL, &yyvsp[-3].d);
      List_Add(View->TL, &yyvsp[-7].d); List_Add(View->TL, &yyvsp[-1].d);
    ;
    break;}
case 122:
#line 598 "Gmsh.y"
{
      View->NbTL++ ;
    ;
    break;}
case 123:
#line 605 "Gmsh.y"
{ List_Add(View->ST, &yyvsp[0].d) ; ;
    break;}
case 124:
#line 607 "Gmsh.y"
{ List_Add(View->ST, &yyvsp[0].d) ; ;
    break;}
case 125:
#line 614 "Gmsh.y"
{ 
      List_Add(View->ST, &yyvsp[-17].d); List_Add(View->ST, &yyvsp[-11].d);
      List_Add(View->ST, &yyvsp[-5].d);
      List_Add(View->ST, &yyvsp[-15].d); List_Add(View->ST, &yyvsp[-9].d);
      List_Add(View->ST, &yyvsp[-3].d);
      List_Add(View->ST, &yyvsp[-13].d); List_Add(View->ST, &yyvsp[-7].d);
      List_Add(View->ST, &yyvsp[-1].d);
    ;
    break;}
case 126:
#line 623 "Gmsh.y"
{
      View->NbST++ ;
    ;
    break;}
case 127:
#line 630 "Gmsh.y"
{ List_Add(View->VT, &yyvsp[0].d) ; ;
    break;}
case 128:
#line 632 "Gmsh.y"
{ List_Add(View->VT, &yyvsp[0].d) ; ;
    break;}
case 129:
#line 639 "Gmsh.y"
{ 
      List_Add(View->VT, &yyvsp[-17].d); List_Add(View->VT, &yyvsp[-11].d);
      List_Add(View->VT, &yyvsp[-5].d);
      List_Add(View->VT, &yyvsp[-15].d); List_Add(View->VT, &yyvsp[-9].d);
      List_Add(View->VT, &yyvsp[-3].d);
      List_Add(View->VT, &yyvsp[-13].d); List_Add(View->VT, &yyvsp[-7].d);
      List_Add(View->VT, &yyvsp[-1].d);
    ;
    break;}
case 130:
#line 648 "Gmsh.y"
{
      View->NbVT++ ;
    ;
    break;}
case 131:
#line 655 "Gmsh.y"
{ List_Add(View->TT, &yyvsp[0].d) ; ;
    break;}
case 132:
#line 657 "Gmsh.y"
{ List_Add(View->TT, &yyvsp[0].d) ; ;
    break;}
case 133:
#line 664 "Gmsh.y"
{ 
      List_Add(View->TT, &yyvsp[-17].d); List_Add(View->TT, &yyvsp[-11].d);
      List_Add(View->TT, &yyvsp[-5].d);
      List_Add(View->TT, &yyvsp[-15].d); List_Add(View->TT, &yyvsp[-9].d);
      List_Add(View->TT, &yyvsp[-3].d);
      List_Add(View->TT, &yyvsp[-13].d); List_Add(View->TT, &yyvsp[-7].d);
      List_Add(View->TT, &yyvsp[-1].d);
    ;
    break;}
case 134:
#line 673 "Gmsh.y"
{
      View->NbTT++ ;
    ;
    break;}
case 135:
#line 680 "Gmsh.y"
{ List_Add(View->SQ, &yyvsp[0].d) ; ;
    break;}
case 136:
#line 682 "Gmsh.y"
{ List_Add(View->SQ, &yyvsp[0].d) ; ;
    break;}
case 137:
#line 690 "Gmsh.y"
{ 
      List_Add(View->SQ, &yyvsp[-23].d);  List_Add(View->SQ, &yyvsp[-17].d);
      List_Add(View->SQ, &yyvsp[-11].d); List_Add(View->SQ, &yyvsp[-5].d);
      List_Add(View->SQ, &yyvsp[-21].d);  List_Add(View->SQ, &yyvsp[-15].d);
      List_Add(View->SQ, &yyvsp[-9].d); List_Add(View->SQ, &yyvsp[-3].d);
      List_Add(View->SQ, &yyvsp[-19].d);  List_Add(View->SQ, &yyvsp[-13].d);
      List_Add(View->SQ, &yyvsp[-7].d); List_Add(View->SQ, &yyvsp[-1].d);
    ;
    break;}
case 138:
#line 699 "Gmsh.y"
{
      View->NbSQ++ ;
    ;
    break;}
case 139:
#line 706 "Gmsh.y"
{ List_Add(View->VQ, &yyvsp[0].d) ; ;
    break;}
case 140:
#line 708 "Gmsh.y"
{ List_Add(View->VQ, &yyvsp[0].d) ; ;
    break;}
case 141:
#line 716 "Gmsh.y"
{ 
      List_Add(View->VQ, &yyvsp[-23].d);  List_Add(View->VQ, &yyvsp[-17].d);
      List_Add(View->VQ, &yyvsp[-11].d); List_Add(View->VQ, &yyvsp[-5].d);
      List_Add(View->VQ, &yyvsp[-21].d);  List_Add(View->VQ, &yyvsp[-15].d);
      List_Add(View->VQ, &yyvsp[-9].d); List_Add(View->VQ, &yyvsp[-3].d);
      List_Add(View->VQ, &yyvsp[-19].d);  List_Add(View->VQ, &yyvsp[-13].d);
      List_Add(View->VQ, &yyvsp[-7].d); List_Add(View->VQ, &yyvsp[-1].d);
    ;
    break;}
case 142:
#line 725 "Gmsh.y"
{
      View->NbVQ++ ;
    ;
    break;}
case 143:
#line 732 "Gmsh.y"
{ List_Add(View->TQ, &yyvsp[0].d) ; ;
    break;}
case 144:
#line 734 "Gmsh.y"
{ List_Add(View->TQ, &yyvsp[0].d) ; ;
    break;}
case 145:
#line 742 "Gmsh.y"
{ 
      List_Add(View->TQ, &yyvsp[-23].d);  List_Add(View->TQ, &yyvsp[-17].d);
      List_Add(View->TQ, &yyvsp[-11].d); List_Add(View->TQ, &yyvsp[-5].d);
      List_Add(View->TQ, &yyvsp[-21].d);  List_Add(View->TQ, &yyvsp[-15].d);
      List_Add(View->TQ, &yyvsp[-9].d); List_Add(View->TQ, &yyvsp[-3].d);
      List_Add(View->TQ, &yyvsp[-19].d);  List_Add(View->TQ, &yyvsp[-13].d);
      List_Add(View->TQ, &yyvsp[-7].d); List_Add(View->TQ, &yyvsp[-1].d);
    ;
    break;}
case 146:
#line 751 "Gmsh.y"
{
      View->NbTQ++ ;
    ;
    break;}
case 147:
#line 758 "Gmsh.y"
{ List_Add(View->SS, &yyvsp[0].d) ; ;
    break;}
case 148:
#line 760 "Gmsh.y"
{ List_Add(View->SS, &yyvsp[0].d) ; ;
    break;}
case 149:
#line 768 "Gmsh.y"
{ 
      List_Add(View->SS, &yyvsp[-23].d);  List_Add(View->SS, &yyvsp[-17].d);
      List_Add(View->SS, &yyvsp[-11].d); List_Add(View->SS, &yyvsp[-5].d);
      List_Add(View->SS, &yyvsp[-21].d);  List_Add(View->SS, &yyvsp[-15].d);
      List_Add(View->SS, &yyvsp[-9].d); List_Add(View->SS, &yyvsp[-3].d);
      List_Add(View->SS, &yyvsp[-19].d);  List_Add(View->SS, &yyvsp[-13].d);
      List_Add(View->SS, &yyvsp[-7].d); List_Add(View->SS, &yyvsp[-1].d);
    ;
    break;}
case 150:
#line 777 "Gmsh.y"
{
      View->NbSS++ ;
    ;
    break;}
case 151:
#line 784 "Gmsh.y"
{ List_Add(View->VS, &yyvsp[0].d) ; ;
    break;}
case 152:
#line 786 "Gmsh.y"
{ List_Add(View->VS, &yyvsp[0].d) ; ;
    break;}
case 153:
#line 794 "Gmsh.y"
{ 
      List_Add(View->VS, &yyvsp[-23].d);  List_Add(View->VS, &yyvsp[-17].d);
      List_Add(View->VS, &yyvsp[-11].d); List_Add(View->VS, &yyvsp[-5].d);
      List_Add(View->VS, &yyvsp[-21].d);  List_Add(View->VS, &yyvsp[-15].d);
      List_Add(View->VS, &yyvsp[-9].d); List_Add(View->VS, &yyvsp[-3].d);
      List_Add(View->VS, &yyvsp[-19].d);  List_Add(View->VS, &yyvsp[-13].d);
      List_Add(View->VS, &yyvsp[-7].d); List_Add(View->VS, &yyvsp[-1].d);
    ;
    break;}
case 154:
#line 803 "Gmsh.y"
{
      View->NbVS++ ;
    ;
    break;}
case 155:
#line 810 "Gmsh.y"
{ List_Add(View->TS, &yyvsp[0].d) ; ;
    break;}
case 156:
#line 812 "Gmsh.y"
{ List_Add(View->TS, &yyvsp[0].d) ; ;
    break;}
case 157:
#line 820 "Gmsh.y"
{ 
      List_Add(View->TS, &yyvsp[-23].d);  List_Add(View->TS, &yyvsp[-17].d);
      List_Add(View->TS, &yyvsp[-11].d); List_Add(View->TS, &yyvsp[-5].d);
      List_Add(View->TS, &yyvsp[-21].d);  List_Add(View->TS, &yyvsp[-15].d);
      List_Add(View->TS, &yyvsp[-9].d); List_Add(View->TS, &yyvsp[-3].d);
      List_Add(View->TS, &yyvsp[-19].d);  List_Add(View->TS, &yyvsp[-13].d);
      List_Add(View->TS, &yyvsp[-7].d); List_Add(View->TS, &yyvsp[-1].d);
    ;
    break;}
case 158:
#line 829 "Gmsh.y"
{
      View->NbTS++ ;
    ;
    break;}
case 159:
#line 836 "Gmsh.y"
{ List_Add(View->SH, &yyvsp[0].d) ; ;
    break;}
case 160:
#line 838 "Gmsh.y"
{ List_Add(View->SH, &yyvsp[0].d) ; ;
    break;}
case 161:
#line 850 "Gmsh.y"
{ 
      List_Add(View->SH, &yyvsp[-47].d);  List_Add(View->SH, &yyvsp[-41].d);
      List_Add(View->SH, &yyvsp[-35].d); List_Add(View->SH, &yyvsp[-29].d);
      List_Add(View->SH, &yyvsp[-23].d); List_Add(View->SH, &yyvsp[-17].d);
      List_Add(View->SH, &yyvsp[-11].d); List_Add(View->SH, &yyvsp[-5].d);
      List_Add(View->SH, &yyvsp[-45].d);  List_Add(View->SH, &yyvsp[-39].d);
      List_Add(View->SH, &yyvsp[-33].d); List_Add(View->SH, &yyvsp[-27].d);
      List_Add(View->SH, &yyvsp[-21].d); List_Add(View->SH, &yyvsp[-15].d);
      List_Add(View->SH, &yyvsp[-9].d); List_Add(View->SH, &yyvsp[-3].d);
      List_Add(View->SH, &yyvsp[-43].d);  List_Add(View->SH, &yyvsp[-37].d);
      List_Add(View->SH, &yyvsp[-31].d); List_Add(View->SH, &yyvsp[-25].d);
      List_Add(View->SH, &yyvsp[-19].d); List_Add(View->SH, &yyvsp[-13].d);
      List_Add(View->SH, &yyvsp[-7].d); List_Add(View->SH, &yyvsp[-1].d);
    ;
    break;}
case 162:
#line 865 "Gmsh.y"
{
      View->NbSH++ ;
    ;
    break;}
case 163:
#line 872 "Gmsh.y"
{ List_Add(View->VH, &yyvsp[0].d) ; ;
    break;}
case 164:
#line 874 "Gmsh.y"
{ List_Add(View->VH, &yyvsp[0].d) ; ;
    break;}
case 165:
#line 886 "Gmsh.y"
{ 
      List_Add(View->VH, &yyvsp[-47].d);  List_Add(View->VH, &yyvsp[-41].d);
      List_Add(View->VH, &yyvsp[-35].d); List_Add(View->VH, &yyvsp[-29].d);
      List_Add(View->VH, &yyvsp[-23].d); List_Add(View->VH, &yyvsp[-17].d);
      List_Add(View->VH, &yyvsp[-11].d); List_Add(View->VH, &yyvsp[-5].d);
      List_Add(View->VH, &yyvsp[-45].d);  List_Add(View->VH, &yyvsp[-39].d);
      List_Add(View->VH, &yyvsp[-33].d); List_Add(View->VH, &yyvsp[-27].d);
      List_Add(View->VH, &yyvsp[-21].d); List_Add(View->VH, &yyvsp[-15].d);
      List_Add(View->VH, &yyvsp[-9].d); List_Add(View->VH, &yyvsp[-3].d);
      List_Add(View->VH, &yyvsp[-43].d);  List_Add(View->VH, &yyvsp[-37].d);
      List_Add(View->VH, &yyvsp[-31].d); List_Add(View->VH, &yyvsp[-25].d);
      List_Add(View->VH, &yyvsp[-19].d); List_Add(View->VH, &yyvsp[-13].d);
      List_Add(View->VH, &yyvsp[-7].d); List_Add(View->VH, &yyvsp[-1].d);
    ;
    break;}
case 166:
#line 901 "Gmsh.y"
{
      View->NbVH++ ;
    ;
    break;}
case 167:
#line 908 "Gmsh.y"
{ List_Add(View->TH, &yyvsp[0].d) ; ;
    break;}
case 168:
#line 910 "Gmsh.y"
{ List_Add(View->TH, &yyvsp[0].d) ; ;
    break;}
case 169:
#line 922 "Gmsh.y"
{ 
      List_Add(View->TH, &yyvsp[-47].d);  List_Add(View->TH, &yyvsp[-41].d);
      List_Add(View->TH, &yyvsp[-35].d); List_Add(View->TH, &yyvsp[-29].d);
      List_Add(View->TH, &yyvsp[-23].d); List_Add(View->TH, &yyvsp[-17].d);
      List_Add(View->TH, &yyvsp[-11].d); List_Add(View->TH, &yyvsp[-5].d);
      List_Add(View->TH, &yyvsp[-45].d);  List_Add(View->TH, &yyvsp[-39].d);
      List_Add(View->TH, &yyvsp[-33].d); List_Add(View->TH, &yyvsp[-27].d);
      List_Add(View->TH, &yyvsp[-21].d); List_Add(View->TH, &yyvsp[-15].d);
      List_Add(View->TH, &yyvsp[-9].d); List_Add(View->TH, &yyvsp[-3].d);
      List_Add(View->TH, &yyvsp[-43].d);  List_Add(View->TH, &yyvsp[-37].d);
      List_Add(View->TH, &yyvsp[-31].d); List_Add(View->TH, &yyvsp[-25].d);
      List_Add(View->TH, &yyvsp[-19].d); List_Add(View->TH, &yyvsp[-13].d);
      List_Add(View->TH, &yyvsp[-7].d); List_Add(View->TH, &yyvsp[-1].d);
    ;
    break;}
case 170:
#line 937 "Gmsh.y"
{
      View->NbTH++ ;
    ;
    break;}
case 171:
#line 944 "Gmsh.y"
{ List_Add(View->SI, &yyvsp[0].d) ; ;
    break;}
case 172:
#line 946 "Gmsh.y"
{ List_Add(View->SI, &yyvsp[0].d) ; ;
    break;}
case 173:
#line 956 "Gmsh.y"
{ 
      List_Add(View->SI, &yyvsp[-35].d);  List_Add(View->SI, &yyvsp[-29].d);
      List_Add(View->SI, &yyvsp[-23].d); List_Add(View->SI, &yyvsp[-17].d);
      List_Add(View->SI, &yyvsp[-11].d); List_Add(View->SI, &yyvsp[-5].d);
      List_Add(View->SI, &yyvsp[-33].d);  List_Add(View->SI, &yyvsp[-27].d);
      List_Add(View->SI, &yyvsp[-21].d); List_Add(View->SI, &yyvsp[-15].d);
      List_Add(View->SI, &yyvsp[-9].d); List_Add(View->SI, &yyvsp[-3].d);
      List_Add(View->SI, &yyvsp[-31].d);  List_Add(View->SI, &yyvsp[-25].d);
      List_Add(View->SI, &yyvsp[-19].d); List_Add(View->SI, &yyvsp[-13].d);
      List_Add(View->SI, &yyvsp[-7].d); List_Add(View->SI, &yyvsp[-1].d);
    ;
    break;}
case 174:
#line 968 "Gmsh.y"
{
      View->NbSI++ ;
    ;
    break;}
case 175:
#line 975 "Gmsh.y"
{ List_Add(View->VI, &yyvsp[0].d) ; ;
    break;}
case 176:
#line 977 "Gmsh.y"
{ List_Add(View->VI, &yyvsp[0].d) ; ;
    break;}
case 177:
#line 987 "Gmsh.y"
{ 
      List_Add(View->VI, &yyvsp[-35].d);  List_Add(View->VI, &yyvsp[-29].d);
      List_Add(View->VI, &yyvsp[-23].d); List_Add(View->VI, &yyvsp[-17].d);
      List_Add(View->VI, &yyvsp[-11].d); List_Add(View->VI, &yyvsp[-5].d);
      List_Add(View->VI, &yyvsp[-33].d);  List_Add(View->VI, &yyvsp[-27].d);
      List_Add(View->VI, &yyvsp[-21].d); List_Add(View->VI, &yyvsp[-15].d);
      List_Add(View->VI, &yyvsp[-9].d); List_Add(View->VI, &yyvsp[-3].d);
      List_Add(View->VI, &yyvsp[-31].d);  List_Add(View->VI, &yyvsp[-25].d);
      List_Add(View->VI, &yyvsp[-19].d); List_Add(View->VI, &yyvsp[-13].d);
      List_Add(View->VI, &yyvsp[-7].d); List_Add(View->VI, &yyvsp[-1].d);
    ;
    break;}
case 178:
#line 999 "Gmsh.y"
{
      View->NbVI++ ;
    ;
    break;}
case 179:
#line 1006 "Gmsh.y"
{ List_Add(View->TI, &yyvsp[0].d) ; ;
    break;}
case 180:
#line 1008 "Gmsh.y"
{ List_Add(View->TI, &yyvsp[0].d) ; ;
    break;}
case 181:
#line 1018 "Gmsh.y"
{ 
      List_Add(View->TI, &yyvsp[-35].d);  List_Add(View->TI, &yyvsp[-29].d);
      List_Add(View->TI, &yyvsp[-23].d); List_Add(View->TI, &yyvsp[-17].d);
      List_Add(View->TI, &yyvsp[-11].d); List_Add(View->TI, &yyvsp[-5].d);
      List_Add(View->TI, &yyvsp[-33].d);  List_Add(View->TI, &yyvsp[-27].d);
      List_Add(View->TI, &yyvsp[-21].d); List_Add(View->TI, &yyvsp[-15].d);
      List_Add(View->TI, &yyvsp[-9].d); List_Add(View->TI, &yyvsp[-3].d);
      List_Add(View->TI, &yyvsp[-31].d);  List_Add(View->TI, &yyvsp[-25].d);
      List_Add(View->TI, &yyvsp[-19].d); List_Add(View->TI, &yyvsp[-13].d);
      List_Add(View->TI, &yyvsp[-7].d); List_Add(View->TI, &yyvsp[-1].d);
    ;
    break;}
case 182:
#line 1030 "Gmsh.y"
{
      View->NbTI++ ;
    ;
    break;}
case 183:
#line 1037 "Gmsh.y"
{ List_Add(View->SY, &yyvsp[0].d) ; ;
    break;}
case 184:
#line 1039 "Gmsh.y"
{ List_Add(View->SY, &yyvsp[0].d) ; ;
    break;}
case 185:
#line 1048 "Gmsh.y"
{ 
      List_Add(View->SY, &yyvsp[-29].d);  List_Add(View->SY, &yyvsp[-23].d);
      List_Add(View->SY, &yyvsp[-17].d); List_Add(View->SY, &yyvsp[-11].d);
      List_Add(View->SY, &yyvsp[-5].d);
      List_Add(View->SY, &yyvsp[-27].d);  List_Add(View->SY, &yyvsp[-21].d);
      List_Add(View->SY, &yyvsp[-15].d); List_Add(View->SY, &yyvsp[-9].d);
      List_Add(View->SY, &yyvsp[-3].d);
      List_Add(View->SY, &yyvsp[-25].d);  List_Add(View->SY, &yyvsp[-19].d);
      List_Add(View->SY, &yyvsp[-13].d); List_Add(View->SY, &yyvsp[-7].d);
      List_Add(View->SY, &yyvsp[-1].d);
    ;
    break;}
case 186:
#line 1060 "Gmsh.y"
{
      View->NbSY++ ;
    ;
    break;}
case 187:
#line 1067 "Gmsh.y"
{ List_Add(View->VY, &yyvsp[0].d) ; ;
    break;}
case 188:
#line 1069 "Gmsh.y"
{ List_Add(View->VY, &yyvsp[0].d) ; ;
    break;}
case 189:
#line 1078 "Gmsh.y"
{ 
      List_Add(View->VY, &yyvsp[-29].d);  List_Add(View->VY, &yyvsp[-23].d);
      List_Add(View->VY, &yyvsp[-17].d); List_Add(View->VY, &yyvsp[-11].d);
      List_Add(View->VY, &yyvsp[-5].d);
      List_Add(View->VY, &yyvsp[-27].d);  List_Add(View->VY, &yyvsp[-21].d);
      List_Add(View->VY, &yyvsp[-15].d); List_Add(View->VY, &yyvsp[-9].d);
      List_Add(View->VY, &yyvsp[-3].d);
      List_Add(View->VY, &yyvsp[-25].d);  List_Add(View->VY, &yyvsp[-19].d);
      List_Add(View->VY, &yyvsp[-13].d); List_Add(View->VY, &yyvsp[-7].d);
      List_Add(View->VY, &yyvsp[-1].d);
    ;
    break;}
case 190:
#line 1090 "Gmsh.y"
{
      View->NbVY++ ;
    ;
    break;}
case 191:
#line 1097 "Gmsh.y"
{ List_Add(View->TY, &yyvsp[0].d) ; ;
    break;}
case 192:
#line 1099 "Gmsh.y"
{ List_Add(View->TY, &yyvsp[0].d) ; ;
    break;}
case 193:
#line 1108 "Gmsh.y"
{ 
      List_Add(View->TY, &yyvsp[-29].d);  List_Add(View->TY, &yyvsp[-23].d);
      List_Add(View->TY, &yyvsp[-17].d); List_Add(View->TY, &yyvsp[-11].d);
      List_Add(View->TY, &yyvsp[-5].d);
      List_Add(View->TY, &yyvsp[-27].d);  List_Add(View->TY, &yyvsp[-21].d);
      List_Add(View->TY, &yyvsp[-15].d); List_Add(View->TY, &yyvsp[-9].d);
      List_Add(View->TY, &yyvsp[-3].d);
      List_Add(View->TY, &yyvsp[-25].d);  List_Add(View->TY, &yyvsp[-19].d);
      List_Add(View->TY, &yyvsp[-13].d); List_Add(View->TY, &yyvsp[-7].d);
      List_Add(View->TY, &yyvsp[-1].d);
    ;
    break;}
case 194:
#line 1120 "Gmsh.y"
{
      View->NbTY++ ;
    ;
    break;}
case 195:
#line 1127 "Gmsh.y"
{ 
      for(i=0; i<(int)strlen(yyvsp[0].c)+1; i++) List_Add(View->T2C, &yyvsp[0].c[i]) ; 
      Free(yyvsp[0].c);
    ;
    break;}
case 196:
#line 1132 "Gmsh.y"
{ 
      for(i=0; i<(int)strlen(yyvsp[0].c)+1; i++) List_Add(View->T2C, &yyvsp[0].c[i]) ; 
      Free(yyvsp[0].c);
    ;
    break;}
case 197:
#line 1140 "Gmsh.y"
{ 
      List_Add(View->T2D, &yyvsp[-5].d); List_Add(View->T2D, &yyvsp[-3].d);
      List_Add(View->T2D, &yyvsp[-1].d); 
      d = List_Nbr(View->T2C);
      List_Add(View->T2D, &d); 
    ;
    break;}
case 198:
#line 1147 "Gmsh.y"
{
      View->NbT2++ ;
    ;
    break;}
case 199:
#line 1154 "Gmsh.y"
{ 
      for(i=0; i<(int)strlen(yyvsp[0].c)+1; i++) List_Add(View->T3C, &yyvsp[0].c[i]) ; 
      Free(yyvsp[0].c);
    ;
    break;}
case 200:
#line 1159 "Gmsh.y"
{ 
      for(i=0; i<(int)strlen(yyvsp[0].c)+1; i++) List_Add(View->T3C, &yyvsp[0].c[i]) ; 
      Free(yyvsp[0].c);
    ;
    break;}
case 201:
#line 1167 "Gmsh.y"
{ 
      List_Add(View->T3D, &yyvsp[-7].d); List_Add(View->T3D, &yyvsp[-5].d);
      List_Add(View->T3D, &yyvsp[-3].d); List_Add(View->T3D, &yyvsp[-1].d); 
      d = List_Nbr(View->T3C);
      List_Add(View->T3D, &d); 
    ;
    break;}
case 202:
#line 1174 "Gmsh.y"
{
      View->NbT3++ ;
    ;
    break;}
case 203:
#line 1183 "Gmsh.y"
{ yyval.i = 0 ; ;
    break;}
case 204:
#line 1184 "Gmsh.y"
{ yyval.i = 1 ; ;
    break;}
case 205:
#line 1185 "Gmsh.y"
{ yyval.i = 2 ; ;
    break;}
case 206:
#line 1186 "Gmsh.y"
{ yyval.i = 3 ; ;
    break;}
case 207:
#line 1187 "Gmsh.y"
{ yyval.i = 4 ; ;
    break;}
case 208:
#line 1191 "Gmsh.y"
{ yyval.i = 1 ; ;
    break;}
case 209:
#line 1192 "Gmsh.y"
{ yyval.i = -1 ; ;
    break;}
case 210:
#line 1200 "Gmsh.y"
{
      TheSymbol.Name = yyvsp[-3].c;
      if (!(pSymbol = (Symbol*)List_PQuery(Symbol_L, &TheSymbol, CompareSymbols))){
	TheSymbol.val = List_Create(1,1,sizeof(double));
	if(!yyvsp[-2].i){
	  List_Put(TheSymbol.val, 0, &yyvsp[-1].d);
	  List_Add(Symbol_L, &TheSymbol);
	}
	else
	  yymsg(GERROR, "Unknown variable '%s'", yyvsp[-3].c) ;
      }
      else{
	pd = (double*)List_Pointer_Fast(pSymbol->val, 0) ; 
	switch(yyvsp[-2].i){
	case 0 : *pd = yyvsp[-1].d; break ;
	case 1 : *pd += yyvsp[-1].d ; break ;
	case 2 : *pd -= yyvsp[-1].d ; break ;
	case 3 : *pd *= yyvsp[-1].d ; break ;
	case 4 : 
	  if(yyvsp[-1].d) *pd /= yyvsp[-1].d ; 
	  else yymsg(GERROR, "Division by zero in '%s /= %g'", yyvsp[-3].c, yyvsp[-1].d);
	  break;
	}
      }
    ;
    break;}
case 211:
#line 1227 "Gmsh.y"
{
      TheSymbol.Name = yyvsp[-6].c;
      if (!(pSymbol = (Symbol*)List_PQuery(Symbol_L, &TheSymbol, CompareSymbols))){
	TheSymbol.val = List_Create(5,5,sizeof(double));
	if(!yyvsp[-2].i){
	  List_Put(TheSymbol.val, (int)yyvsp[-4].d, &yyvsp[-1].d);
	  List_Add(Symbol_L, &TheSymbol);
	}
	else
	  yymsg(GERROR, "Unknown variable '%s'", yyvsp[-6].c) ;
      }
      else{
	if((pd = (double*)List_Pointer_Test(pSymbol->val, (int)yyvsp[-4].d))){
	  switch(yyvsp[-2].i){
	  case 0 : *pd = yyvsp[-1].d; break ;
	  case 1 : *pd += yyvsp[-1].d ; break ;
	  case 2 : *pd -= yyvsp[-1].d ; break ;
	  case 3 : *pd *= yyvsp[-1].d ; break ;
	  case 4 : 
	    if(yyvsp[-1].d) *pd /= yyvsp[-1].d ; 
	    else yymsg(GERROR, "Division by zero in '%s[%d] /= %g'", yyvsp[-6].c, (int)yyvsp[-4].d, yyvsp[-1].d);
	    break;
	  }
	}
	else{
	  if(!yyvsp[-2].i)
	    List_Put(pSymbol->val, (int)yyvsp[-4].d, &yyvsp[-1].d);
	  else
	    yymsg(GERROR, "Uninitialized variable '%s[%d]'", yyvsp[-6].c, (int)yyvsp[-4].d) ;
	}
      }
    ;
    break;}
case 212:
#line 1261 "Gmsh.y"
{
      if(List_Nbr(yyvsp[-5].l) != List_Nbr(yyvsp[-1].l))
	yymsg(GERROR, "Incompatible array dimensions in affectation");
      else{
	TheSymbol.Name = yyvsp[-8].c;
	if (!(pSymbol = (Symbol*)List_PQuery(Symbol_L, &TheSymbol, CompareSymbols))){
	  TheSymbol.val = List_Create(5,5,sizeof(double));
	  if(!yyvsp[-2].i){
	    for(i=0 ; i<List_Nbr(yyvsp[-5].l) ; i++){
	      List_Put(TheSymbol.val, (int)(*(double*)List_Pointer(yyvsp[-5].l,i)),
		       (double*)List_Pointer(yyvsp[-1].l,i));
	    }
	    List_Add(Symbol_L, &TheSymbol);
	  }
	  else
	    yymsg(GERROR, "Unknown variable '%s'", yyvsp[-8].c) ;
	}
	else{
	  for(i=0 ; i<List_Nbr(yyvsp[-5].l) ; i++){
	    j = (int)(*(double*)List_Pointer(yyvsp[-5].l,i)) ;
	    d = *(double*)List_Pointer(yyvsp[-1].l,i) ;
	    if((pd = (double*)List_Pointer_Test(pSymbol->val, j))){
	      switch(yyvsp[-2].i){
	      case 0 : *pd = d; break ;
	      case 1 : *pd += d ; break ;
	      case 2 : *pd -= d ; break ;
	      case 3 : *pd *= d ; break ;
	      case 4 : 
		if(yyvsp[-1].l) *pd /= d ; 
		else yymsg(GERROR, "Division by zero in '%s[%d] /= %g'", yyvsp[-8].c, j, d);
		break;
	      }
	    }
	    else{
	      if(!yyvsp[-2].i)
		List_Put(pSymbol->val, j, &d);
	      else
		yymsg(GERROR, "Uninitialized variable '%s[%d]'", yyvsp[-8].c, j) ;	  
	    }
	  }
	}
      }
      List_Delete(yyvsp[-5].l);
      List_Delete(yyvsp[-1].l);
    ;
    break;}
case 213:
#line 1308 "Gmsh.y"
{
      TheSymbol.Name = yyvsp[-5].c;
      if (!(pSymbol = (Symbol*)List_PQuery(Symbol_L, &TheSymbol, CompareSymbols))){
	TheSymbol.val = List_Create(5,5,sizeof(double));
	List_Copy(yyvsp[-1].l,TheSymbol.val);
	List_Add(Symbol_L, &TheSymbol);
      }
      else{
	List_Reset(pSymbol->val);
	List_Copy(yyvsp[-1].l, pSymbol->val);
      }
      List_Delete(yyvsp[-1].l);
    ;
    break;}
case 214:
#line 1323 "Gmsh.y"
{
      TheSymbol.Name = yyvsp[-2].c;
      if (!(pSymbol = (Symbol*)List_PQuery(Symbol_L, &TheSymbol, CompareSymbols)))
	yymsg(GERROR, "Unknown variable '%s'", yyvsp[-2].c) ; 
      else
	*(double*)List_Pointer_Fast(pSymbol->val, 0) += yyvsp[-1].i; 
    ;
    break;}
case 215:
#line 1332 "Gmsh.y"
{
      TheSymbol.Name = yyvsp[-5].c ;
      if (!(pSymbol = (Symbol*)List_PQuery(Symbol_L, &TheSymbol, CompareSymbols)))
	yymsg(GERROR, "Unknown variable '%s'", yyvsp[-5].c) ; 
      else{
	if((pd = (double*)List_Pointer_Test(pSymbol->val, (int)yyvsp[-3].d)))
	  *pd += yyvsp[-1].i ;
	else
	  yymsg(GERROR, "Uninitialized variable '%s[%d]'", yyvsp[-5].c, (int)yyvsp[-3].d) ;
      }
    ;
    break;}
case 216:
#line 1347 "Gmsh.y"
{ 
      if(!(pStrCat = Get_StringOptionCategory(yyvsp[-5].c)))
	yymsg(GERROR, "Unknown string option class '%s'", yyvsp[-5].c);
      else{
	if(!(pStrOpt = (char *(*) (int, int, char *))Get_StringOption(yyvsp[-3].c, pStrCat)))
	  yymsg(GERROR, "Unknown string option '%s.%s'", yyvsp[-5].c, yyvsp[-3].c);
	else
	  pStrOpt(0,GMSH_SET|GMSH_GUI,yyvsp[-1].c) ;
      }
    ;
    break;}
case 217:
#line 1359 "Gmsh.y"
{ 
      if(!(pStrCat = Get_StringOptionCategory(yyvsp[-8].c)))
	yymsg(GERROR, "Unknown string option class '%s'", yyvsp[-8].c);
      else{
	if(!(pStrOpt = (char *(*) (int, int, char *))Get_StringOption(yyvsp[-3].c, pStrCat)))
	  yymsg(GERROR, "Unknown string option '%s[%d].%s'", yyvsp[-8].c, (int)yyvsp[-6].d, yyvsp[-3].c);
	else
	  pStrOpt((int)yyvsp[-6].d,GMSH_SET|GMSH_GUI,yyvsp[-1].c) ;
      }
    ;
    break;}
case 218:
#line 1373 "Gmsh.y"
{
      if(!(pNumCat = Get_NumberOptionCategory(yyvsp[-5].c)))
	yymsg(GERROR, "Unknown numeric option class '%s'", yyvsp[-5].c);
      else{
	if(!(pNumOpt = (double (*) (int, int, double))Get_NumberOption(yyvsp[-3].c, pNumCat)))
	  yymsg(GERROR, "Unknown numeric option '%s.%s'", yyvsp[-5].c, yyvsp[-3].c);
	else{
	  switch(yyvsp[-2].i){
	  case 0 : d = yyvsp[-1].d ; break ;
	  case 1 : d = pNumOpt(0,GMSH_GET,0) + yyvsp[-1].d ; break ;
	  case 2 : d = pNumOpt(0,GMSH_GET,0) - yyvsp[-1].d ; break ;
	  case 3 : d = pNumOpt(0,GMSH_GET,0) * yyvsp[-1].d ; break ;
	  case 4 : 
	    if(yyvsp[-1].d) d = pNumOpt(0,GMSH_GET,0) / yyvsp[-1].d ; 
	    else yymsg(GERROR, "Division by zero in '%s.%s /= %g'", yyvsp[-5].c, yyvsp[-3].c, yyvsp[-1].d);
	    break;
	  }
	  pNumOpt(0,GMSH_SET|GMSH_GUI, d) ;
	}
      }
    ;
    break;}
case 219:
#line 1396 "Gmsh.y"
{
      if(!(pNumCat = Get_NumberOptionCategory(yyvsp[-8].c)))
	yymsg(GERROR, "Unknown numeric option class '%s'", yyvsp[-8].c);
      else{
	if(!(pNumOpt =  (double (*) (int, int, double))Get_NumberOption(yyvsp[-3].c, pNumCat)))
	  yymsg(GERROR, "Unknown numeric option '%s[%d].%s'", yyvsp[-8].c, (int)yyvsp[-6].d, yyvsp[-3].c);
	else{
	  switch(yyvsp[-2].i){
	  case 0 : d = yyvsp[-1].d; break ;
	  case 1 : d = pNumOpt((int)yyvsp[-6].d,GMSH_GET,0) + yyvsp[-1].d ; break ;
	  case 2 : d = pNumOpt((int)yyvsp[-6].d,GMSH_GET,0) - yyvsp[-1].d ; break ;
	  case 3 : d = pNumOpt((int)yyvsp[-6].d,GMSH_GET,0) * yyvsp[-1].d ; break ;
	  case 4 : 
	    if(yyvsp[-1].d) d = pNumOpt((int)yyvsp[-6].d,GMSH_GET,0) / yyvsp[-1].d ;
	    else yymsg(GERROR, "Division by zero in '%s[%d].%s /= %g'", 
		       yyvsp[-8].c, (int)yyvsp[-6].d, yyvsp[-3].c, yyvsp[-1].d);
	    break;
	  }
	  pNumOpt((int)yyvsp[-6].d,GMSH_SET|GMSH_GUI,d) ;
	}
      }
    ;
    break;}
case 220:
#line 1420 "Gmsh.y"
{
      if(!(pNumCat = Get_NumberOptionCategory(yyvsp[-4].c)))
	yymsg(GERROR, "Unknown numeric option class '%s'", yyvsp[-4].c);
      else{
	if(!(pNumOpt =  (double (*) (int, int, double))Get_NumberOption(yyvsp[-2].c, pNumCat)))
	  yymsg(GERROR, "Unknown numeric option '%s.%s'", yyvsp[-4].c, yyvsp[-2].c);
	else
	  pNumOpt(0,GMSH_SET|GMSH_GUI,pNumOpt(0,GMSH_GET,0)+yyvsp[-1].i) ;
      }
    ;
    break;}
case 221:
#line 1432 "Gmsh.y"
{
      if(!(pNumCat = Get_NumberOptionCategory(yyvsp[-7].c)))
	yymsg(GERROR, "Unknown numeric option class '%s'", yyvsp[-7].c);
      else{
	if(!(pNumOpt =  (double (*) (int, int, double))Get_NumberOption(yyvsp[-2].c, pNumCat)))
	  yymsg(GERROR, "Unknown numeric option '%s[%d].%s'", yyvsp[-7].c, (int)yyvsp[-5].d, yyvsp[-2].c);
	else
	  pNumOpt((int)yyvsp[-5].d,GMSH_SET|GMSH_GUI,pNumOpt((int)yyvsp[-5].d,GMSH_GET,0)+yyvsp[-1].i) ;
      }
    ;
    break;}
case 222:
#line 1446 "Gmsh.y"
{
      if(!(pColCat = Get_ColorOptionCategory(yyvsp[-7].c)))
	yymsg(GERROR, "Unknown color option class '%s'", yyvsp[-7].c);
      else{
	if(!(pColOpt =  (unsigned int (*) (int, int, unsigned int))Get_ColorOption(yyvsp[-3].c, pColCat)))
	  yymsg(GERROR, "Unknown color option '%s.Color.%s'", yyvsp[-7].c, yyvsp[-3].c);
	else
	  pColOpt(0,GMSH_SET|GMSH_GUI,yyvsp[-1].u) ;
      }
    ;
    break;}
case 223:
#line 1458 "Gmsh.y"
{
      if(!(pColCat = Get_ColorOptionCategory(yyvsp[-10].c)))
	yymsg(GERROR, "Unknown color option class '%s'", yyvsp[-10].c);
      else{
	if(!(pColOpt =  (unsigned int (*) (int, int, unsigned int))Get_ColorOption(yyvsp[-3].c, pColCat)))
	  yymsg(GERROR, "Unknown color option '%s[%d].Color.%s'", yyvsp[-10].c, (int)yyvsp[-8].d, yyvsp[-3].c);
	else
	  pColOpt((int)yyvsp[-8].d,GMSH_SET|GMSH_GUI,yyvsp[-1].u) ;
      }
    ;
    break;}
case 224:
#line 1472 "Gmsh.y"
{
      GmshColorTable *ct = Get_ColorTable(0);
      if(!ct)
	yymsg(GERROR, "View[%d] does not exist", 0);
      else{
	ct->size = List_Nbr(yyvsp[-1].l);
	if(ct->size > COLORTABLE_NBMAX_COLOR)
	  yymsg(GERROR, "Too many (%d>%d) colors in View[%d].ColorTable", 
		ct->size, COLORTABLE_NBMAX_COLOR, 0);
	else
	  for(i=0 ; i<ct->size ; i++) List_Read(yyvsp[-1].l, i, &ct->table[i]);
	if(ct->size == 1){
	  ct->size = 2;
	  ct->table[1] = ct->table[0];
	}
      }
      List_Delete(yyvsp[-1].l);
    ;
    break;}
case 225:
#line 1492 "Gmsh.y"
{
      GmshColorTable *ct = Get_ColorTable((int)yyvsp[-6].d);
      if(!ct)
	yymsg(GERROR, "View[%d] does not exist", (int)yyvsp[-6].d);
      else{
	ct->size = List_Nbr(yyvsp[-1].l);
	if(ct->size > COLORTABLE_NBMAX_COLOR)
	  yymsg(GERROR, "Too many (%d>%d) colors in View[%d].ColorTable", 
		   ct->size, COLORTABLE_NBMAX_COLOR, (int)yyvsp[-6].d);
	else
	  for(i=0 ; i<ct->size ; i++) List_Read(yyvsp[-1].l, i, &ct->table[i]);
	if(ct->size == 1){
	  ct->size = 2;
	  ct->table[1] = ct->table[0];
	}
      }
      List_Delete(yyvsp[-1].l);
    ;
    break;}
case 226:
#line 1514 "Gmsh.y"
{
      if(CTX.default_plugins){
	try {
	  GMSH_PluginManager::Instance()->SetPluginOption(yyvsp[-6].c,yyvsp[-3].c,yyvsp[-1].d); 
	}
	catch (...) {
	  yymsg(WARNING, "Unknown option '%s' or plugin '%s'",yyvsp[-3].c,yyvsp[-6].c);
	}
      }
    ;
    break;}
case 227:
#line 1526 "Gmsh.y"
{
      if(CTX.default_plugins){
	try {
	  GMSH_PluginManager::Instance()->SetPluginOption(yyvsp[-6].c,yyvsp[-3].c,yyvsp[-1].c); 
	}
	catch (...) {
	  yymsg(WARNING, "Unknown option '%s' or plugin '%s'",yyvsp[-3].c,yyvsp[-6].c);
	}
      }
    ;
    break;}
case 228:
#line 1546 "Gmsh.y"
{
      Cdbpts101((int)yyvsp[-4].d,yyvsp[-1].v[0],yyvsp[-1].v[1],yyvsp[-1].v[2],yyvsp[-1].v[3],yyvsp[-1].v[4]);
      yyval.s.Type = MSH_POINT;
      yyval.s.Num  = (int)yyvsp[-4].d;
    ;
    break;}
case 229:
#line 1553 "Gmsh.y"
{
      Cdbz101((int)yyvsp[-4].d,MSH_PHYSICAL_POINT,0,0,0,0,0,NULL,yyvsp[-1].l,NULL);
      yyval.s.Type = MSH_PHYSICAL_POINT;
      yyval.s.Num  = (int)yyvsp[-4].d;
    ;
    break;}
case 230:
#line 1559 "Gmsh.y"
{
      Vertex *v;
      Attractor *a;
      double p;
      int ip;
      for(int i=0;i<List_Nbr(yyvsp[-9].l);i++){
      	List_Read(yyvsp[-9].l,i,&p);
        ip = (int)p;
        v = FindPoint(ip,THEM);
        if(!v)
	  yymsg(WARNING, "Unknown Point %d", ip);
	else{
	  a = Create_Attractor(List_Nbr(THEM->Metric->Attractors)+1,
			       yyvsp[-6].d,yyvsp[-4].d,yyvsp[-2].d,v,NULL,NULL);
	  List_Add(THEM->Metric->Attractors,&a);
        }
      }
    ;
    break;}
case 231:
#line 1578 "Gmsh.y"
{
      for(i=0;i<List_Nbr(yyvsp[-3].l);i++){
	List_Read(yyvsp[-3].l,i,&d);
	Vertex *v = FindPoint((int)d,THEM);
	if(!v)
	  yymsg(WARNING, "Unknown Point %d", (int)d);
	else
	  v->lc = yyvsp[-1].d;
      }
    ;
    break;}
case 232:
#line 1592 "Gmsh.y"
{
      Cdbseg101((int)yyvsp[-4].d,MSH_SEGM_LINE,1,yyvsp[-1].l,NULL,-1,-1,0.,1.,NULL,NULL,NULL);
      yyval.s.Type = MSH_SEGM_LINE;
      yyval.s.Num  = (int)yyvsp[-4].d;
    ;
    break;}
case 233:
#line 1598 "Gmsh.y"
{
      Cdbseg101((int)yyvsp[-4].d,MSH_SEGM_SPLN,3,yyvsp[-1].l,NULL,-1,-1,0.,1.,NULL,NULL,NULL);
      yyval.s.Type = MSH_SEGM_SPLN;
      yyval.s.Num  = (int)yyvsp[-4].d;
    ;
    break;}
case 234:
#line 1604 "Gmsh.y"
{
      Curve *c;
      Attractor *a;
      double p;
      int ip;
      for(int i=0;i<List_Nbr(yyvsp[-9].l);i++){
      	List_Read(yyvsp[-9].l,i,&p);
        ip = (int)p;
        c = FindCurve(ip,THEM);
        if(!c)
	  yymsg(WARNING, "Unknown Curve %d", ip);
	else{
	  a = Create_Attractor(List_Nbr(THEM->Metric->Attractors)+1,
			       yyvsp[-6].d,yyvsp[-4].d,yyvsp[-2].d,NULL,c,NULL);
	  List_Add(THEM->Metric->Attractors,&a);
        }
      }
    ;
    break;}
case 235:
#line 1623 "Gmsh.y"
{
      Cdbseg101((int)yyvsp[-4].d,MSH_SEGM_CIRC,2,yyvsp[-1].l,NULL,-1,-1,0.,1.,NULL,NULL,NULL);
      yyval.s.Type = MSH_SEGM_CIRC ;
      yyval.s.Num  = (int)yyvsp[-4].d;
    ;
    break;}
case 236:
#line 1629 "Gmsh.y"
{
      Cdbseg101((int)yyvsp[-4].d,MSH_SEGM_ELLI,2,yyvsp[-1].l,NULL,-1,-1,0.,1.,NULL,NULL,NULL);
      yyval.s.Type = MSH_SEGM_ELLI ;
      yyval.s.Num  = (int)yyvsp[-4].d;
    ;
    break;}
case 237:
#line 1635 "Gmsh.y"
{
      List_T *temp;
      int i,j;
      double d;
      temp = List_Create(List_Nbr(yyvsp[-3].l),1,sizeof(int));
      for(i=0;i<List_Nbr(yyvsp[-3].l);i++){
      	List_Read(yyvsp[-3].l,i,&d);
        j = (int)d;
        List_Add(temp,&j);
      }
      AddCircleInDataBase ((int) yyvsp[-6].d, MSH_SEGM_CIRC, temp, yyvsp[-1].v);
      List_Delete(temp);
      yyval.s.Type = MSH_SEGM_CIRC ;
      yyval.s.Num  = (int)yyvsp[-6].d;
    ;
    break;}
case 238:
#line 1652 "Gmsh.y"
{
      Cdbseg101((int)yyvsp[-14].d,MSH_SEGM_PARAMETRIC,2,NULL,NULL,-1,-1,yyvsp[-10].d,yyvsp[-8].d,yyvsp[-6].c,yyvsp[-4].c,yyvsp[-2].c);
      yyval.s.Type = MSH_SEGM_PARAMETRIC ;
      yyval.s.Num  = (int)yyvsp[-14].d;
    ;
    break;}
case 239:
#line 1658 "Gmsh.y"
{
      Cdbz101((int)yyvsp[-4].d,MSH_PHYSICAL_LINE,0,0,0,0,0,NULL,yyvsp[-1].l,NULL);
      yyval.s.Type = MSH_PHYSICAL_LINE;
      yyval.s.Num  = (int)yyvsp[-4].d;
    ;
    break;}
case 240:
#line 1664 "Gmsh.y"
{
      yyval.s.Type = MSH_SEGM_LOOP;
      Cdbz101((int)yyvsp[-4].d,yyval.s.Type,0,0,0,0,0,NULL,yyvsp[-1].l,NULL);
      yyval.s.Num = (int)yyvsp[-4].d;
    ;
    break;}
case 241:
#line 1670 "Gmsh.y"
{
      if(List_Nbr(yyvsp[-1].l) > 3){
	Cdbseg101((int)yyvsp[-4].d,MSH_SEGM_BSPLN,2,yyvsp[-1].l,NULL,-1,-1,0.,1.,NULL,NULL,NULL);
	yyval.s.Type = MSH_SEGM_BSPLN;
	yyval.s.Num  = (int)yyvsp[-4].d;
      }
      else
	yymsg(GERROR, "Too few control points for BSpline %d (%d < 4)", (int)yyvsp[-4].d, 
	      List_Nbr(yyvsp[-1].l));
    ;
    break;}
case 242:
#line 1681 "Gmsh.y"
{
      if(List_Nbr(yyvsp[-1].l) > 3){
	Cdbseg101((int)yyvsp[-4].d,MSH_SEGM_BEZIER,2,yyvsp[-1].l,NULL,-1,-1,0.,1.,NULL,NULL,NULL);
	yyval.s.Type = MSH_SEGM_BSPLN;
	yyval.s.Num  = (int)yyvsp[-4].d;
      }
      else
	yymsg(GERROR, "Too few control points for Bezier %d (%d < 4)", (int)yyvsp[-4].d, 
	      List_Nbr(yyvsp[-1].l));
    ;
    break;}
case 243:
#line 1692 "Gmsh.y"
{
      List_T *Temp;
      int i;
      double d;
      if(List_Nbr(yyvsp[-5].l) + (int)yyvsp[-1].d + 1 != List_Nbr(yyvsp[-3].l)){
	yymsg(GERROR, "Wrong definition of Nurbs Curve %d: "
	      "got %d Knots, need N + D + 1 = %d + %d + 1 = %d",
	      (int)yyvsp[-8].d, 
	      List_Nbr(yyvsp[-3].l), List_Nbr(yyvsp[-5].l), (int)yyvsp[-1].d, List_Nbr(yyvsp[-5].l) + (int)yyvsp[-1].d + 1);
      }
      else{
	Temp = List_Create(List_Nbr(yyvsp[-5].l),1,sizeof(int));
	for(i=0;i<List_Nbr(yyvsp[-5].l);i++) {
	  List_Read(yyvsp[-5].l,i,&d);
	  j = (int)d;
	  List_Add(Temp,&j);
	}
	AddCurveInDataBase ((int)yyvsp[-8].d,MSH_SEGM_NURBS,(int)yyvsp[-1].d,Temp,yyvsp[-3].l,-1,-1,0.,1.);
	List_Delete(Temp);
      }
    ;
    break;}
case 244:
#line 1717 "Gmsh.y"
{
      Cdbz101((int)yyvsp[-4].d,MSH_SURF_PLAN,0,0,0,0,0,NULL,yyvsp[-1].l,NULL);
      yyval.s.Type = MSH_SURF_PLAN;
      yyval.s.Num  = (int)yyvsp[-4].d;
    ;
    break;}
case 245:
#line 1723 "Gmsh.y"
{
      Surface *s,*support;
      support = FindSurface((int)yyvsp[-4].d,THEM);
      if(!support)
	yymsg(GERROR, "Unknown Surface %d", (int)yyvsp[-4].d);
      else{
	Cdbz101((int)yyvsp[-8].d,MSH_SURF_PLAN,0,0,0,0,0,NULL,yyvsp[-2].l,NULL);
	s = FindSurface((int)yyvsp[-8].d,THEM);
	if(!s)
	  yymsg(GERROR, "Unknown Surface %d", (int)yyvsp[-8].d);
	else{
	  s->Typ =  MSH_SURF_TRIMMED;
	  s->Support = support;
	  yyval.s.Type = MSH_SURF_TRIMMED;
	  yyval.s.Num  = (int)yyvsp[-8].d;
	}
      }
    ;
    break;}
case 246:
#line 1742 "Gmsh.y"
{
      List_Read(yyvsp[-1].l,0,&d);
      i = (int)d;
      EdgeLoop *el = FindEdgeLoop(i,THEM);
      if(!el)
	yymsg(GERROR, "Unknown Line Loop %d", i);
      else{
	j = List_Nbr(el->Curves);
	if(j==4)
	  yyval.s.Type = MSH_SURF_REGL;
	else if(j==3)
	  yyval.s.Type  = MSH_SURF_TRIC;
	else
	  yymsg(GERROR, "Wrong definition of Ruled Surface %d: "
		   "%d borders instead of 3 or 4", 
		   (int)yyvsp[-4].d, j);
	Cdbz101((int)yyvsp[-4].d,yyval.s.Type,0,0,0,0,0,NULL,yyvsp[-1].l,NULL);
	yyval.s.Num = (int)yyvsp[-4].d;
      }
    ;
    break;}
case 247:
#line 1765 "Gmsh.y"
{
      CreateNurbsSurface ( (int) yyvsp[-16].d , (int)yyvsp[-4].d , (int)yyvsp[-2].d  , yyvsp[-13].l, yyvsp[-10].l, yyvsp[-8].l);
      yyval.s.Type  = MSH_SURF_NURBS;
      yyval.s.Num = (int)yyvsp[-16].d;
    ;
    break;}
case 248:
#line 1773 "Gmsh.y"
{
      CreateNurbsSurfaceSupport ((int)yyvsp[-16].d, (int) yyvsp[-4].d , (int) yyvsp[-2].d , yyvsp[-13].l, yyvsp[-10].l, yyvsp[-8].l);
    ;
    break;}
case 249:
#line 1777 "Gmsh.y"
{
      Cdbz101((int)yyvsp[-4].d,MSH_PHYSICAL_SURFACE,0,0,0,0,0,NULL,yyvsp[-1].l,NULL);
      yyval.s.Type = MSH_PHYSICAL_SURFACE;
      yyval.s.Num  = (int)yyvsp[-4].d;
    ;
    break;}
case 250:
#line 1783 "Gmsh.y"
{
      Cdbz101((int)yyvsp[-4].d,MSH_SURF_LOOP,0,0,0,0,0,NULL,yyvsp[-1].l,NULL);
      yyval.s.Type = MSH_SURF_LOOP;
      yyval.s.Num  = (int)yyvsp[-4].d;
    ;
    break;}
case 251:
#line 1792 "Gmsh.y"
{
      Cdbz101((int)yyvsp[-4].d,MSH_VOLUME,0,0,0,0,0,NULL,yyvsp[-1].l,NULL);
      yyval.s.Type = MSH_VOLUME;
      yyval.s.Num  = (int)yyvsp[-4].d;      
    ;
    break;}
case 252:
#line 1798 "Gmsh.y"
{
      Cdbz101((int)yyvsp[-4].d,MSH_VOLUME,0,0,0,0,0,NULL,yyvsp[-1].l,NULL);
      yyval.s.Type = MSH_VOLUME;
      yyval.s.Num  = (int)yyvsp[-4].d;
    ;
    break;}
case 253:
#line 1804 "Gmsh.y"
{
      Cdbz101((int)yyvsp[-4].d,MSH_PHYSICAL_VOLUME,0,0,0,0,0,NULL,yyvsp[-1].l,NULL);
      yyval.s.Type = MSH_PHYSICAL_VOLUME;
      yyval.s.Num  = (int)yyvsp[-4].d;
    ;
    break;}
case 254:
#line 1815 "Gmsh.y"
{
      TranslateShapes (yyvsp[-3].v[0],yyvsp[-3].v[1],yyvsp[-3].v[2],yyvsp[-1].l,1);
      yyval.l = yyvsp[-1].l;
    ;
    break;}
case 255:
#line 1820 "Gmsh.y"
{
      RotateShapes(yyvsp[-8].v[0],yyvsp[-8].v[1],yyvsp[-8].v[2],yyvsp[-6].v[0],yyvsp[-6].v[1],yyvsp[-6].v[2],yyvsp[-4].d,yyvsp[-1].l);
      yyval.l = yyvsp[-1].l;
    ;
    break;}
case 256:
#line 1825 "Gmsh.y"
{
      SymmetryShapes(yyvsp[-3].v[0],yyvsp[-3].v[1],yyvsp[-3].v[2],yyvsp[-3].v[3],yyvsp[-1].l,1);
      yyval.l = yyvsp[-1].l;
    ;
    break;}
case 257:
#line 1830 "Gmsh.y"
{
      DilatShapes(yyvsp[-6].v[0],yyvsp[-6].v[1],yyvsp[-6].v[2],yyvsp[-4].d,yyvsp[-1].l,1);
      yyval.l = yyvsp[-1].l;
    ;
    break;}
case 258:
#line 1837 "Gmsh.y"
{ yyval.l = yyvsp[0].l; ;
    break;}
case 259:
#line 1838 "Gmsh.y"
{ yyval.l = yyvsp[0].l; ;
    break;}
case 260:
#line 1839 "Gmsh.y"
{ yyval.l = yyvsp[0].l; ;
    break;}
case 261:
#line 1844 "Gmsh.y"
{
      yyval.l = List_Create(3,3,sizeof(Shape));
    ;
    break;}
case 262:
#line 1848 "Gmsh.y"
{
      List_Add(yyval.l,&yyvsp[0].s);
      yyval.l = yyvsp[-1].l;
    ;
    break;}
case 263:
#line 1853 "Gmsh.y"
{
      for(i=0;i<List_Nbr(yyvsp[-2].l);i++){
	List_Read(yyvsp[-2].l, i, &d);
	TheShape.Num = (int)d;
	Vertex *v = FindPoint(TheShape.Num,THEM);
	if(!v)
	  yymsg(WARNING, "Unknown Point %d", TheShape.Num);
	else{
	  TheShape.Type = MSH_POINT;
	  List_Add(yyval.l,&TheShape);
	}
      }
      yyval.l = yyvsp[-5].l;
    ;
    break;}
case 264:
#line 1868 "Gmsh.y"
{
      for(i=0;i<List_Nbr(yyvsp[-2].l);i++){
	List_Read(yyvsp[-2].l, i, &d);
	TheShape.Num = (int)d;
	Curve *c = FindCurve(TheShape.Num,THEM);
	if(!c)
	  yymsg(WARNING, "Unknown Curve %d", TheShape.Num);
	else{
	  TheShape.Type = c->Typ;
	  List_Add(yyval.l,&TheShape);
	}
      }
      yyval.l = yyvsp[-5].l;
    ;
    break;}
case 265:
#line 1883 "Gmsh.y"
{
      for(i=0;i<List_Nbr(yyvsp[-2].l);i++){
	List_Read(yyvsp[-2].l, i, &d);
	TheShape.Num = (int)d;
	Surface *s = FindSurface(TheShape.Num,THEM);
	if(!s)
	  yymsg(WARNING, "Unknown Surface %d", TheShape.Num);
	else{
	  TheShape.Type = s->Typ;
	  List_Add(yyval.l,&TheShape);
	}
      }
      yyval.l = yyvsp[-5].l;
    ;
    break;}
case 266:
#line 1903 "Gmsh.y"
{
      yyval.l = List_Create(3,3,sizeof(Shape));
      for(i=0;i<List_Nbr(yyvsp[-1].l);i++){
	List_Read (yyvsp[-1].l,i,&TheShape);
	CopyShape(TheShape.Type,TheShape.Num,&j);
	TheShape.Num = j;
	List_Add(yyval.l,&TheShape);
      }
    ;
    break;}
case 267:
#line 1919 "Gmsh.y"
{
      for(i=0;i<List_Nbr(yyvsp[-1].l);i++){
	List_Read (yyvsp[-1].l,i,&TheShape);
	DeleteShape(TheShape.Type,TheShape.Num);
      }
    ;
    break;}
case 268:
#line 1926 "Gmsh.y"
{
	if(!strcmp(yyvsp[-4].c, "View"))
	  FreeView((int)yyvsp[-2].d);
      ;
    break;}
case 269:
#line 1931 "Gmsh.y"
{
      Init_Mesh(THEM, 1);
    ;
    break;}
case 270:
#line 1940 "Gmsh.y"
{
      for(i=0;i<List_Nbr(yyvsp[-1].l);i++){
	List_Read (yyvsp[-1].l,i,&TheShape);
	ColorShape(TheShape.Type,TheShape.Num,yyvsp[-3].u);
      }
    ;
    break;}
case 271:
#line 1952 "Gmsh.y"
{
      if(!strcmp(yyvsp[-2].c, "Include")){

	yyinTab[RecursionLevel++] = yyin;

	strcpy(tmpstring, yyname);
	i = strlen(yyname)-1 ;
	while(i >= 0 && yyname[i] != '/' && yyname[i] != '\\') i-- ;
	tmpstring[i+1] = '\0';
	strcat(tmpstring,yyvsp[-1].c);

	if((yyin = fopen(tmpstring,"r"))){
	  Msg(INFO, "Including '%s'", tmpstring); 
	  strcpy(yynameTab[RecursionLevel-1],yyname);
	  yylinenoTab[RecursionLevel-1]=yylineno;
	  yylineno=1;
	  strcpy(yyname,tmpstring);
	  while(!feof(yyin)){
	    yyparse();
	  }
	  // FIXME: If we do fclose, we cannot call a Function defined
	  // in another file...
	  //fclose(yyin);
	  yyin = yyinTab[--RecursionLevel];
	  strcpy(yyname,yynameTab[RecursionLevel]);
	  yylineno = yylinenoTab[RecursionLevel];
	}
	else{
	  yymsg(GERROR, "Unknown file '%s'", tmpstring) ;  
	  yyin = yyinTab[--RecursionLevel];
	}

      }
      else if(!strcmp(yyvsp[-2].c, "Print")){
#ifndef _BLACKBOX
	if(!CTX.batch) CreateOutputFile(yyvsp[-1].c, CTX.print.format);
#endif
      }
      else if(!strcmp(yyvsp[-2].c, "Save")){
#ifndef _BLACKBOX
	CreateOutputFile(yyvsp[-1].c, CTX.mesh.format);
#endif
      }

      else if(!strcmp(yyvsp[-2].c, "Merge")){

	FILE *ff = yyin;
	MergeProblem(yyvsp[-1].c);
	yyin = ff;

      }
      else if(!strcmp(yyvsp[-2].c, "Open")){

	FILE *ff = yyin;
	OpenProblem(yyvsp[-1].c);
	yyin = ff;

      }
      else if(!strcmp(yyvsp[-2].c, "System")){
	
	Msg(INFO, "Executing system call \"%s\"", yyvsp[-1].c);
	system(yyvsp[-1].c);

      }
      else
	yymsg(GERROR, "Unknown command '%s'", yyvsp[-2].c);
    ;
    break;}
case 272:
#line 2020 "Gmsh.y"
{
      if(!strcmp(yyvsp[-2].c, "Sleep")){

	long sleep_time = GetTime();
	while(1){
	  if(GetTime() - sleep_time > (long)(yyvsp[-1].d*1.e6)) break;
	}
      
      }
      else if(!strcmp(yyvsp[-2].c, "Mesh")){

	//Maillage_Dimension_0(THEM);
	//mai3d(THEM,(int)$2);
	yymsg(GERROR, "Mesh directives are not (yet) allowed in scripts");

      }
      else
	yymsg(GERROR, "Unknown command '%s'", yyvsp[-2].c);
    ;
    break;}
case 273:
#line 2040 "Gmsh.y"
{
#ifndef _NOPLUGIN
    if(CTX.default_plugins)
      GMSH_PluginManager::Instance()->Action(yyvsp[-4].c,yyvsp[-1].c,0); 
#endif
   ;
    break;}
case 274:
#line 2047 "Gmsh.y"
{
      exit(0);
    ;
    break;}
case 275:
#line 2051 "Gmsh.y"
{
#ifndef _BLACKBOX
      if(!CTX.batch){ // we're in interactive mode
	if(Tree_Nbr(THEM->Points) != Last_NumberOfPoints){
	  Last_NumberOfPoints = Tree_Nbr(THEM->Points);
	  Replot();
	  DrawUI();
	}
	else{
	  Draw();
	  DrawUI();
	}
      }
#endif
    ;
    break;}
case 276:
#line 2073 "Gmsh.y"
{
      LoopControlVariablesTab[ImbricatedLoop][0] = yyvsp[-3].d ;
      LoopControlVariablesTab[ImbricatedLoop][1] = yyvsp[-1].d ;
      LoopControlVariablesTab[ImbricatedLoop][2] = 1.0 ;
      LoopControlVariablesNameTab[ImbricatedLoop] = "" ;
      fgetpos( yyin, &yyposImbricatedLoopsTab[ImbricatedLoop]);
      yylinenoImbricatedLoopsTab[ImbricatedLoop] = yylineno;
      ImbricatedLoop++;
    ;
    break;}
case 277:
#line 2083 "Gmsh.y"
{
      LoopControlVariablesTab[ImbricatedLoop][0] = yyvsp[-5].d ;
      LoopControlVariablesTab[ImbricatedLoop][1] = yyvsp[-3].d ;
      LoopControlVariablesTab[ImbricatedLoop][2] = yyvsp[-1].d ;
      LoopControlVariablesNameTab[ImbricatedLoop] = "" ;
      fgetpos( yyin, &yyposImbricatedLoopsTab[ImbricatedLoop]);
      yylinenoImbricatedLoopsTab[ImbricatedLoop] = yylineno;
      ImbricatedLoop++;
    ;
    break;}
case 278:
#line 2093 "Gmsh.y"
{
      LoopControlVariablesTab[ImbricatedLoop][0] = yyvsp[-3].d ;
      LoopControlVariablesTab[ImbricatedLoop][1] = yyvsp[-1].d ;
      LoopControlVariablesTab[ImbricatedLoop][2] = 1.0 ;
      LoopControlVariablesNameTab[ImbricatedLoop] = yyvsp[-6].c ;
      
      TheSymbol.Name = yyvsp[-6].c;
      if (!(pSymbol = (Symbol*)List_PQuery(Symbol_L, &TheSymbol, CompareSymbols))){
	TheSymbol.val = List_Create(1,1,sizeof(double));
	List_Put(TheSymbol.val, 0, &yyvsp[-3].d);
	List_Add(Symbol_L, &TheSymbol);
      }
      else{
	List_Write(pSymbol->val, 0, &yyvsp[-3].d);
      }
      
      fgetpos( yyin, &yyposImbricatedLoopsTab[ImbricatedLoop]);
      yylinenoImbricatedLoopsTab[ImbricatedLoop] = yylineno;
      ImbricatedLoop++;
    ;
    break;}
case 279:
#line 2114 "Gmsh.y"
{
      LoopControlVariablesTab[ImbricatedLoop][0] = yyvsp[-5].d ;
      LoopControlVariablesTab[ImbricatedLoop][1] = yyvsp[-3].d ;
      LoopControlVariablesTab[ImbricatedLoop][2] = yyvsp[-1].d ;
      LoopControlVariablesNameTab[ImbricatedLoop] = yyvsp[-8].c ;

      TheSymbol.Name = yyvsp[-8].c;
      if (!(pSymbol = (Symbol*)List_PQuery(Symbol_L, &TheSymbol, CompareSymbols))){
	TheSymbol.val = List_Create(1,1,sizeof(double));
	List_Put(TheSymbol.val, 0, &yyvsp[-5].d);
	List_Add(Symbol_L, &TheSymbol);
      }
      else{
	List_Write(pSymbol->val, 0, &yyvsp[-5].d);
      }
      
      fgetpos( yyin, &yyposImbricatedLoopsTab[ImbricatedLoop]);
      yylinenoImbricatedLoopsTab[ImbricatedLoop] = yylineno;
      ImbricatedLoop++;
    ;
    break;}
case 280:
#line 2135 "Gmsh.y"
{
      if(LoopControlVariablesTab[ImbricatedLoop-1][1] >  
	 LoopControlVariablesTab[ImbricatedLoop-1][0]){
	LoopControlVariablesTab[ImbricatedLoop-1][0] +=
	  LoopControlVariablesTab[ImbricatedLoop-1][2];
	
	if(strlen(LoopControlVariablesNameTab[ImbricatedLoop-1])){
	  TheSymbol.Name = LoopControlVariablesNameTab[ImbricatedLoop-1];
	  pSymbol = (Symbol*)List_PQuery(Symbol_L, &TheSymbol, CompareSymbols);
	  *(double*)List_Pointer_Fast(pSymbol->val, 0) += 
	    LoopControlVariablesTab[ImbricatedLoop-1][2] ;
	}
	
	fsetpos( yyin, &yyposImbricatedLoopsTab[ImbricatedLoop-1]);
	yylineno = yylinenoImbricatedLoopsTab[ImbricatedLoop-1];
      }
      else{
	ImbricatedLoop--;
      }
    ;
    break;}
case 281:
#line 2156 "Gmsh.y"
{
      if(!FunctionManager::Instance()->createFunction(yyvsp[0].c,yyin,yyname,yylineno))
	yymsg(GERROR, "Redefinition of function %s",yyvsp[0].c);
      skip_until(NULL, "Return");
    ;
    break;}
case 282:
#line 2162 "Gmsh.y"
{
      if(!FunctionManager::Instance()->leaveFunction(&yyin,yyname,yylineno))
	yymsg(GERROR, "Error while exiting function");
    ;
    break;}
case 283:
#line 2167 "Gmsh.y"
{
      if(!FunctionManager::Instance()->enterFunction(yyvsp[-1].c,&yyin,yyname,yylineno))
	yymsg(GERROR, "Unknown function %s",yyvsp[-1].c);
    ;
    break;}
case 284:
#line 2172 "Gmsh.y"
{
      if(!yyvsp[-1].d) skip_until("If", "EndIf");
    ;
    break;}
case 285:
#line 2176 "Gmsh.y"
{
    ;
    break;}
case 286:
#line 2188 "Gmsh.y"
{
      Curve *pc, *prc;
      Extrude_ProtudePoint(TRANSLATE,(int)yyvsp[-4].d,yyvsp[-2].v[0],yyvsp[-2].v[1],yyvsp[-2].v[2],
			   0.,0.,0.,0.,0.,0.,0.,
			   &pc,&prc,NULL);
    ;
    break;}
case 287:
#line 2195 "Gmsh.y"
{
      Curve *pc, *prc;
      Extrude_ProtudePoint(ROTATE,(int)yyvsp[-8].d,0.,0.,0.,
			   yyvsp[-6].v[0],yyvsp[-6].v[1],yyvsp[-6].v[2],yyvsp[-4].v[0],yyvsp[-4].v[1],yyvsp[-4].v[2],yyvsp[-2].d,
			   &pc,&prc,NULL);
    ;
    break;}
case 288:
#line 2202 "Gmsh.y"
{
      Curve *pc, *prc;
      Extrude_ProtudePoint(TRANSLATE_ROTATE,(int)yyvsp[-10].d,yyvsp[-8].v[0],yyvsp[-8].v[1],yyvsp[-8].v[2],
			   yyvsp[-6].v[0],yyvsp[-6].v[1],yyvsp[-6].v[2],yyvsp[-4].v[0],yyvsp[-4].v[1],yyvsp[-4].v[2],yyvsp[-2].d,
			   &pc,&prc,NULL);
    ;
    break;}
case 289:
#line 2212 "Gmsh.y"
{
      Extrude_ProtudeCurve(TRANSLATE,(int)yyvsp[-4].d,yyvsp[-2].v[0],yyvsp[-2].v[1],yyvsp[-2].v[2],
			   0.,0.,0.,0.,0.,0.,0.,1,NULL);
    ;
    break;}
case 290:
#line 2217 "Gmsh.y"
{
      Extrude_ProtudeCurve(ROTATE,(int)yyvsp[-8].d,0.,0.,0.,
			   yyvsp[-6].v[0],yyvsp[-6].v[1],yyvsp[-6].v[2],yyvsp[-4].v[0],yyvsp[-4].v[1],yyvsp[-4].v[2],yyvsp[-2].d,1,NULL);
    ;
    break;}
case 291:
#line 2222 "Gmsh.y"
{
      Extrude_ProtudeCurve(TRANSLATE_ROTATE,(int)yyvsp[-10].d,yyvsp[-8].v[0],yyvsp[-8].v[1],yyvsp[-8].v[2],
			   yyvsp[-6].v[0],yyvsp[-6].v[1],yyvsp[-6].v[2],yyvsp[-4].v[0],yyvsp[-4].v[1],yyvsp[-4].v[2],yyvsp[-2].d,1,NULL);
    ;
    break;}
case 292:
#line 2227 "Gmsh.y"
{
      extr.mesh.ExtrudeMesh = false;
      extr.mesh.Recombine = false;
    ;
    break;}
case 293:
#line 2232 "Gmsh.y"
{
      Extrude_ProtudeCurve(TRANSLATE,(int)yyvsp[-8].d,yyvsp[-6].v[0],yyvsp[-6].v[1],yyvsp[-6].v[2],
			   0.,0.,0.,0.,0.,0.,0.,1,&extr);
    ;
    break;}
case 294:
#line 2237 "Gmsh.y"
{
      extr.mesh.ExtrudeMesh = false;
      extr.mesh.Recombine = false;
    ;
    break;}
case 295:
#line 2242 "Gmsh.y"
{
      Extrude_ProtudeCurve(ROTATE,(int)yyvsp[-12].d,0.,0.,0.,
			   yyvsp[-10].v[0],yyvsp[-10].v[1],yyvsp[-10].v[2],yyvsp[-8].v[0],yyvsp[-8].v[1],yyvsp[-8].v[2],yyvsp[-6].d,1,&extr);
    ;
    break;}
case 296:
#line 2247 "Gmsh.y"
{
      extr.mesh.ExtrudeMesh = false;
      extr.mesh.Recombine = false;
    ;
    break;}
case 297:
#line 2252 "Gmsh.y"
{
      Extrude_ProtudeCurve(TRANSLATE_ROTATE,(int)yyvsp[-14].d,yyvsp[-12].v[0],yyvsp[-12].v[1],yyvsp[-12].v[2],
			   yyvsp[-10].v[0],yyvsp[-10].v[1],yyvsp[-10].v[2],yyvsp[-8].v[0],yyvsp[-8].v[1],yyvsp[-8].v[2],yyvsp[-6].d,1,&extr);
    ;
    break;}
case 298:
#line 2260 "Gmsh.y"
{
      Extrude_ProtudeSurface(TRANSLATE,(int)yyvsp[-4].d,yyvsp[-2].v[0],yyvsp[-2].v[1],yyvsp[-2].v[2],
			     0.,0.,0.,0.,0.,0.,0.,0,NULL);
    ;
    break;}
case 299:
#line 2265 "Gmsh.y"
{
      Extrude_ProtudeSurface(ROTATE,(int)yyvsp[-8].d,0.,0.,0.,
			     yyvsp[-6].v[0],yyvsp[-6].v[1],yyvsp[-6].v[2],yyvsp[-4].v[0],yyvsp[-4].v[1],yyvsp[-4].v[2],yyvsp[-2].d,0,NULL);
    ;
    break;}
case 300:
#line 2270 "Gmsh.y"
{
      Extrude_ProtudeSurface(TRANSLATE_ROTATE,(int)yyvsp[-10].d,yyvsp[-8].v[0],yyvsp[-8].v[1],yyvsp[-8].v[2],
			     yyvsp[-6].v[0],yyvsp[-6].v[1],yyvsp[-6].v[2],yyvsp[-4].v[0],yyvsp[-4].v[1],yyvsp[-4].v[2],yyvsp[-2].d,0,NULL);
    ;
    break;}
case 301:
#line 2275 "Gmsh.y"
{
      extr.mesh.ExtrudeMesh = false;
      extr.mesh.Recombine = false;
    ;
    break;}
case 302:
#line 2280 "Gmsh.y"
{
      int vol = NEWREG();
      Extrude_ProtudeSurface(TRANSLATE,(int)yyvsp[-8].d,yyvsp[-6].v[0],yyvsp[-6].v[1],yyvsp[-6].v[2],
			     0.,0.,0.,0.,0.,0.,0.,vol,&extr);
    ;
    break;}
case 303:
#line 2286 "Gmsh.y"
{
      extr.mesh.ExtrudeMesh = false;
      extr.mesh.Recombine = false;
    ;
    break;}
case 304:
#line 2292 "Gmsh.y"
{
      int vol = NEWREG();
      Extrude_ProtudeSurface(ROTATE,(int)yyvsp[-12].d,0.,0.,0.,
			     yyvsp[-10].v[0],yyvsp[-10].v[1],yyvsp[-10].v[2],yyvsp[-8].v[0],yyvsp[-8].v[1],yyvsp[-8].v[2],yyvsp[-6].d,vol,&extr);
    ;
    break;}
case 305:
#line 2298 "Gmsh.y"
{
      extr.mesh.ExtrudeMesh = false;
      extr.mesh.Recombine = false;
    ;
    break;}
case 306:
#line 2304 "Gmsh.y"
{
      int vol = NEWREG();
      Extrude_ProtudeSurface(TRANSLATE_ROTATE,(int)yyvsp[-14].d,yyvsp[-12].v[0],yyvsp[-12].v[1],yyvsp[-12].v[2],
			     yyvsp[-10].v[0],yyvsp[-10].v[1],yyvsp[-10].v[2],yyvsp[-8].v[0],yyvsp[-8].v[1],yyvsp[-8].v[2],yyvsp[-6].d,vol,&extr);
    ;
    break;}
case 307:
#line 2313 "Gmsh.y"
{
    ;
    break;}
case 308:
#line 2316 "Gmsh.y"
{
    ;
    break;}
case 309:
#line 2322 "Gmsh.y"
{
      double d;
      extr.mesh.ExtrudeMesh = true;
      extr.mesh.NbLayer = List_Nbr(yyvsp[-6].l);
      if(List_Nbr(yyvsp[-6].l) == List_Nbr(yyvsp[-4].l) && List_Nbr(yyvsp[-6].l) == List_Nbr(yyvsp[-2].l)){
	extr.mesh.NbElmLayer = (int*)Malloc(extr.mesh.NbLayer*sizeof(int));
	extr.mesh.ZonLayer = (int*)Malloc(extr.mesh.NbLayer*sizeof(int));
	extr.mesh.hLayer = (double*)Malloc(extr.mesh.NbLayer*sizeof(double));
	for(int i=0;i<List_Nbr(yyvsp[-6].l);i++){
	  List_Read(yyvsp[-6].l,i,&d);
	  extr.mesh.NbElmLayer[i] = (d>0)?(int)d:1;
	  List_Read(yyvsp[-4].l,i,&d);
	  extr.mesh.ZonLayer[i] = (int)d;
	  List_Read(yyvsp[-2].l,i,&d);
	  extr.mesh.hLayer[i] = d;
	}
      }
      else{
	yymsg(GERROR, "Wrong layer definition {%d, %d, %d}", 
	      List_Nbr(yyvsp[-6].l), List_Nbr(yyvsp[-4].l), List_Nbr(yyvsp[-2].l));
      }
      List_Delete(yyvsp[-6].l);
      List_Delete(yyvsp[-4].l);
      List_Delete(yyvsp[-2].l);
    ;
    break;}
case 310:
#line 2348 "Gmsh.y"
{
      double d;
      extr.mesh.ExtrudeMesh = true;
      extr.mesh.NbLayer = List_Nbr(yyvsp[-4].l);
      if(List_Nbr(yyvsp[-4].l) == List_Nbr(yyvsp[-2].l)){
	extr.mesh.NbElmLayer = (int*)Malloc(extr.mesh.NbLayer*sizeof(int));
	extr.mesh.ZonLayer = (int*)Malloc(extr.mesh.NbLayer*sizeof(int));
	extr.mesh.hLayer = (double*)Malloc(extr.mesh.NbLayer*sizeof(double));
	for(int i=0;i<List_Nbr(yyvsp[-4].l);i++){
	  List_Read(yyvsp[-4].l,i,&d);
	  extr.mesh.NbElmLayer[i] = (d>0)?(int)d:1;
	  extr.mesh.ZonLayer[i] = 0;
	  List_Read(yyvsp[-2].l,i,&d);
	  extr.mesh.hLayer[i] = d;
	}
      }
      else{
	yymsg(GERROR, "Wrong layer definition {%d, %d}", 
	      List_Nbr(yyvsp[-4].l), List_Nbr(yyvsp[-2].l));
      }
      List_Delete(yyvsp[-4].l);
      List_Delete(yyvsp[-2].l);
    ;
    break;}
case 311:
#line 2372 "Gmsh.y"
{
      extr.mesh.Recombine = true;
    ;
    break;}
case 312:
#line 2381 "Gmsh.y"
{
      Curve *c;
      for(i=0;i<List_Nbr(yyvsp[-3].l);i++){
	List_Read(yyvsp[-3].l,i,&d);
	j = (int)fabs(d);
        c = FindCurve(j,THEM);
	if(!c)
	  yymsg(WARNING, "Unknown Curve %d", j);
	else{
	  c->Method = TRANSFINI;
	  c->ipar[0] = (yyvsp[-1].d>2)?(int)yyvsp[-1].d:2;
	  c->ipar[1] = sign(d);
	  c->dpar[0] = 1.0;
	}
      }
      List_Delete(yyvsp[-3].l);
    ;
    break;}
case 313:
#line 2399 "Gmsh.y"
{
      Curve *c;
      for(i=0;i<List_Nbr(yyvsp[-6].l);i++){
	List_Read(yyvsp[-6].l,i,&d);
	j = (int)fabs(d);
        c = FindCurve(j,THEM);
	if(!c)
	  yymsg(WARNING, "Unknown Curve %d", j);
	else{
	  c->Method = TRANSFINI;
	  c->ipar[0] = (yyvsp[-4].d>2)?(int)yyvsp[-4].d:2;
	  c->ipar[1] = sign(d); /* Progresion : code 1 ou -1 */
	  c->dpar[0] = fabs(yyvsp[-1].d);
	}
      }
      List_Delete(yyvsp[-6].l);
    ;
    break;}
case 314:
#line 2417 "Gmsh.y"
{
      Curve *c;
      for(i=0;i<List_Nbr(yyvsp[-6].l);i++){
	List_Read(yyvsp[-6].l,i,&d);
	j = (int)fabs(d);
        c = FindCurve(j,THEM);
	if(!c)
	  yymsg(WARNING, "Unknown Curve %d", j);
	else{
	  c->Method = TRANSFINI;
	  c->ipar[0] = (yyvsp[-4].d>2)?(int)yyvsp[-4].d:2;
	  c->ipar[1] = 2*sign(d); /* Bump : code 2 ou -2 */
	  c->dpar[0] = fabs(yyvsp[-1].d);
	}
      }
      List_Delete(yyvsp[-6].l);
    ;
    break;}
case 315:
#line 2435 "Gmsh.y"
{
      Surface *s = FindSurface((int)yyvsp[-4].d,THEM);
      if(!s)
	yymsg(WARNING, "Unknown Surface %d", (int)yyvsp[-4].d);
      else{
	s->Method = TRANSFINI;
	k = List_Nbr(yyvsp[-1].l);
	if(k!=3 && k!=4){
	  yymsg(GERROR, "Wrong definition of Transfinite Surface %d: "
		"%d points instead of 3 or 4" , yyvsp[-4].d, k) ;
	}
	else{
	  for(i=0;i<k;i++){
	    List_Read(yyvsp[-1].l,i,&d);
	    j = (int)fabs(d);
	    s->ipar[i] = j;
	  }
	}
      }
      List_Delete(yyvsp[-1].l);
    ;
    break;}
case 316:
#line 2457 "Gmsh.y"
{
      Surface *s = FindSurface((int)yyvsp[-4].d,THEM);
      if(!s)
	yymsg(WARNING, "Unknown Surface %d", (int)yyvsp[-4].d);
      else{
        s->Method = ELLIPTIC;
        k = List_Nbr(yyvsp[-1].l);
        if(k != 4)
	  yymsg(GERROR, "Wrong definition of Elliptic Surface %d: "
		"%d points instead of 4" , yyvsp[-4].d, k) ;
        else{
	  for(i=0;i<k;i++){
	    List_Read(yyvsp[-1].l,i,&d);
	    j = (int)fabs(d);
	    s->ipar[i] = j;
	  }
	}
      }
      List_Delete(yyvsp[-1].l);
    ;
    break;}
case 317:
#line 2478 "Gmsh.y"
{
      Volume *v = FindVolume((int)yyvsp[-4].d,THEM);
      if(!v)
	yymsg(WARNING, "Unknown Volume %d", (int)yyvsp[-4].d);
      else{
	v->Method = TRANSFINI;
	k = List_Nbr(yyvsp[-1].l);
	if(k!=6 && k!=8)
	  yymsg(GERROR, "Wrong definition of Transfinite Volume %d: "
		"%d points instead of 6 or 8" , yyvsp[-4].d, k) ;
	else{
	  for(i=0;i<k;i++){
	    List_Read(yyvsp[-1].l,i,&d);
	    j = (int)fabs(d);
	    v->ipar[i] = j;
	  }
	}
      }
      List_Delete(yyvsp[-1].l);
    ;
    break;}
case 318:
#line 2499 "Gmsh.y"
{
      Surface *s;
      for(i=0;i<List_Nbr(yyvsp[-3].l);i++){
	List_Read(yyvsp[-3].l,i,&d);
	j = (int)d;
	s = FindSurface(j,THEM);
	if(s){
	  s->Recombine = 1;
	  s->RecombineAngle = (yyvsp[-1].d > 0 && yyvsp[-1].d < 90) ? yyvsp[-1].d : 90;
	}
      }
      List_Delete(yyvsp[-3].l);
    ;
    break;}
case 319:
#line 2513 "Gmsh.y"
{
      Surface *s;
      for(i=0;i<List_Nbr(yyvsp[-1].l);i++){
	List_Read(yyvsp[-1].l,i,&d);
	j = (int)d;
        s = FindSurface(j,THEM);
	if(s){
	  s->Recombine = 1;
	  s->RecombineAngle = 30.;
        }
      }
      List_Delete(yyvsp[-1].l);
    ;
    break;}
case 320:
#line 2533 "Gmsh.y"
{ 
      ReplaceAllDuplicates(THEM);
    ;
    break;}
case 321:
#line 2537 "Gmsh.y"
{ 
      IntersectAllSegmentsTogether();
    ;
    break;}
case 322:
#line 2546 "Gmsh.y"
{yyval.i = 1;;
    break;}
case 323:
#line 2547 "Gmsh.y"
{yyval.i = 0;;
    break;}
case 324:
#line 2548 "Gmsh.y"
{yyval.i = -1;;
    break;}
case 325:
#line 2549 "Gmsh.y"
{yyval.i = -1;;
    break;}
case 326:
#line 2550 "Gmsh.y"
{yyval.i = -1;;
    break;}
case 327:
#line 2554 "Gmsh.y"
{ yyval.d = yyvsp[0].d;           ;
    break;}
case 328:
#line 2555 "Gmsh.y"
{ yyval.d = yyvsp[-1].d ;          ;
    break;}
case 329:
#line 2556 "Gmsh.y"
{ yyval.d = -yyvsp[0].d ;         ;
    break;}
case 330:
#line 2557 "Gmsh.y"
{ yyval.d = yyvsp[0].d;           ;
    break;}
case 331:
#line 2558 "Gmsh.y"
{ yyval.d = !yyvsp[0].d ;         ;
    break;}
case 332:
#line 2559 "Gmsh.y"
{ yyval.d = yyvsp[-2].d - yyvsp[0].d ;     ;
    break;}
case 333:
#line 2560 "Gmsh.y"
{ yyval.d = yyvsp[-2].d + yyvsp[0].d ;     ;
    break;}
case 334:
#line 2561 "Gmsh.y"
{ yyval.d = yyvsp[-2].d * yyvsp[0].d ;     ;
    break;}
case 335:
#line 2563 "Gmsh.y"
{ 
      if(!yyvsp[0].d)
	yymsg(GERROR, "Division by zero in '%g / %g'", yyvsp[-2].d, yyvsp[0].d);
      else
	yyval.d = yyvsp[-2].d / yyvsp[0].d ;     
    ;
    break;}
case 336:
#line 2569 "Gmsh.y"
{ yyval.d = (int)yyvsp[-2].d % (int)yyvsp[0].d ;  ;
    break;}
case 337:
#line 2570 "Gmsh.y"
{ yyval.d = pow(yyvsp[-2].d,yyvsp[0].d) ;  ;
    break;}
case 338:
#line 2571 "Gmsh.y"
{ yyval.d = yyvsp[-2].d < yyvsp[0].d ;     ;
    break;}
case 339:
#line 2572 "Gmsh.y"
{ yyval.d = yyvsp[-2].d > yyvsp[0].d ;     ;
    break;}
case 340:
#line 2573 "Gmsh.y"
{ yyval.d = yyvsp[-2].d <= yyvsp[0].d ;    ;
    break;}
case 341:
#line 2574 "Gmsh.y"
{ yyval.d = yyvsp[-2].d >= yyvsp[0].d ;    ;
    break;}
case 342:
#line 2575 "Gmsh.y"
{ yyval.d = yyvsp[-2].d == yyvsp[0].d ;    ;
    break;}
case 343:
#line 2576 "Gmsh.y"
{ yyval.d = yyvsp[-2].d != yyvsp[0].d ;    ;
    break;}
case 344:
#line 2577 "Gmsh.y"
{ yyval.d = yyvsp[-2].d && yyvsp[0].d ;    ;
    break;}
case 345:
#line 2578 "Gmsh.y"
{ yyval.d = yyvsp[-2].d || yyvsp[0].d ;    ;
    break;}
case 346:
#line 2579 "Gmsh.y"
{ yyval.d = yyvsp[-4].d? yyvsp[-2].d : yyvsp[0].d ; ;
    break;}
case 347:
#line 2580 "Gmsh.y"
{ yyval.d = exp(yyvsp[-1].d);      ;
    break;}
case 348:
#line 2581 "Gmsh.y"
{ yyval.d = log(yyvsp[-1].d);      ;
    break;}
case 349:
#line 2582 "Gmsh.y"
{ yyval.d = log10(yyvsp[-1].d);    ;
    break;}
case 350:
#line 2583 "Gmsh.y"
{ yyval.d = sqrt(yyvsp[-1].d);     ;
    break;}
case 351:
#line 2584 "Gmsh.y"
{ yyval.d = sin(yyvsp[-1].d);      ;
    break;}
case 352:
#line 2585 "Gmsh.y"
{ yyval.d = asin(yyvsp[-1].d);     ;
    break;}
case 353:
#line 2586 "Gmsh.y"
{ yyval.d = cos(yyvsp[-1].d);      ;
    break;}
case 354:
#line 2587 "Gmsh.y"
{ yyval.d = acos(yyvsp[-1].d);     ;
    break;}
case 355:
#line 2588 "Gmsh.y"
{ yyval.d = tan(yyvsp[-1].d);      ;
    break;}
case 356:
#line 2589 "Gmsh.y"
{ yyval.d = atan(yyvsp[-1].d);     ;
    break;}
case 357:
#line 2590 "Gmsh.y"
{ yyval.d = atan2(yyvsp[-3].d,yyvsp[-1].d); ;
    break;}
case 358:
#line 2591 "Gmsh.y"
{ yyval.d = sinh(yyvsp[-1].d);     ;
    break;}
case 359:
#line 2592 "Gmsh.y"
{ yyval.d = cosh(yyvsp[-1].d);     ;
    break;}
case 360:
#line 2593 "Gmsh.y"
{ yyval.d = tanh(yyvsp[-1].d);     ;
    break;}
case 361:
#line 2594 "Gmsh.y"
{ yyval.d = fabs(yyvsp[-1].d);     ;
    break;}
case 362:
#line 2595 "Gmsh.y"
{ yyval.d = floor(yyvsp[-1].d);    ;
    break;}
case 363:
#line 2596 "Gmsh.y"
{ yyval.d = ceil(yyvsp[-1].d);     ;
    break;}
case 364:
#line 2597 "Gmsh.y"
{ yyval.d = fmod(yyvsp[-3].d,yyvsp[-1].d);  ;
    break;}
case 365:
#line 2598 "Gmsh.y"
{ yyval.d = fmod(yyvsp[-3].d,yyvsp[-1].d);  ;
    break;}
case 366:
#line 2599 "Gmsh.y"
{ yyval.d = sqrt(yyvsp[-3].d*yyvsp[-3].d+yyvsp[-1].d*yyvsp[-1].d); ;
    break;}
case 367:
#line 2600 "Gmsh.y"
{ yyval.d = yyvsp[-1].d*(double)rand()/(double)RAND_MAX; ;
    break;}
case 368:
#line 2602 "Gmsh.y"
{ yyval.d = exp(yyvsp[-1].d);      ;
    break;}
case 369:
#line 2603 "Gmsh.y"
{ yyval.d = log(yyvsp[-1].d);      ;
    break;}
case 370:
#line 2604 "Gmsh.y"
{ yyval.d = log10(yyvsp[-1].d);    ;
    break;}
case 371:
#line 2605 "Gmsh.y"
{ yyval.d = sqrt(yyvsp[-1].d);     ;
    break;}
case 372:
#line 2606 "Gmsh.y"
{ yyval.d = sin(yyvsp[-1].d);      ;
    break;}
case 373:
#line 2607 "Gmsh.y"
{ yyval.d = asin(yyvsp[-1].d);     ;
    break;}
case 374:
#line 2608 "Gmsh.y"
{ yyval.d = cos(yyvsp[-1].d);      ;
    break;}
case 375:
#line 2609 "Gmsh.y"
{ yyval.d = acos(yyvsp[-1].d);     ;
    break;}
case 376:
#line 2610 "Gmsh.y"
{ yyval.d = tan(yyvsp[-1].d);      ;
    break;}
case 377:
#line 2611 "Gmsh.y"
{ yyval.d = atan(yyvsp[-1].d);     ;
    break;}
case 378:
#line 2612 "Gmsh.y"
{ yyval.d = atan2(yyvsp[-3].d,yyvsp[-1].d); ;
    break;}
case 379:
#line 2613 "Gmsh.y"
{ yyval.d = sinh(yyvsp[-1].d);     ;
    break;}
case 380:
#line 2614 "Gmsh.y"
{ yyval.d = cosh(yyvsp[-1].d);     ;
    break;}
case 381:
#line 2615 "Gmsh.y"
{ yyval.d = tanh(yyvsp[-1].d);     ;
    break;}
case 382:
#line 2616 "Gmsh.y"
{ yyval.d = fabs(yyvsp[-1].d);     ;
    break;}
case 383:
#line 2617 "Gmsh.y"
{ yyval.d = floor(yyvsp[-1].d);    ;
    break;}
case 384:
#line 2618 "Gmsh.y"
{ yyval.d = ceil(yyvsp[-1].d);     ;
    break;}
case 385:
#line 2619 "Gmsh.y"
{ yyval.d = fmod(yyvsp[-3].d,yyvsp[-1].d);  ;
    break;}
case 386:
#line 2620 "Gmsh.y"
{ yyval.d = fmod(yyvsp[-3].d,yyvsp[-1].d);  ;
    break;}
case 387:
#line 2621 "Gmsh.y"
{ yyval.d = sqrt(yyvsp[-3].d*yyvsp[-3].d+yyvsp[-1].d*yyvsp[-1].d); ;
    break;}
case 388:
#line 2622 "Gmsh.y"
{ yyval.d = yyvsp[-1].d*(double)rand()/(double)RAND_MAX; ;
    break;}
case 389:
#line 2631 "Gmsh.y"
{ yyval.d = yyvsp[0].d; ;
    break;}
case 390:
#line 2632 "Gmsh.y"
{ yyval.d = 3.141592653589793; ;
    break;}
case 391:
#line 2633 "Gmsh.y"
{ yyval.d = ParUtil::Instance()->rank(); ;
    break;}
case 392:
#line 2634 "Gmsh.y"
{ yyval.d = ParUtil::Instance()->size(); ;
    break;}
case 393:
#line 2639 "Gmsh.y"
{
      TheSymbol.Name = yyvsp[0].c ;
      if (!(pSymbol = (Symbol*)List_PQuery(Symbol_L, &TheSymbol, CompareSymbols))) {
	yymsg(GERROR, "Unknown variable '%s'", yyvsp[0].c) ;
	yyval.d = 0. ;
      }
      else
	yyval.d = *(double*)List_Pointer_Fast(pSymbol->val, 0) ;
    ;
    break;}
case 394:
#line 2650 "Gmsh.y"
{
      TheSymbol.Name = yyvsp[-3].c ;
      if (!(pSymbol = (Symbol*)List_PQuery(Symbol_L, &TheSymbol, CompareSymbols))) {
	yymsg(GERROR, "Unknown variable '%s'", yyvsp[-3].c) ;
	yyval.d = 0. ;
      }
      else{
	if((pd = (double*)List_Pointer_Test(pSymbol->val, (int)yyvsp[-1].d)))
	  yyval.d = *pd ;
	else{
	  yymsg(GERROR, "Uninitialized variable '%s[%d]'", yyvsp[-3].c, (int)yyvsp[-1].d) ;
	  yyval.d = 0. ;
	}
      }
    ;
    break;}
case 395:
#line 2667 "Gmsh.y"
{
      TheSymbol.Name = yyvsp[-1].c ;
      if (!(pSymbol = (Symbol*)List_PQuery(Symbol_L, &TheSymbol, CompareSymbols))) {
	yymsg(GERROR, "Unknown variable '%s'", yyvsp[-1].c) ;
	yyval.d = 0. ;
      }
      else
	yyval.d = (*(double*)List_Pointer_Fast(pSymbol->val, 0) += yyvsp[0].i) ;
    ;
    break;}
case 396:
#line 2678 "Gmsh.y"
{
      TheSymbol.Name = yyvsp[-4].c ;
      if (!(pSymbol = (Symbol*)List_PQuery(Symbol_L, &TheSymbol, CompareSymbols))) {
	yymsg(GERROR, "Unknown variable '%s'", yyvsp[-4].c) ;
	yyval.d = 0. ;
      }
      else{
	if((pd = (double*)List_Pointer_Test(pSymbol->val, (int)yyvsp[-2].d)))
	  yyval.d = (*pd += yyvsp[0].i) ;
	else{
	  yymsg(GERROR, "Uninitialized variable '%s[%d]'", yyvsp[-4].c, (int)yyvsp[-2].d) ;
	  yyval.d = 0. ;
	}
      }
    ;
    break;}
case 397:
#line 2697 "Gmsh.y"
{
      if(!(pNumCat = Get_NumberOptionCategory(yyvsp[-2].c))){
	yymsg(GERROR, "Unknown numeric option class '%s'", yyvsp[-2].c);
	yyval.d = 0. ;
      }
      else{
	if(!(pNumOpt =  (double (*) (int, int, double))Get_NumberOption(yyvsp[0].c, pNumCat))){
	  yymsg(GERROR, "Unknown numeric option '%s.%s'", yyvsp[-2].c, yyvsp[0].c);
	  yyval.d = 0. ;
	}
	else
	  yyval.d = pNumOpt(0, GMSH_GET, 0);
      }
    ;
    break;}
case 398:
#line 2713 "Gmsh.y"
{
      if(!(pNumCat = Get_NumberOptionCategory(yyvsp[-5].c))){
	yymsg(GERROR, "Unknown numeric option class '%s'", yyvsp[-5].c);
	yyval.d = 0. ;
      }
      else{
	if(!(pNumOpt =  (double (*) (int, int, double))Get_NumberOption(yyvsp[0].c, pNumCat))){
	  yymsg(GERROR, "Unknown numeric option '%s[%d].%s'", yyvsp[-5].c, (int)yyvsp[-3].d, yyvsp[0].c);
	  yyval.d = 0. ;
	}
	else
	  yyval.d = pNumOpt((int)yyvsp[-3].d, GMSH_GET, 0);
      }
    ;
    break;}
case 399:
#line 2729 "Gmsh.y"
{
      if(!(pNumCat = Get_NumberOptionCategory(yyvsp[-3].c))){
	yymsg(GERROR, "Unknown numeric option class '%s'", yyvsp[-3].c);
	yyval.d = 0. ;
      }
      else{
	if(!(pNumOpt =  (double (*) (int, int, double))Get_NumberOption(yyvsp[-1].c, pNumCat))){
	  yymsg(GERROR, "Unknown numeric option '%s.%s'", yyvsp[-3].c, yyvsp[-1].c);
	  yyval.d = 0. ;
	}
	else
	  yyval.d = pNumOpt(0, GMSH_SET|GMSH_GUI, pNumOpt(0, GMSH_GET, 0)+yyvsp[0].i);
      }
    ;
    break;}
case 400:
#line 2745 "Gmsh.y"
{
      if(!(pNumCat = Get_NumberOptionCategory(yyvsp[-6].c))){
	yymsg(GERROR, "Unknown numeric option class '%s'", yyvsp[-6].c);
	yyval.d = 0. ;
      }
      else{
	if(!(pNumOpt =  (double (*) (int, int, double))Get_NumberOption(yyvsp[-1].c, pNumCat))){
	  yymsg(GERROR, "Unknown numeric option '%s[%d].%s'", yyvsp[-6].c, (int)yyvsp[-4].d, yyvsp[-1].c);
	  yyval.d = 0. ;
	}
	else
	  yyval.d = pNumOpt((int)yyvsp[-4].d, GMSH_SET|GMSH_GUI, pNumOpt((int)yyvsp[-4].d, GMSH_GET, 0)+yyvsp[0].i);
      }
    ;
    break;}
case 401:
#line 2763 "Gmsh.y"
{
      memcpy(yyval.v, yyvsp[0].v, 5*sizeof(double)) ;
    ;
    break;}
case 402:
#line 2767 "Gmsh.y"
{
      for(i=0 ; i<5 ; i++) yyval.v[i] = -yyvsp[0].v[i] ;
    ;
    break;}
case 403:
#line 2771 "Gmsh.y"
{ 
      for(i=0 ; i<5 ; i++) yyval.v[i] = yyvsp[0].v[i];
    ;
    break;}
case 404:
#line 2775 "Gmsh.y"
{ 
      for(i=0 ; i<5 ; i++) yyval.v[i] = yyvsp[-2].v[i] - yyvsp[0].v[i] ;
    ;
    break;}
case 405:
#line 2779 "Gmsh.y"
{
      for(i=0 ; i<5 ; i++) yyval.v[i] = yyvsp[-2].v[i] + yyvsp[0].v[i] ;
    ;
    break;}
case 406:
#line 2786 "Gmsh.y"
{ 
      yyval.v[0]=yyvsp[-9].d;  yyval.v[1]=yyvsp[-7].d;  yyval.v[2]=yyvsp[-5].d;  yyval.v[3]=yyvsp[-3].d; yyval.v[4]=yyvsp[-1].d;
    ;
    break;}
case 407:
#line 2790 "Gmsh.y"
{ 
      yyval.v[0]=yyvsp[-7].d;  yyval.v[1]=yyvsp[-5].d;  yyval.v[2]=yyvsp[-3].d;  yyval.v[3]=yyvsp[-1].d; yyval.v[4]=1.0;
    ;
    break;}
case 408:
#line 2794 "Gmsh.y"
{
      yyval.v[0]=yyvsp[-5].d;  yyval.v[1]=yyvsp[-3].d;  yyval.v[2]=yyvsp[-1].d;  yyval.v[3]=0.0; yyval.v[4]=1.0;
    ;
    break;}
case 409:
#line 2798 "Gmsh.y"
{
      yyval.v[0]=yyvsp[-5].d;  yyval.v[1]=yyvsp[-3].d;  yyval.v[2]=yyvsp[-1].d;  yyval.v[3]=0.0; yyval.v[4]=1.0;
    ;
    break;}
case 410:
#line 2805 "Gmsh.y"
{
    ;
    break;}
case 411:
#line 2808 "Gmsh.y"
{
    ;
    break;}
case 412:
#line 2814 "Gmsh.y"
{
    ;
    break;}
case 413:
#line 2817 "Gmsh.y"
{
    ;
    break;}
case 414:
#line 2823 "Gmsh.y"
{
    ;
    break;}
case 415:
#line 2826 "Gmsh.y"
{
       yyval.l=yyvsp[-1].l;
    ;
    break;}
case 416:
#line 2830 "Gmsh.y"
{
       yyval.l=yyvsp[-1].l;
    ;
    break;}
case 417:
#line 2837 "Gmsh.y"
{
      yyval.l = List_Create(2,1,sizeof(List_T*)) ;
      List_Add(yyval.l, &(yyvsp[0].l)) ;
    ;
    break;}
case 418:
#line 2842 "Gmsh.y"
{
      List_Add(yyval.l, &(yyvsp[0].l)) ;
    ;
    break;}
case 419:
#line 2850 "Gmsh.y"
{
      yyval.l = List_Create(2,1,sizeof(double)) ;
      List_Add(yyval.l, &(yyvsp[0].d)) ;
    ;
    break;}
case 420:
#line 2855 "Gmsh.y"
{
      yyval.l = yyvsp[0].l ;
    ;
    break;}
case 421:
#line 2859 "Gmsh.y"
{
      yyval.l=yyvsp[-1].l;
    ;
    break;}
case 422:
#line 2863 "Gmsh.y"
{
      yyval.l=yyvsp[-1].l;
      for(i=0 ; i<List_Nbr(yyval.l) ; i++){
	pd = (double*)List_Pointer(yyval.l, i);
	(*pd) = - (*pd);
      }
    ;
    break;}
case 423:
#line 2874 "Gmsh.y"
{ 
      yyval.l = List_Create(2,1,sizeof(double)) ; 
      for(d=yyvsp[-2].d ; (yyvsp[-2].d<yyvsp[0].d)?(d<=yyvsp[0].d):(d>=yyvsp[0].d) ; (yyvsp[-2].d<yyvsp[0].d)?(d+=1.):(d-=1.)) 
	List_Add(yyval.l, &d) ;
    ;
    break;}
case 424:
#line 2880 "Gmsh.y"
{
      yyval.l = List_Create(2,1,sizeof(double)) ; 
      if(!yyvsp[0].d || (yyvsp[-4].d<yyvsp[-2].d && yyvsp[0].d<0) || (yyvsp[-4].d>yyvsp[-2].d && yyvsp[0].d>0)){
        yymsg(GERROR, "Wrong increment in '%g:%g:%g'", yyvsp[-4].d, yyvsp[-2].d, yyvsp[0].d) ;
	List_Add(yyval.l, &(yyvsp[-4].d)) ;
      }
      else
	for(d=yyvsp[-4].d ; (yyvsp[0].d>0)?(d<=yyvsp[-2].d):(d>=yyvsp[-2].d) ; d+=yyvsp[0].d)
	  List_Add(yyval.l, &d) ;
   ;
    break;}
case 425:
#line 2891 "Gmsh.y"
{
      yyval.l = List_Create(2,1,sizeof(double)) ;
      TheSymbol.Name = yyvsp[-2].c ;
      if (!(pSymbol = (Symbol*)List_PQuery(Symbol_L, &TheSymbol, CompareSymbols))) {
	yymsg(GERROR, "Unknown variable '%s'", yyvsp[-2].c) ;
	d = 0.0 ;
	List_Add(yyval.l, &d);
      }
      else{
	for(i = 0 ; i < List_Nbr(pSymbol->val) ; i++)
	  List_Add(yyval.l, (double*)List_Pointer_Fast(pSymbol->val, i)) ;
      }
    ;
    break;}
case 426:
#line 2905 "Gmsh.y"
{
      yyval.l = List_Create(2,1,sizeof(double)) ;
      TheSymbol.Name = yyvsp[-2].c ;
      if (!(pSymbol = (Symbol*)List_PQuery(Symbol_L, &TheSymbol, CompareSymbols))) {
	yymsg(GERROR, "Unknown variable '%s'", yyvsp[-2].c) ;
	d = 0.0 ;
	List_Add(yyval.l, &d);
      }
      else{
	for(i = 0 ; i < List_Nbr(pSymbol->val) ; i++){
	  d = - *(double*)List_Pointer_Fast(pSymbol->val, i);
	  List_Add(yyval.l, &d) ;
	}
      }
    ;
    break;}
case 427:
#line 2921 "Gmsh.y"
{
      yyval.l = List_Create(2,1,sizeof(double)) ;
      TheSymbol.Name = yyvsp[-5].c ;
      if (!(pSymbol = (Symbol*)List_PQuery(Symbol_L, &TheSymbol, CompareSymbols))) {
	yymsg(GERROR, "Unknown variable '%s'", yyvsp[-5].c) ;
	d = 0.0 ;
	List_Add(yyval.l, &d);
      }
      else{
	for(i = 0 ; i < List_Nbr(yyvsp[-2].l) ; i++){
	  j = (int)(*(double*)List_Pointer_Fast(yyvsp[-2].l, i));
	  if((pd = (double*)List_Pointer_Test(pSymbol->val, j)))
	    List_Add(yyval.l, pd) ;
	  else
	    yymsg(GERROR, "Uninitialized variable '%s[%d]'", yyvsp[-5].c, j) ;	  
	}
      }
      List_Delete(yyvsp[-2].l);
    ;
    break;}
case 428:
#line 2941 "Gmsh.y"
{
      yyval.l = List_Create(2,1,sizeof(double)) ;
      TheSymbol.Name = yyvsp[-5].c ;
      if (!(pSymbol = (Symbol*)List_PQuery(Symbol_L, &TheSymbol, CompareSymbols))) {
	yymsg(GERROR, "Unknown variable '%s'", yyvsp[-5].c) ;
	d = 0.0 ;
	List_Add(yyval.l, &d);
      }
      else{
	for(i = 0 ; i < List_Nbr(yyvsp[-2].l) ; i++){
	  j = (int)(*(double*)List_Pointer_Fast(yyvsp[-2].l, i));
	  if((pd = (double*)List_Pointer_Test(pSymbol->val, j))){
	    d = - *pd;
	    List_Add(yyval.l, &d) ;
	  }
	  else
	    yymsg(GERROR, "Uninitialized variable '%s[%d]'", yyvsp[-5].c, j) ;	  
	}
      }
      List_Delete(yyvsp[-2].l);
    ;
    break;}
case 429:
#line 2966 "Gmsh.y"
{
      yyval.l = List_Create(2,1,sizeof(double)) ;
      List_Add(yyval.l, &(yyvsp[0].d)) ;
    ;
    break;}
case 430:
#line 2971 "Gmsh.y"
{
      yyval.l = yyvsp[0].l ;
    ;
    break;}
case 431:
#line 2975 "Gmsh.y"
{
      List_Add(yyval.l, &(yyvsp[0].d)) ;
    ;
    break;}
case 432:
#line 2979 "Gmsh.y"
{
      for(i=0 ; i<List_Nbr(yyvsp[0].l) ; i++){
	List_Read(yyvsp[0].l, i, &d) ;
	List_Add(yyval.l, &d) ;
      }
      List_Delete(yyvsp[0].l);
    ;
    break;}
case 433:
#line 2991 "Gmsh.y"
{
      yyval.u = PACK_COLOR((int)yyvsp[-7].d, (int)yyvsp[-5].d, (int)yyvsp[-3].d, (int)yyvsp[-1].d);
    ;
    break;}
case 434:
#line 2995 "Gmsh.y"
{
      yyval.u = PACK_COLOR((int)yyvsp[-5].d, (int)yyvsp[-3].d, (int)yyvsp[-1].d, 255);
    ;
    break;}
case 435:
#line 3006 "Gmsh.y"
{
      yyval.u = Get_ColorForString(ColorString, -1, yyvsp[0].c, &flag);
      if(flag) yymsg(GERROR, "Unknown color '%s'", yyvsp[0].c);
    ;
    break;}
case 436:
#line 3011 "Gmsh.y"
{
      if(!(pColCat = Get_ColorOptionCategory(yyvsp[-4].c))){
	yymsg(GERROR, "Unknown color option class '%s'", yyvsp[-4].c);
	yyval.u = 0 ;
      }
      else{
	if(!(pColOpt =  (unsigned int (*) (int, int, unsigned int))Get_ColorOption(yyvsp[0].c, pColCat))){
	  yymsg(GERROR, "Unknown color option '%s.Color.%s'", yyvsp[-4].c, yyvsp[0].c);
	  yyval.u = 0 ;
	}
	else{
	  yyval.u = pColOpt(0,GMSH_GET,0) ;
	}
      }
    ;
    break;}
case 437:
#line 3030 "Gmsh.y"
{
      yyval.l = yyvsp[-1].l;
    ;
    break;}
case 438:
#line 3034 "Gmsh.y"
{
      yyval.l = List_Create(256,10,sizeof(unsigned int)) ;
      GmshColorTable *ct = Get_ColorTable((int)yyvsp[-3].d);
      if(!ct)
	yymsg(GERROR, "View[%d] does not exist", (int)yyvsp[-3].d);
      else{
	for(i=0 ; i<ct->size ; i++) 
	  List_Add(yyval.l, &ct->table[i]);
      }
    ;
    break;}
case 439:
#line 3048 "Gmsh.y"
{
      yyval.l = List_Create(256,10,sizeof(unsigned int)) ;
      List_Add(yyval.l, &(yyvsp[0].u)) ;
    ;
    break;}
case 440:
#line 3053 "Gmsh.y"
{
      List_Add(yyval.l, &(yyvsp[0].u)) ;
    ;
    break;}
case 441:
#line 3060 "Gmsh.y"
{
      yyval.c = yyvsp[0].c;
    ;
    break;}
case 442:
#line 3064 "Gmsh.y"
{
      yyval.c = (char *)Malloc((strlen(yyvsp[-3].c)+strlen(yyvsp[-1].c)+1)*sizeof(char)) ;
      strcpy(yyval.c, yyvsp[-3].c) ;  
      strcat(yyval.c, yyvsp[-1].c) ;
      Free(yyvsp[-3].c);
      Free(yyvsp[-1].c);
    ;
    break;}
case 443:
#line 3072 "Gmsh.y"
{
      yyval.c = (char *)Malloc((strlen(yyvsp[-1].c)+1)*sizeof(char)) ;
      for(i=strlen(yyvsp[-1].c)-1; i>=0; i--){
	if(yyvsp[-1].c[i] == '.'){
	  strncpy(yyval.c,yyvsp[-1].c,i);
	  yyval.c[i]='\0';
	  break;
	}
      }
      if(i<=0) strcpy(yyval.c,yyvsp[-1].c);
      Free(yyvsp[-1].c);
    ;
    break;}
case 444:
#line 3085 "Gmsh.y"
{
      yyval.c = yyvsp[-1].c;
    ;
    break;}
case 445:
#line 3089 "Gmsh.y"
{
      i = PrintListOfDouble(yyvsp[-3].c,yyvsp[-1].l,tmpstring);
      if(i<0){
	yymsg(GERROR, "Too few arguments in Sprintf");
	yyval.c = yyvsp[-3].c;
      }
      else if(i>0){
	yymsg(GERROR, "Too many arguments (%d) in Sprintf", i);
	yyval.c = yyvsp[-3].c;
      }
      else{
	yyval.c = (char*)Malloc((strlen(tmpstring)+1)*sizeof(char));
	strcpy(yyval.c, tmpstring);
	Free(yyvsp[-3].c);
      }
      List_Delete(yyvsp[-1].l);
    ;
    break;}
case 446:
#line 3107 "Gmsh.y"
{ 
      if(!(pStrCat = Get_StringOptionCategory(yyvsp[-3].c)))
	yymsg(GERROR, "Unknown string option class '%s'", yyvsp[-3].c);
      else{
	if(!(pStrOpt = (char *(*) (int, int, char *))Get_StringOption(yyvsp[-1].c, pStrCat)))
	  yymsg(GERROR, "Unknown string option '%s.%s'", yyvsp[-3].c, yyvsp[-1].c);
	else{
	  str = pStrOpt(0,GMSH_GET,NULL) ;
	  yyval.c = (char*)Malloc((strlen(str)+1)*sizeof(char));
	  strcpy(yyval.c, str);
	}
      }
    ;
    break;}
case 447:
#line 3121 "Gmsh.y"
{ 
      if(!(pStrCat = Get_StringOptionCategory(yyvsp[-6].c)))
	yymsg(GERROR, "Unknown string option class '%s'", yyvsp[-6].c);
      else{
	if(!(pStrOpt = (char *(*) (int, int, char *))Get_StringOption(yyvsp[-1].c, pStrCat)))
	  yymsg(GERROR, "Unknown string option '%s[%d].%s'", yyvsp[-6].c, (int)yyvsp[-4].d, yyvsp[-1].c);
	else{
	  str = pStrOpt((int)yyvsp[-4].d,GMSH_GET,NULL) ;
	  yyval.c = (char*)Malloc((strlen(str)+1)*sizeof(char));
	  strcpy(yyval.c, str);
	}
      }
    ;
    break;}
}
   /* the action file gets copied in in place of this dollarsign */
#line 543 "/usr/lib/bison.simple"

  yyvsp -= yylen;
  yyssp -= yylen;
#ifdef YYLSP_NEEDED
  yylsp -= yylen;
#endif

#if YYDEBUG != 0
  if (yydebug)
    {
      short *ssp1 = yyss - 1;
      fprintf (stderr, "state stack now");
      while (ssp1 != yyssp)
	fprintf (stderr, " %d", *++ssp1);
      fprintf (stderr, "\n");
    }
#endif

  *++yyvsp = yyval;

#ifdef YYLSP_NEEDED
  yylsp++;
  if (yylen == 0)
    {
      yylsp->first_line = yylloc.first_line;
      yylsp->first_column = yylloc.first_column;
      yylsp->last_line = (yylsp-1)->last_line;
      yylsp->last_column = (yylsp-1)->last_column;
      yylsp->text = 0;
    }
  else
    {
      yylsp->last_line = (yylsp+yylen-1)->last_line;
      yylsp->last_column = (yylsp+yylen-1)->last_column;
    }
#endif

  /* Now "shift" the result of the reduction.
     Determine what state that goes to,
     based on the state we popped back to
     and the rule number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTBASE] + *yyssp;
  if (yystate >= 0 && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTBASE];

  goto yynewstate;

yyerrlab:   /* here on detecting error */

  if (! yyerrstatus)
    /* If not already recovering from an error, report this error.  */
    {
      ++yynerrs;

#ifdef YYERROR_VERBOSE
      yyn = yypact[yystate];

      if (yyn > YYFLAG && yyn < YYLAST)
	{
	  int size = 0;
	  char *msg;
	  int x, count;

	  count = 0;
	  /* Start X at -yyn if nec to avoid negative indexes in yycheck.  */
	  for (x = (yyn < 0 ? -yyn : 0);
	       x < (sizeof(yytname) / sizeof(char *)); x++)
	    if (yycheck[x + yyn] == x)
	      size += strlen(yytname[x]) + 15, count++;
	  msg = (char *) malloc(size + 15);
	  if (msg != 0)
	    {
	      strcpy(msg, "parse error");

	      if (count < 5)
		{
		  count = 0;
		  for (x = (yyn < 0 ? -yyn : 0);
		       x < (sizeof(yytname) / sizeof(char *)); x++)
		    if (yycheck[x + yyn] == x)
		      {
			strcat(msg, count == 0 ? ", expecting `" : " or `");
			strcat(msg, yytname[x]);
			strcat(msg, "'");
			count++;
		      }
		}
	      yyerror(msg);
	      free(msg);
	    }
	  else
	    yyerror ("parse error; also virtual memory exceeded");
	}
      else
#endif /* YYERROR_VERBOSE */
	yyerror("parse error");
    }

  goto yyerrlab1;
yyerrlab1:   /* here on error raised explicitly by an action */

  if (yyerrstatus == 3)
    {
      /* if just tried and failed to reuse lookahead token after an error, discard it.  */

      /* return failure if at end of input */
      if (yychar == YYEOF)
	YYABORT;

#if YYDEBUG != 0
      if (yydebug)
	fprintf(stderr, "Discarding token %d (%s).\n", yychar, yytname[yychar1]);
#endif

      yychar = YYEMPTY;
    }

  /* Else will try to reuse lookahead token
     after shifting the error token.  */

  yyerrstatus = 3;		/* Each real token shifted decrements this */

  goto yyerrhandle;

yyerrdefault:  /* current state does not do anything special for the error token. */

#if 0
  /* This is wrong; only states that explicitly want error tokens
     should shift them.  */
  yyn = yydefact[yystate];  /* If its default is to accept any token, ok.  Otherwise pop it.*/
  if (yyn) goto yydefault;
#endif

yyerrpop:   /* pop the current state because it cannot handle the error token */

  if (yyssp == yyss) YYABORT;
  yyvsp--;
  yystate = *--yyssp;
#ifdef YYLSP_NEEDED
  yylsp--;
#endif

#if YYDEBUG != 0
  if (yydebug)
    {
      short *ssp1 = yyss - 1;
      fprintf (stderr, "Error: state stack now");
      while (ssp1 != yyssp)
	fprintf (stderr, " %d", *++ssp1);
      fprintf (stderr, "\n");
    }
#endif

yyerrhandle:

  yyn = yypact[yystate];
  if (yyn == YYFLAG)
    goto yyerrdefault;

  yyn += YYTERROR;
  if (yyn < 0 || yyn > YYLAST || yycheck[yyn] != YYTERROR)
    goto yyerrdefault;

  yyn = yytable[yyn];
  if (yyn < 0)
    {
      if (yyn == YYFLAG)
	goto yyerrpop;
      yyn = -yyn;
      goto yyreduce;
    }
  else if (yyn == 0)
    goto yyerrpop;

  if (yyn == YYFINAL)
    YYACCEPT;

#if YYDEBUG != 0
  if (yydebug)
    fprintf(stderr, "Shifting error token, ");
#endif

  *++yyvsp = yylval;
#ifdef YYLSP_NEEDED
  *++yylsp = yylloc;
#endif

  yystate = yyn;
  goto yynewstate;

 yyacceptlab:
  /* YYACCEPT comes here.  */
  if (yyfree_stacks)
    {
      free (yyss);
      free (yyvs);
#ifdef YYLSP_NEEDED
      free (yyls);
#endif
    }
  return 0;

 yyabortlab:
  /* YYABORT comes here.  */
  if (yyfree_stacks)
    {
      free (yyss);
      free (yyvs);
#ifdef YYLSP_NEEDED
      free (yyls);
#endif
    }
  return 1;
}
#line 3136 "Gmsh.y"


void InitSymbols(void){
  if(!Symbol_L)
    Symbol_L = List_Create(50,10,sizeof(Symbol));
  else
    List_Reset(Symbol_L);
}

void DeleteSymbols(void){
  int i;
  for(i = 0 ; i < List_Nbr(Symbol_L) ; i++)
    List_Delete(((Symbol*)List_Pointer_Fast(Symbol_L,i))->val);
  List_Delete(Symbol_L);
}

int CompareSymbols (const void *a, const void *b){
  return(strcmp(((Symbol*)a)->Name,((Symbol*)b)->Name));
}

int PrintListOfDouble(char *format, List_T *list, char *buffer){
  int i, j, k;
  char tmp1[256], tmp2[256];

  j=0;
  while(format[j]!='%') j++;
  strncpy(buffer, format, j); 
  buffer[j]='\0'; 
  for(i = 0 ; i<List_Nbr(list) ; i++){
    k = j;
    j++;
    if(j<(int)strlen(format)){
      if(format[j]=='%'){
	strcat(buffer, "%");
	j++;
      }
      while(format[j]!='%' && j<(int)strlen(format)) j++;
      if(k != j){
	strncpy(tmp1, &(format[k]),j-k);
	tmp1[j-k]='\0';
	sprintf(tmp2, tmp1, *(double*)List_Pointer(list,i)); 
	strcat(buffer, tmp2);
      }
    }
    else{
      return List_Nbr(list)-i;
      break ;
    }
  }
  if(j != (int)strlen(format))
    return -1;
  return 0;
}

void yyerror(char *s){
  Msg(GERROR, "'%s', line %d : %s (%s)",yyname,yylineno-1,s,yytext);
  yyerrorstate=1;
}

void yymsg(int type, char *fmt, ...){
  va_list args;
  char tmp[1024];

  va_start (args, fmt);
  vsprintf (tmp, fmt, args);
  va_end (args);

  Msg(type, "'%s', line %d : %s", yyname, yylineno-1, tmp);

  if(type == GERROR) yyerrorstate=1;
}


