/* A Bison parser, made from Gmsh.y
   by GNU bison 1.35.  */

#define YYBISON 1  /* Identify Bison output.  */

# define	tDOUBLE	257
# define	tSTRING	258
# define	tBIGSTR	259
# define	tEND	260
# define	tAFFECT	261
# define	tDOTS	262
# define	tPi	263
# define	tMPI_Rank	264
# define	tMPI_Size	265
# define	tExp	266
# define	tLog	267
# define	tLog10	268
# define	tSqrt	269
# define	tSin	270
# define	tAsin	271
# define	tCos	272
# define	tAcos	273
# define	tTan	274
# define	tRand	275
# define	tAtan	276
# define	tAtan2	277
# define	tSinh	278
# define	tCosh	279
# define	tTanh	280
# define	tFabs	281
# define	tFloor	282
# define	tCeil	283
# define	tFmod	284
# define	tModulo	285
# define	tHypot	286
# define	tPrintf	287
# define	tSprintf	288
# define	tStrCat	289
# define	tStrPrefix	290
# define	tDraw	291
# define	tPoint	292
# define	tCircle	293
# define	tEllipse	294
# define	tLine	295
# define	tSurface	296
# define	tSpline	297
# define	tVolume	298
# define	tCharacteristic	299
# define	tLength	300
# define	tParametric	301
# define	tElliptic	302
# define	tPlane	303
# define	tRuled	304
# define	tTriangulation	305
# define	tTransfinite	306
# define	tComplex	307
# define	tPhysical	308
# define	tUsing	309
# define	tBump	310
# define	tProgression	311
# define	tPlugin	312
# define	tRotate	313
# define	tTranslate	314
# define	tSymmetry	315
# define	tDilate	316
# define	tExtrude	317
# define	tDuplicata	318
# define	tLoop	319
# define	tRecombine	320
# define	tDelete	321
# define	tCoherence	322
# define	tIntersect	323
# define	tAttractor	324
# define	tLayers	325
# define	tScalarPoint	326
# define	tVectorPoint	327
# define	tTensorPoint	328
# define	tScalarLine	329
# define	tVectorLine	330
# define	tTensorLine	331
# define	tScalarTriangle	332
# define	tVectorTriangle	333
# define	tTensorTriangle	334
# define	tScalarQuadrangle	335
# define	tVectorQuadrangle	336
# define	tTensorQuadrangle	337
# define	tScalarTetrahedron	338
# define	tVectorTetrahedron	339
# define	tTensorTetrahedron	340
# define	tScalarHexahedron	341
# define	tVectorHexahedron	342
# define	tTensorHexahedron	343
# define	tScalarPrism	344
# define	tVectorPrism	345
# define	tTensorPrism	346
# define	tScalarPyramid	347
# define	tVectorPyramid	348
# define	tTensorPyramid	349
# define	tText2D	350
# define	tText3D	351
# define	tBSpline	352
# define	tBezier	353
# define	tNurbs	354
# define	tOrder	355
# define	tWith	356
# define	tBounds	357
# define	tKnots	358
# define	tColor	359
# define	tColorTable	360
# define	tFor	361
# define	tIn	362
# define	tEndFor	363
# define	tIf	364
# define	tEndIf	365
# define	tExit	366
# define	tReturn	367
# define	tCall	368
# define	tFunction	369
# define	tMesh	370
# define	tTrimmed	371
# define	tB_SPLINE_SURFACE_WITH_KNOTS	372
# define	tB_SPLINE_CURVE_WITH_KNOTS	373
# define	tCARTESIAN_POINT	374
# define	tTRUE	375
# define	tFALSE	376
# define	tUNSPECIFIED	377
# define	tU	378
# define	tV	379
# define	tEDGE_CURVE	380
# define	tVERTEX_POINT	381
# define	tORIENTED_EDGE	382
# define	tPLANE	383
# define	tFACE_OUTER_BOUND	384
# define	tEDGE_LOOP	385
# define	tADVANCED_FACE	386
# define	tVECTOR	387
# define	tDIRECTION	388
# define	tAXIS2_PLACEMENT_3D	389
# define	tISO	390
# define	tENDISO	391
# define	tENDSEC	392
# define	tDATA	393
# define	tHEADER	394
# define	tFILE_DESCRIPTION	395
# define	tFILE_SCHEMA	396
# define	tFILE_NAME	397
# define	tMANIFOLD_SOLID_BREP	398
# define	tCLOSED_SHELL	399
# define	tADVANCED_BREP_SHAPE_REPRESENTATION	400
# define	tFACE_BOUND	401
# define	tCYLINDRICAL_SURFACE	402
# define	tCONICAL_SURFACE	403
# define	tCIRCLE	404
# define	tTRIMMED_CURVE	405
# define	tGEOMETRIC_SET	406
# define	tCOMPOSITE_CURVE_SEGMENT	407
# define	tCONTINUOUS	408
# define	tCOMPOSITE_CURVE	409
# define	tTOROIDAL_SURFACE	410
# define	tPRODUCT_DEFINITION	411
# define	tPRODUCT_DEFINITION_SHAPE	412
# define	tSHAPE_DEFINITION_REPRESENTATION	413
# define	tELLIPSE	414
# define	tSolid	415
# define	tEndSolid	416
# define	tVertex	417
# define	tFacet	418
# define	tNormal	419
# define	tOuter	420
# define	tLoopSTL	421
# define	tEndLoop	422
# define	tEndFacet	423
# define	tAFFECTPLUS	424
# define	tAFFECTMINUS	425
# define	tAFFECTTIMES	426
# define	tAFFECTDIVIDE	427
# define	tOR	428
# define	tAND	429
# define	tEQUAL	430
# define	tNOTEQUAL	431
# define	tAPPROXEQUAL	432
# define	tLESSOREQUAL	433
# define	tGREATEROREQUAL	434
# define	tCROSSPRODUCT	435
# define	tPLUSPLUS	436
# define	tMINUSMINUS	437
# define	UNARYPREC	438

#line 1 "Gmsh.y"
 

// $Id: Gmsh.tab.cpp,v 1.157 2003-04-19 22:10:28 geuzaine Exp $
//
// Copyright (C) 1997-2003 C. Geuzaine, J.-F. Remacle
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
// USA.
// 
// Please report all bugs and problems to "gmsh@geuz.org".

#include <stdarg.h>
#include "PluginManager.h"
#include "ParUtil.h"
#include "Gmsh.h"
#include "Numeric.h"
#include "Context.h"
#include "Geo.h"
#include "CAD.h"
#include "DataBase.h"
#include "Mesh.h"
#include "Draw.h"
#include "Create.h"
#include "Views.h"
#include "StepGeomDatabase.h"
#include "Options.h"
#include "Colors.h"
#include "Parser.h"
#include "OpenFile.h"
#include "CommandLine.h"
#include "FunctionManager.h"
#include "ColorTable.h"
#include "Timer.h"
#include "CreateFile.h"
#include "STL.h"

List_T *Symbol_L = NULL;

extern Context_T CTX;
extern Mesh *THEM;

static FILE *yyinTab[MAX_OPEN_FILES];
static int yylinenoTab[MAX_OPEN_FILES];
static fpos_t yyposImbricatedLoopsTab[MAX_OPEN_FILES];
static int yylinenoImbricatedLoopsTab[MAX_OPEN_FILES];
static double LoopControlVariablesTab[MAX_OPEN_FILES][3];
static char *LoopControlVariablesNameTab[MAX_OPEN_FILES];
static char yynameTab[MAX_OPEN_FILES][256];
static char tmpstring[1024];
static Symbol TheSymbol, *pSymbol;
static Surface *STL_Surf;
static Shape TheShape;
static int i, j, k, flag, RecursionLevel = 0, ImbricatedLoop = 0;
static int Last_NumberOfPoints = 0;
static double d, *pd;
static ExtrudeParams extr;
static char *str;
static StringXString *pStrCat;
static StringXNumber *pNumCat;
static StringXColor *pColCat;
static double (*pNumOpt)(int num, int action, double value);
static char* (*pStrOpt)(int num, int action, char *value);
static unsigned int (*pColOpt)(int num, int action, unsigned int value);
static Post_View *View;

char *strsave (char *ptr);
void yyerror (char *s);
void yymsg (int type, char *fmt, ...);
void skip_until (char *skip, char *until);
int PrintListOfDouble (char *format, List_T *list, char *buffer);

#line 85 "Gmsh.y"
#ifndef YYSTYPE
typedef union {
  char *c;
  int i;
  unsigned int u;
  double d;
  double v[5];
  Shape s;
  List_T *l;
} yystype;
# define YYSTYPE yystype
# define YYSTYPE_IS_TRIVIAL 1
#endif
#ifndef YYDEBUG
# define YYDEBUG 0
#endif



#define	YYFINAL		2286
#define	YYFLAG		-32768
#define	YYNTBASE	203

/* YYTRANSLATE(YYLEX) -- Bison token number corresponding to YYLEX. */
#define YYTRANSLATE(x) ((unsigned)(x) <= 438 ? yytranslate[x] : 336)

/* YYTRANSLATE[YYLEX] -- Bison token number corresponding to YYLEX. */
static const short yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   190,     2,     2,     2,   188,     2,     2,
     195,   196,   186,   184,   200,   185,   199,   187,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     180,     2,   182,   174,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,   197,     2,   198,   194,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   201,     2,   202,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     3,     4,     5,
       6,     7,     8,     9,    10,    11,    12,    13,    14,    15,
      16,    17,    18,    19,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    31,    32,    33,    34,    35,
      36,    37,    38,    39,    40,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      86,    87,    88,    89,    90,    91,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   175,   176,
     177,   178,   179,   181,   183,   189,   191,   192,   193
};

#if YYDEBUG
static const short yyprhs[] =
{
       0,     0,     2,     4,     6,     9,    11,    14,    16,    38,
      40,    41,    44,    46,    48,    50,    53,    56,    59,    62,
      65,    73,    79,    97,   107,   131,   163,   179,   191,   203,
     219,   229,   243,   253,   265,   279,   289,   299,   311,   321,
     333,   343,   355,   369,   383,   395,   409,   427,   437,   449,
     461,   475,   487,   497,   498,   501,   503,   505,   507,   509,
     511,   513,   515,   517,   519,   521,   523,   525,   527,   533,
     541,   548,   557,   558,   561,   564,   567,   570,   573,   576,
     579,   582,   585,   588,   591,   594,   597,   600,   603,   606,
     609,   612,   615,   618,   621,   624,   627,   630,   633,   636,
     638,   642,   643,   657,   659,   663,   664,   678,   680,   684,
     685,   699,   701,   705,   706,   726,   728,   732,   733,   753,
     755,   759,   760,   780,   782,   786,   787,   813,   815,   819,
     820,   846,   848,   852,   853,   879,   881,   885,   886,   918,
     920,   924,   925,   957,   959,   963,   964,   996,   998,  1002,
    1003,  1035,  1037,  1041,  1042,  1074,  1076,  1080,  1081,  1113,
    1115,  1119,  1120,  1176,  1178,  1182,  1183,  1239,  1241,  1245,
    1246,  1302,  1304,  1308,  1309,  1353,  1355,  1359,  1360,  1404,
    1406,  1410,  1411,  1455,  1457,  1461,  1462,  1500,  1502,  1506,
    1507,  1545,  1547,  1551,  1552,  1590,  1592,  1596,  1597,  1611,
    1613,  1617,  1618,  1634,  1636,  1638,  1640,  1642,  1644,  1646,
    1648,  1653,  1661,  1671,  1678,  1682,  1689,  1696,  1706,  1713,
    1723,  1729,  1738,  1747,  1759,  1766,  1776,  1786,  1796,  1804,
    1813,  1826,  1833,  1841,  1849,  1862,  1870,  1878,  1888,  1906,
    1915,  1924,  1932,  1940,  1952,  1961,  1974,  1983,  1998,  2021,
    2042,  2051,  2060,  2069,  2077,  2086,  2092,  2104,  2110,  2120,
    2122,  2124,  2126,  2127,  2130,  2137,  2144,  2151,  2156,  2163,
    2168,  2175,  2179,  2185,  2189,  2193,  2201,  2204,  2207,  2214,
    2223,  2232,  2243,  2245,  2248,  2250,  2254,  2259,  2261,  2270,
    2283,  2298,  2299,  2312,  2313,  2330,  2331,  2350,  2359,  2372,
    2387,  2388,  2401,  2402,  2419,  2420,  2439,  2448,  2461,  2476,
    2477,  2490,  2491,  2508,  2509,  2528,  2530,  2533,  2543,  2551,
    2554,  2561,  2571,  2581,  2590,  2599,  2608,  2615,  2620,  2623,
    2626,  2628,  2630,  2632,  2634,  2636,  2638,  2642,  2645,  2648,
    2651,  2655,  2659,  2663,  2667,  2671,  2675,  2679,  2683,  2687,
    2691,  2695,  2699,  2703,  2707,  2713,  2718,  2723,  2728,  2733,
    2738,  2743,  2748,  2753,  2758,  2763,  2770,  2775,  2780,  2785,
    2790,  2795,  2800,  2807,  2814,  2821,  2826,  2831,  2836,  2841,
    2846,  2851,  2856,  2861,  2866,  2871,  2876,  2883,  2888,  2893,
    2898,  2903,  2908,  2913,  2920,  2927,  2934,  2939,  2941,  2943,
    2945,  2947,  2949,  2954,  2957,  2963,  2967,  2974,  2979,  2987,
    2989,  2992,  2995,  2999,  3003,  3015,  3025,  3033,  3041,  3042,
    3046,  3048,  3052,  3053,  3057,  3061,  3063,  3067,  3069,  3071,
    3075,  3080,  3084,  3090,  3094,  3099,  3106,  3114,  3116,  3118,
    3122,  3126,  3136,  3144,  3146,  3152,  3156,  3163,  3165,  3169,
    3171,  3178,  3183,  3188,  3195,  3202
};
static const short yyrhs[] =
{
     206,     0,   205,     0,   211,     0,     1,     6,     0,     3,
       0,   185,     3,     0,   161,     0,   164,   165,   204,   204,
     204,   166,   167,   163,   204,   204,   204,   163,   204,   204,
     204,   163,   204,   204,   204,   168,   169,     0,   162,     0,
       0,   206,   207,     0,   208,     0,   210,     0,   209,     0,
     136,     6,     0,   137,     6,     0,   139,     6,     0,   138,
       6,     0,   140,     6,     0,   141,   195,   325,   200,     5,
     196,     6,     0,   142,   195,   325,   196,     6,     0,   143,
     195,     5,   200,     5,   200,   325,   200,   325,   200,     5,
     200,     5,   200,     5,   196,     6,     0,     3,     7,   120,
     195,     5,   200,   323,   196,     6,     0,     3,     7,   119,
     195,     5,   200,   321,   200,   329,   200,   320,   200,   320,
     200,   320,   200,   329,   200,   329,   200,   320,   196,     6,
       0,     3,     7,   118,   195,     5,   200,   321,   200,   321,
     200,   327,   200,   320,   200,   320,   200,   320,   200,   320,
     200,   329,   200,   329,   200,   329,   200,   329,   200,   320,
     196,     6,     0,     3,     7,   126,   195,     5,   200,     3,
     200,     3,   200,     3,   200,   320,   196,     6,     0,     3,
       7,   130,   195,     5,   200,     3,   200,   320,   196,     6,
       0,     3,     7,   147,   195,     5,   200,     3,   200,   320,
     196,     6,     0,     3,     7,   128,   195,     5,   200,   186,
     200,   186,   200,   321,   200,   320,   196,     6,     0,     3,
       7,   131,   195,     5,   200,   329,   196,     6,     0,     3,
       7,   132,   195,     5,   200,   329,   200,     3,   200,   320,
     196,     6,     0,     3,     7,   127,   195,     5,   200,     3,
     196,     6,     0,     3,     7,   133,   195,     5,   200,     3,
     200,   321,   196,     6,     0,     3,     7,   135,   195,     5,
     200,     3,   200,     3,   200,     3,   196,     6,     0,     3,
       7,   134,   195,     5,   200,   323,   196,     6,     0,     3,
       7,   129,   195,     5,   200,     3,   196,     6,     0,     3,
       7,    41,   195,     5,   200,     3,   200,     3,   196,     6,
       0,     3,     7,   145,   195,     5,   200,   329,   196,     6,
       0,     3,     7,   146,   195,     5,   200,   329,   200,     3,
     196,     6,     0,     3,     7,   144,   195,     5,   200,     3,
     196,     6,     0,     3,     7,   148,   195,     5,   200,     3,
     200,   321,   196,     6,     0,     3,     7,   149,   195,     5,
     200,     3,   200,   321,   200,   321,   196,     6,     0,     3,
       7,   156,   195,     5,   200,     3,   200,   321,   200,   321,
     196,     6,     0,     3,     7,   150,   195,     5,   200,     3,
     200,   321,   196,     6,     0,     3,     7,   160,   195,     5,
     200,     3,   200,   321,   200,   321,   196,     6,     0,     3,
       7,   151,   195,     5,   200,     3,   200,   329,   200,   329,
     200,   320,   200,   320,   196,     6,     0,     3,     7,   152,
     195,     5,   200,   329,   196,     6,     0,     3,     7,   153,
     195,   154,   200,   320,   200,     3,   196,     6,     0,     3,
       7,   155,   195,     5,   200,   329,   200,   320,   196,     6,
       0,     3,     7,   157,   195,     5,   200,     5,   200,     3,
     200,     3,   196,     6,     0,     3,     7,   158,   195,     5,
     200,     5,   200,     3,   196,     6,     0,     3,     7,   159,
     195,     3,   200,     3,   196,     6,     0,     0,   211,   212,
       0,   214,     0,   213,     0,   296,     0,   297,     0,   298,
       0,   301,     0,   302,     0,   303,     0,   306,     0,   318,
       0,   319,     0,   305,     0,   304,     0,    33,   195,     5,
     196,     6,     0,    33,   195,     5,   200,   331,   196,     6,
       0,     4,     5,   201,   215,   202,     6,     0,     4,     5,
       4,   323,   201,   215,   202,     6,     0,     0,   215,   217,
       0,   215,   220,     0,   215,   223,     0,   215,   226,     0,
     215,   229,     0,   215,   232,     0,   215,   235,     0,   215,
     238,     0,   215,   241,     0,   215,   244,     0,   215,   247,
       0,   215,   250,     0,   215,   253,     0,   215,   256,     0,
     215,   259,     0,   215,   262,     0,   215,   265,     0,   215,
     268,     0,   215,   271,     0,   215,   274,     0,   215,   277,
       0,   215,   280,     0,   215,   283,     0,   215,   286,     0,
     215,   289,     0,   215,   292,     0,   321,     0,   216,   200,
     321,     0,     0,    72,   195,   321,   200,   321,   200,   321,
     196,   218,   201,   216,   202,     6,     0,   321,     0,   219,
     200,   321,     0,     0,    73,   195,   321,   200,   321,   200,
     321,   196,   221,   201,   219,   202,     6,     0,   321,     0,
     222,   200,   321,     0,     0,    74,   195,   321,   200,   321,
     200,   321,   196,   224,   201,   222,   202,     6,     0,   321,
       0,   225,   200,   321,     0,     0,    75,   195,   321,   200,
     321,   200,   321,   200,   321,   200,   321,   200,   321,   196,
     227,   201,   225,   202,     6,     0,   321,     0,   228,   200,
     321,     0,     0,    76,   195,   321,   200,   321,   200,   321,
     200,   321,   200,   321,   200,   321,   196,   230,   201,   228,
     202,     6,     0,   321,     0,   231,   200,   321,     0,     0,
      77,   195,   321,   200,   321,   200,   321,   200,   321,   200,
     321,   200,   321,   196,   233,   201,   231,   202,     6,     0,
     321,     0,   234,   200,   321,     0,     0,    78,   195,   321,
     200,   321,   200,   321,   200,   321,   200,   321,   200,   321,
     200,   321,   200,   321,   200,   321,   196,   236,   201,   234,
     202,     6,     0,   321,     0,   237,   200,   321,     0,     0,
      79,   195,   321,   200,   321,   200,   321,   200,   321,   200,
     321,   200,   321,   200,   321,   200,   321,   200,   321,   196,
     239,   201,   237,   202,     6,     0,   321,     0,   240,   200,
     321,     0,     0,    80,   195,   321,   200,   321,   200,   321,
     200,   321,   200,   321,   200,   321,   200,   321,   200,   321,
     200,   321,   196,   242,   201,   240,   202,     6,     0,   321,
       0,   243,   200,   321,     0,     0,    81,   195,   321,   200,
     321,   200,   321,   200,   321,   200,   321,   200,   321,   200,
     321,   200,   321,   200,   321,   200,   321,   200,   321,   200,
     321,   196,   245,   201,   243,   202,     6,     0,   321,     0,
     246,   200,   321,     0,     0,    82,   195,   321,   200,   321,
     200,   321,   200,   321,   200,   321,   200,   321,   200,   321,
     200,   321,   200,   321,   200,   321,   200,   321,   200,   321,
     196,   248,   201,   246,   202,     6,     0,   321,     0,   249,
     200,   321,     0,     0,    83,   195,   321,   200,   321,   200,
     321,   200,   321,   200,   321,   200,   321,   200,   321,   200,
     321,   200,   321,   200,   321,   200,   321,   200,   321,   196,
     251,   201,   249,   202,     6,     0,   321,     0,   252,   200,
     321,     0,     0,    84,   195,   321,   200,   321,   200,   321,
     200,   321,   200,   321,   200,   321,   200,   321,   200,   321,
     200,   321,   200,   321,   200,   321,   200,   321,   196,   254,
     201,   252,   202,     6,     0,   321,     0,   255,   200,   321,
       0,     0,    85,   195,   321,   200,   321,   200,   321,   200,
     321,   200,   321,   200,   321,   200,   321,   200,   321,   200,
     321,   200,   321,   200,   321,   200,   321,   196,   257,   201,
     255,   202,     6,     0,   321,     0,   258,   200,   321,     0,
       0,    86,   195,   321,   200,   321,   200,   321,   200,   321,
     200,   321,   200,   321,   200,   321,   200,   321,   200,   321,
     200,   321,   200,   321,   200,   321,   196,   260,   201,   258,
     202,     6,     0,   321,     0,   261,   200,   321,     0,     0,
      87,   195,   321,   200,   321,   200,   321,   200,   321,   200,
     321,   200,   321,   200,   321,   200,   321,   200,   321,   200,
     321,   200,   321,   200,   321,   200,   321,   200,   321,   200,
     321,   200,   321,   200,   321,   200,   321,   200,   321,   200,
     321,   200,   321,   200,   321,   200,   321,   200,   321,   196,
     263,   201,   261,   202,     6,     0,   321,     0,   264,   200,
     321,     0,     0,    88,   195,   321,   200,   321,   200,   321,
     200,   321,   200,   321,   200,   321,   200,   321,   200,   321,
     200,   321,   200,   321,   200,   321,   200,   321,   200,   321,
     200,   321,   200,   321,   200,   321,   200,   321,   200,   321,
     200,   321,   200,   321,   200,   321,   200,   321,   200,   321,
     200,   321,   196,   266,   201,   264,   202,     6,     0,   321,
       0,   267,   200,   321,     0,     0,    89,   195,   321,   200,
     321,   200,   321,   200,   321,   200,   321,   200,   321,   200,
     321,   200,   321,   200,   321,   200,   321,   200,   321,   200,
     321,   200,   321,   200,   321,   200,   321,   200,   321,   200,
     321,   200,   321,   200,   321,   200,   321,   200,   321,   200,
     321,   200,   321,   200,   321,   196,   269,   201,   267,   202,
       6,     0,   321,     0,   270,   200,   321,     0,     0,    90,
     195,   321,   200,   321,   200,   321,   200,   321,   200,   321,
     200,   321,   200,   321,   200,   321,   200,   321,   200,   321,
     200,   321,   200,   321,   200,   321,   200,   321,   200,   321,
     200,   321,   200,   321,   200,   321,   196,   272,   201,   270,
     202,     6,     0,   321,     0,   273,   200,   321,     0,     0,
      91,   195,   321,   200,   321,   200,   321,   200,   321,   200,
     321,   200,   321,   200,   321,   200,   321,   200,   321,   200,
     321,   200,   321,   200,   321,   200,   321,   200,   321,   200,
     321,   200,   321,   200,   321,   200,   321,   196,   275,   201,
     273,   202,     6,     0,   321,     0,   276,   200,   321,     0,
       0,    92,   195,   321,   200,   321,   200,   321,   200,   321,
     200,   321,   200,   321,   200,   321,   200,   321,   200,   321,
     200,   321,   200,   321,   200,   321,   200,   321,   200,   321,
     200,   321,   200,   321,   200,   321,   200,   321,   196,   278,
     201,   276,   202,     6,     0,   321,     0,   279,   200,   321,
       0,     0,    93,   195,   321,   200,   321,   200,   321,   200,
     321,   200,   321,   200,   321,   200,   321,   200,   321,   200,
     321,   200,   321,   200,   321,   200,   321,   200,   321,   200,
     321,   200,   321,   196,   281,   201,   279,   202,     6,     0,
     321,     0,   282,   200,   321,     0,     0,    94,   195,   321,
     200,   321,   200,   321,   200,   321,   200,   321,   200,   321,
     200,   321,   200,   321,   200,   321,   200,   321,   200,   321,
     200,   321,   200,   321,   200,   321,   200,   321,   196,   284,
     201,   282,   202,     6,     0,   321,     0,   285,   200,   321,
       0,     0,    95,   195,   321,   200,   321,   200,   321,   200,
     321,   200,   321,   200,   321,   200,   321,   200,   321,   200,
     321,   200,   321,   200,   321,   200,   321,   200,   321,   200,
     321,   200,   321,   196,   287,   201,   285,   202,     6,     0,
     335,     0,   288,   200,   335,     0,     0,    96,   195,   321,
     200,   321,   200,   321,   196,   290,   201,   288,   202,     6,
       0,   335,     0,   291,   200,   335,     0,     0,    97,   195,
     321,   200,   321,   200,   321,   200,   321,   196,   293,   201,
     291,   202,     6,     0,     7,     0,   170,     0,   171,     0,
     172,     0,   173,     0,   191,     0,   192,     0,     4,   294,
     321,     6,     0,     4,   197,   321,   198,   294,   321,     6,
       0,     4,   197,   201,   331,   202,   198,   294,   329,     6,
       0,     4,   197,   198,     7,   329,     6,     0,     4,   295,
       6,     0,     4,   197,   321,   198,   295,     6,     0,     4,
     199,     4,     7,   335,     6,     0,     4,   197,   321,   198,
     199,     4,     7,   335,     6,     0,     4,   199,     4,   294,
     321,     6,     0,     4,   197,   321,   198,   199,     4,   294,
     321,     6,     0,     4,   199,     4,   295,     6,     0,     4,
     197,   321,   198,   199,     4,   295,     6,     0,     4,   199,
     105,   199,     4,     7,   332,     6,     0,     4,   197,   321,
     198,   199,   105,   199,     4,     7,   332,     6,     0,     4,
     199,   106,     7,   333,     6,     0,     4,   197,   321,   198,
     199,   106,     7,   333,     6,     0,    58,   195,     4,   196,
     199,     4,     7,   321,     6,     0,    58,   195,     4,   196,
     199,     4,     7,   335,     6,     0,    38,   195,   321,   196,
       7,   323,     6,     0,    54,    38,   195,   321,   196,     7,
     329,     6,     0,    70,    38,   329,     7,   201,   321,   200,
     321,   200,   321,   202,     6,     0,    45,    46,   329,     7,
     321,     6,     0,    41,   195,   321,   196,     7,   329,     6,
       0,    43,   195,   321,   196,     7,   329,     6,     0,    70,
      41,   329,     7,   201,   321,   200,   321,   200,   321,   202,
       6,     0,    39,   195,   321,   196,     7,   329,     6,     0,
      40,   195,   321,   196,     7,   329,     6,     0,    39,   195,
     321,   196,     7,   329,    49,   323,     6,     0,    47,   195,
     321,   196,     7,   201,   321,   200,   321,   200,     5,   200,
       5,   200,     5,   202,     6,     0,    54,    41,   195,   321,
     196,     7,   329,     6,     0,    41,    65,   195,   321,   196,
       7,   329,     6,     0,    98,   195,   321,   196,     7,   329,
       6,     0,    99,   195,   321,   196,     7,   329,     6,     0,
     100,   195,   321,   196,     7,   329,   104,   329,   101,   321,
       6,     0,    49,    42,   195,   321,   196,     7,   329,     6,
       0,   117,    42,   195,   321,   196,     7,   201,   321,   200,
     329,   202,     6,     0,    50,    42,   195,   321,   196,     7,
     329,     6,     0,    51,    42,   195,   321,   196,     7,   195,
     321,   200,   321,   196,   329,   329,     6,     0,   100,    42,
     102,   103,   195,   321,   196,     7,   327,   104,   201,   329,
     200,   329,   202,   101,   201,   321,   200,   321,   202,     6,
       0,   100,    42,   195,   321,   196,     7,   327,   104,   201,
     329,   200,   329,   202,   101,   201,   321,   200,   321,   202,
       6,     0,    54,    42,   195,   321,   196,     7,   329,     6,
       0,    42,    65,   195,   321,   196,     7,   329,     6,     0,
      53,    44,   195,   321,   196,     7,   329,     6,     0,    44,
     195,   321,   196,     7,   329,     6,     0,    54,    44,   195,
     321,   196,     7,   329,     6,     0,    60,   323,   201,   299,
     202,     0,    59,   201,   323,   200,   323,   200,   321,   202,
     201,   299,   202,     0,    61,   323,   201,   299,   202,     0,
      62,   201,   323,   200,   321,   202,   201,   299,   202,     0,
     301,     0,   300,     0,   298,     0,     0,   300,   297,     0,
     300,    38,   201,   331,   202,     6,     0,   300,    41,   201,
     331,   202,     6,     0,   300,    42,   201,   331,   202,     6,
       0,    64,   201,   300,   202,     0,    64,     4,   197,   321,
     198,     6,     0,    67,   201,   300,   202,     0,    67,     4,
     197,   321,   198,     6,     0,    67,   116,     6,     0,   105,
     332,   201,   300,   202,     0,     4,   335,     6,     0,     4,
     321,     6,     0,    58,   195,     4,   196,   199,     4,     6,
       0,   112,     6,     0,    37,     6,     0,   107,   195,   321,
       8,   321,   196,     0,   107,   195,   321,     8,   321,     8,
     321,   196,     0,   107,     4,   108,   201,   321,     8,   321,
     202,     0,   107,     4,   108,   201,   321,     8,   321,     8,
     321,   202,     0,   109,     0,   115,     4,     0,   113,     0,
     114,     4,     6,     0,   110,   195,   321,   196,     0,   111,
       0,    63,    38,   201,   321,   200,   323,   202,     6,     0,
      63,    38,   201,   321,   200,   323,   200,   323,   200,   321,
     202,     6,     0,    63,    38,   201,   321,   200,   323,   200,
     323,   200,   323,   200,   321,   202,     6,     0,     0,    63,
      38,   201,   321,   200,   323,   202,   307,   201,   316,   202,
       6,     0,     0,    63,    38,   201,   321,   200,   323,   200,
     323,   200,   321,   202,   308,   201,   316,   202,     6,     0,
       0,    63,    38,   201,   321,   200,   323,   200,   323,   200,
     323,   200,   321,   202,   309,   201,   316,   202,     6,     0,
      63,    41,   201,   321,   200,   323,   202,     6,     0,    63,
      41,   201,   321,   200,   323,   200,   323,   200,   321,   202,
       6,     0,    63,    41,   201,   321,   200,   323,   200,   323,
     200,   323,   200,   321,   202,     6,     0,     0,    63,    41,
     201,   321,   200,   323,   202,   310,   201,   316,   202,     6,
       0,     0,    63,    41,   201,   321,   200,   323,   200,   323,
     200,   321,   202,   311,   201,   316,   202,     6,     0,     0,
      63,    41,   201,   321,   200,   323,   200,   323,   200,   323,
     200,   321,   202,   312,   201,   316,   202,     6,     0,    63,
      42,   201,   321,   200,   323,   202,     6,     0,    63,    42,
     201,   321,   200,   323,   200,   323,   200,   321,   202,     6,
       0,    63,    42,   201,   321,   200,   323,   200,   323,   200,
     323,   200,   321,   202,     6,     0,     0,    63,    42,   201,
     321,   200,   323,   202,   313,   201,   316,   202,     6,     0,
       0,    63,    42,   201,   321,   200,   323,   200,   323,   200,
     321,   202,   314,   201,   316,   202,     6,     0,     0,    63,
      42,   201,   321,   200,   323,   200,   323,   200,   323,   200,
     321,   202,   315,   201,   316,   202,     6,     0,   317,     0,
     316,   317,     0,    71,   201,   329,   200,   329,   200,   329,
     202,     6,     0,    71,   201,   329,   200,   329,   202,     6,
       0,    66,     6,     0,    52,    41,   329,     7,   321,     6,
       0,    52,    41,   329,     7,   321,    55,    57,   321,     6,
       0,    52,    41,   329,     7,   321,    55,    56,   321,     6,
       0,    52,    42,   201,   321,   202,     7,   329,     6,     0,
      48,    42,   201,   321,   202,     7,   329,     6,     0,    52,
      44,   201,   321,   202,     7,   329,     6,     0,    66,    42,
     329,     7,   321,     6,     0,    66,    42,   329,     6,     0,
      68,     6,     0,    69,     6,     0,   121,     0,   122,     0,
     123,     0,   124,     0,   125,     0,   322,     0,   195,   321,
     196,     0,   185,   321,     0,   184,   321,     0,   190,   321,
       0,   321,   185,   321,     0,   321,   184,   321,     0,   321,
     186,   321,     0,   321,   187,   321,     0,   321,   188,   321,
       0,   321,   194,   321,     0,   321,   180,   321,     0,   321,
     182,   321,     0,   321,   181,   321,     0,   321,   183,   321,
       0,   321,   177,   321,     0,   321,   178,   321,     0,   321,
     176,   321,     0,   321,   175,   321,     0,   321,   174,   321,
       8,   321,     0,    12,   195,   321,   196,     0,    13,   195,
     321,   196,     0,    14,   195,   321,   196,     0,    15,   195,
     321,   196,     0,    16,   195,   321,   196,     0,    17,   195,
     321,   196,     0,    18,   195,   321,   196,     0,    19,   195,
     321,   196,     0,    20,   195,   321,   196,     0,    22,   195,
     321,   196,     0,    23,   195,   321,   200,   321,   196,     0,
      24,   195,   321,   196,     0,    25,   195,   321,   196,     0,
      26,   195,   321,   196,     0,    27,   195,   321,   196,     0,
      28,   195,   321,   196,     0,    29,   195,   321,   196,     0,
      30,   195,   321,   200,   321,   196,     0,    31,   195,   321,
     200,   321,   196,     0,    32,   195,   321,   200,   321,   196,
       0,    21,   195,   321,   196,     0,    12,   197,   321,   198,
       0,    13,   197,   321,   198,     0,    14,   197,   321,   198,
       0,    15,   197,   321,   198,     0,    16,   197,   321,   198,
       0,    17,   197,   321,   198,     0,    18,   197,   321,   198,
       0,    19,   197,   321,   198,     0,    20,   197,   321,   198,
       0,    22,   197,   321,   198,     0,    23,   197,   321,   200,
     321,   198,     0,    24,   197,   321,   198,     0,    25,   197,
     321,   198,     0,    26,   197,   321,   198,     0,    27,   197,
     321,   198,     0,    28,   197,   321,   198,     0,    29,   197,
     321,   198,     0,    30,   197,   321,   200,   321,   198,     0,
      31,   197,   321,   200,   321,   198,     0,    32,   197,   321,
     200,   321,   198,     0,    21,   197,   321,   198,     0,     3,
       0,     9,     0,    10,     0,    11,     0,     4,     0,     4,
     197,   321,   198,     0,     4,   295,     0,     4,   197,   321,
     198,   295,     0,     4,   199,     4,     0,     4,   197,   321,
     198,   199,     4,     0,     4,   199,     4,   295,     0,     4,
     197,   321,   198,   199,     4,   295,     0,   324,     0,   185,
     323,     0,   184,   323,     0,   323,   185,   323,     0,   323,
     184,   323,     0,   201,   321,   200,   321,   200,   321,   200,
     321,   200,   321,   202,     0,   201,   321,   200,   321,   200,
     321,   200,   321,   202,     0,   201,   321,   200,   321,   200,
     321,   202,     0,   195,   321,   200,   321,   200,   321,   196,
       0,     0,   195,   326,   196,     0,     5,     0,   326,   200,
       5,     0,     0,   201,   328,   202,     0,   195,   328,   196,
       0,   329,     0,   328,   200,   329,     0,   321,     0,   330,
       0,   201,   331,   202,     0,   185,   201,   331,   202,     0,
     321,     8,   321,     0,   321,     8,   321,     8,   321,     0,
       4,   197,   198,     0,   185,     4,   197,   198,     0,     4,
     197,   201,   331,   202,   198,     0,   185,     4,   197,   201,
     331,   202,   198,     0,   321,     0,   330,     0,   331,   200,
     321,     0,   331,   200,   330,     0,   201,   321,   200,   321,
     200,   321,   200,   321,   202,     0,   201,   321,   200,   321,
     200,   321,   202,     0,     4,     0,     4,   199,   105,   199,
       4,     0,   201,   334,   202,     0,     4,   197,   321,   198,
     199,   106,     0,   332,     0,   334,   200,   332,     0,     5,
       0,    35,   195,   335,   200,   335,   196,     0,    36,   195,
     335,   196,     0,    34,   195,   335,   196,     0,    34,   195,
     335,   200,   331,   196,     0,    34,   195,     4,   199,     4,
     196,     0,    34,   195,     4,   197,   321,   198,   199,     4,
     196,     0
};

#endif

#if YYDEBUG
/* YYRLINE[YYN] -- source line where rule number YYN was defined. */
static const short yyrline[] =
{
       0,   170,   172,   173,   174,   179,   181,   184,   192,   206,
     216,   218,   221,   223,   224,   227,   233,   238,   239,   240,
     243,   247,   250,   256,   261,   267,   275,   280,   284,   290,
     295,   299,   304,   308,   311,   316,   320,   324,   328,   333,
     337,   340,   344,   348,   352,   356,   360,   364,   367,   371,
     374,   378,   381,   388,   392,   398,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   414,   419,
     434,   439,   445,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   478,
     481,   485,   485,   497,   500,   504,   504,   516,   519,   523,
     523,   535,   538,   542,   542,   556,   559,   563,   563,   577,
     580,   584,   584,   598,   601,   605,   605,   623,   626,   630,
     630,   648,   651,   655,   655,   673,   676,   680,   680,   699,
     702,   706,   706,   725,   728,   732,   732,   751,   754,   758,
     758,   777,   780,   784,   784,   803,   806,   810,   810,   829,
     832,   836,   836,   865,   868,   872,   872,   901,   904,   908,
     908,   937,   940,   944,   944,   968,   971,   975,   975,   999,
    1002,  1006,  1006,  1030,  1033,  1037,  1037,  1060,  1063,  1067,
    1067,  1090,  1093,  1097,  1097,  1120,  1126,  1133,  1133,  1147,
    1153,  1160,  1160,  1177,  1179,  1180,  1181,  1182,  1185,  1187,
    1190,  1221,  1255,  1302,  1317,  1326,  1341,  1353,  1367,  1390,
    1414,  1426,  1440,  1452,  1466,  1486,  1508,  1520,  1536,  1547,
    1553,  1572,  1586,  1592,  1598,  1617,  1623,  1629,  1645,  1652,
    1658,  1664,  1675,  1686,  1711,  1717,  1736,  1758,  1764,  1772,
    1778,  1784,  1793,  1799,  1805,  1815,  1821,  1826,  1831,  1838,
    1840,  1841,  1844,  1849,  1854,  1869,  1884,  1903,  1914,  1923,
    1931,  1935,  1943,  1955,  2037,  2057,  2062,  2066,  2086,  2098,
    2108,  2129,  2150,  2171,  2177,  2182,  2187,  2191,  2199,  2210,
    2217,  2224,  2224,  2236,  2236,  2248,  2248,  2263,  2268,  2273,
    2278,  2278,  2288,  2288,  2298,  2298,  2311,  2316,  2321,  2326,
    2326,  2337,  2337,  2349,  2349,  2363,  2367,  2372,  2399,  2423,
    2431,  2450,  2468,  2486,  2508,  2529,  2550,  2564,  2583,  2588,
    2597,  2599,  2600,  2601,  2602,  2605,  2607,  2608,  2609,  2610,
    2611,  2612,  2613,  2614,  2621,  2622,  2623,  2624,  2625,  2626,
    2627,  2628,  2629,  2630,  2631,  2632,  2633,  2634,  2635,  2636,
    2637,  2638,  2639,  2640,  2641,  2642,  2643,  2644,  2645,  2646,
    2647,  2648,  2649,  2650,  2651,  2652,  2654,  2655,  2656,  2657,
    2658,  2659,  2660,  2661,  2662,  2663,  2664,  2665,  2666,  2667,
    2668,  2669,  2670,  2671,  2672,  2673,  2674,  2679,  2684,  2685,
    2686,  2690,  2701,  2718,  2729,  2748,  2764,  2780,  2796,  2813,
    2818,  2822,  2826,  2830,  2836,  2841,  2845,  2849,  2855,  2859,
    2864,  2868,  2873,  2877,  2881,  2887,  2893,  2900,  2906,  2910,
    2914,  2924,  2931,  2942,  2956,  2972,  2992,  3016,  3022,  3026,
    3030,  3041,  3046,  3057,  3062,  3080,  3085,  3098,  3104,  3110,
    3115,  3123,  3136,  3140,  3158,  3172
};
#endif


#if (YYDEBUG) || defined YYERROR_VERBOSE

/* YYTNAME[TOKEN_NUM] -- String name of the token TOKEN_NUM. */
static const char *const yytname[] =
{
  "$", "error", "$undefined.", "tDOUBLE", "tSTRING", "tBIGSTR", "tEND", 
  "tAFFECT", "tDOTS", "tPi", "tMPI_Rank", "tMPI_Size", "tExp", "tLog", 
  "tLog10", "tSqrt", "tSin", "tAsin", "tCos", "tAcos", "tTan", "tRand", 
  "tAtan", "tAtan2", "tSinh", "tCosh", "tTanh", "tFabs", "tFloor", 
  "tCeil", "tFmod", "tModulo", "tHypot", "tPrintf", "tSprintf", "tStrCat", 
  "tStrPrefix", "tDraw", "tPoint", "tCircle", "tEllipse", "tLine", 
  "tSurface", "tSpline", "tVolume", "tCharacteristic", "tLength", 
  "tParametric", "tElliptic", "tPlane", "tRuled", "tTriangulation", 
  "tTransfinite", "tComplex", "tPhysical", "tUsing", "tBump", 
  "tProgression", "tPlugin", "tRotate", "tTranslate", "tSymmetry", 
  "tDilate", "tExtrude", "tDuplicata", "tLoop", "tRecombine", "tDelete", 
  "tCoherence", "tIntersect", "tAttractor", "tLayers", "tScalarPoint", 
  "tVectorPoint", "tTensorPoint", "tScalarLine", "tVectorLine", 
  "tTensorLine", "tScalarTriangle", "tVectorTriangle", "tTensorTriangle", 
  "tScalarQuadrangle", "tVectorQuadrangle", "tTensorQuadrangle", 
  "tScalarTetrahedron", "tVectorTetrahedron", "tTensorTetrahedron", 
  "tScalarHexahedron", "tVectorHexahedron", "tTensorHexahedron", 
  "tScalarPrism", "tVectorPrism", "tTensorPrism", "tScalarPyramid", 
  "tVectorPyramid", "tTensorPyramid", "tText2D", "tText3D", "tBSpline", 
  "tBezier", "tNurbs", "tOrder", "tWith", "tBounds", "tKnots", "tColor", 
  "tColorTable", "tFor", "tIn", "tEndFor", "tIf", "tEndIf", "tExit", 
  "tReturn", "tCall", "tFunction", "tMesh", "tTrimmed", 
  "tB_SPLINE_SURFACE_WITH_KNOTS", "tB_SPLINE_CURVE_WITH_KNOTS", 
  "tCARTESIAN_POINT", "tTRUE", "tFALSE", "tUNSPECIFIED", "tU", "tV", 
  "tEDGE_CURVE", "tVERTEX_POINT", "tORIENTED_EDGE", "tPLANE", 
  "tFACE_OUTER_BOUND", "tEDGE_LOOP", "tADVANCED_FACE", "tVECTOR", 
  "tDIRECTION", "tAXIS2_PLACEMENT_3D", "tISO", "tENDISO", "tENDSEC", 
  "tDATA", "tHEADER", "tFILE_DESCRIPTION", "tFILE_SCHEMA", "tFILE_NAME", 
  "tMANIFOLD_SOLID_BREP", "tCLOSED_SHELL", 
  "tADVANCED_BREP_SHAPE_REPRESENTATION", "tFACE_BOUND", 
  "tCYLINDRICAL_SURFACE", "tCONICAL_SURFACE", "tCIRCLE", "tTRIMMED_CURVE", 
  "tGEOMETRIC_SET", "tCOMPOSITE_CURVE_SEGMENT", "tCONTINUOUS", 
  "tCOMPOSITE_CURVE", "tTOROIDAL_SURFACE", "tPRODUCT_DEFINITION", 
  "tPRODUCT_DEFINITION_SHAPE", "tSHAPE_DEFINITION_REPRESENTATION", 
  "tELLIPSE", "tSolid", "tEndSolid", "tVertex", "tFacet", "tNormal", 
  "tOuter", "tLoopSTL", "tEndLoop", "tEndFacet", "tAFFECTPLUS", 
  "tAFFECTMINUS", "tAFFECTTIMES", "tAFFECTDIVIDE", "'?'", "tOR", "tAND", 
  "tEQUAL", "tNOTEQUAL", "tAPPROXEQUAL", "'<'", "tLESSOREQUAL", "'>'", 
  "tGREATEROREQUAL", "'+'", "'-'", "'*'", "'/'", "'%'", "tCROSSPRODUCT", 
  "'!'", "tPLUSPLUS", "tMINUSMINUS", "UNARYPREC", "'^'", "'('", "')'", 
  "'['", "']'", "'.'", "','", "'{'", "'}'", "All", "SignedDouble", 
  "STLFormatItem", "StepFormatItems", "StepFormatItem", "StepSpecial", 
  "StepHeaderItem", "StepDataItem", "GeomFormatList", "GeomFormat", 
  "Printf", "View", "Views", "ScalarPointValues", "ScalarPoint", "@1", 
  "VectorPointValues", "VectorPoint", "@2", "TensorPointValues", 
  "TensorPoint", "@3", "ScalarLineValues", "ScalarLine", "@4", 
  "VectorLineValues", "VectorLine", "@5", "TensorLineValues", 
  "TensorLine", "@6", "ScalarTriangleValues", "ScalarTriangle", "@7", 
  "VectorTriangleValues", "VectorTriangle", "@8", "TensorTriangleValues", 
  "TensorTriangle", "@9", "ScalarQuadrangleValues", "ScalarQuadrangle", 
  "@10", "VectorQuadrangleValues", "VectorQuadrangle", "@11", 
  "TensorQuadrangleValues", "TensorQuadrangle", "@12", 
  "ScalarTetrahedronValues", "ScalarTetrahedron", "@13", 
  "VectorTetrahedronValues", "VectorTetrahedron", "@14", 
  "TensorTetrahedronValues", "TensorTetrahedron", "@15", 
  "ScalarHexahedronValues", "ScalarHexahedron", "@16", 
  "VectorHexahedronValues", "VectorHexahedron", "@17", 
  "TensorHexahedronValues", "TensorHexahedron", "@18", 
  "ScalarPrismValues", "ScalarPrism", "@19", "VectorPrismValues", 
  "VectorPrism", "@20", "TensorPrismValues", "TensorPrism", "@21", 
  "ScalarPyramidValues", "ScalarPyramid", "@22", "VectorPyramidValues", 
  "VectorPyramid", "@23", "TensorPyramidValues", "TensorPyramid", "@24", 
  "Text2DValues", "Text2D", "@25", "Text3DValues", "Text3D", "@26", 
  "NumericAffectation", "NumericIncrement", "Affectation", "Shape", 
  "Transform", "MultipleShape", "ListOfShapes", "Duplicata", "Delete", 
  "Colorify", "Command", "Loop", "Extrude", "@27", "@28", "@29", "@30", 
  "@31", "@32", "@33", "@34", "@35", "ExtrudeParameters", 
  "ExtrudeParameter", "Transfini", "Coherence", "BoolExpr", "FExpr", 
  "FExpr_Single", "VExpr", "VExpr_Single", "ListOfStrings", 
  "RecursiveListOfStrings", "ListOfListOfDouble", 
  "RecursiveListOfListOfDouble", "ListOfDouble", "FExpr_Multi", 
  "RecursiveListOfDouble", "ColorExpr", "ListOfColor", 
  "RecursiveListOfColor", "StringExpr", 0
};
#endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives. */
static const short yyr1[] =
{
       0,   203,   203,   203,   203,   204,   204,   205,   205,   205,
     206,   206,   207,   207,   207,   208,   208,   208,   208,   208,
     209,   209,   209,   210,   210,   210,   210,   210,   210,   210,
     210,   210,   210,   210,   210,   210,   210,   210,   210,   210,
     210,   210,   210,   210,   210,   210,   210,   210,   210,   210,
     210,   210,   210,   211,   211,   212,   212,   212,   212,   212,
     212,   212,   212,   212,   212,   212,   212,   212,   213,   213,
     214,   214,   215,   215,   215,   215,   215,   215,   215,   215,
     215,   215,   215,   215,   215,   215,   215,   215,   215,   215,
     215,   215,   215,   215,   215,   215,   215,   215,   215,   216,
     216,   218,   217,   219,   219,   221,   220,   222,   222,   224,
     223,   225,   225,   227,   226,   228,   228,   230,   229,   231,
     231,   233,   232,   234,   234,   236,   235,   237,   237,   239,
     238,   240,   240,   242,   241,   243,   243,   245,   244,   246,
     246,   248,   247,   249,   249,   251,   250,   252,   252,   254,
     253,   255,   255,   257,   256,   258,   258,   260,   259,   261,
     261,   263,   262,   264,   264,   266,   265,   267,   267,   269,
     268,   270,   270,   272,   271,   273,   273,   275,   274,   276,
     276,   278,   277,   279,   279,   281,   280,   282,   282,   284,
     283,   285,   285,   287,   286,   288,   288,   290,   289,   291,
     291,   293,   292,   294,   294,   294,   294,   294,   295,   295,
     296,   296,   296,   296,   296,   296,   296,   296,   296,   296,
     296,   296,   296,   296,   296,   296,   296,   296,   297,   297,
     297,   297,   297,   297,   297,   297,   297,   297,   297,   297,
     297,   297,   297,   297,   297,   297,   297,   297,   297,   297,
     297,   297,   297,   297,   297,   298,   298,   298,   298,   299,
     299,   299,   300,   300,   300,   300,   300,   301,   301,   302,
     302,   302,   303,   304,   304,   304,   304,   304,   305,   305,
     305,   305,   305,   305,   305,   305,   305,   305,   306,   306,
     306,   307,   306,   308,   306,   309,   306,   306,   306,   306,
     310,   306,   311,   306,   312,   306,   306,   306,   306,   313,
     306,   314,   306,   315,   306,   316,   316,   317,   317,   317,
     318,   318,   318,   318,   318,   318,   318,   318,   319,   319,
     320,   320,   320,   320,   320,   321,   321,   321,   321,   321,
     321,   321,   321,   321,   321,   321,   321,   321,   321,   321,
     321,   321,   321,   321,   321,   321,   321,   321,   321,   321,
     321,   321,   321,   321,   321,   321,   321,   321,   321,   321,
     321,   321,   321,   321,   321,   321,   321,   321,   321,   321,
     321,   321,   321,   321,   321,   321,   321,   321,   321,   321,
     321,   321,   321,   321,   321,   321,   321,   322,   322,   322,
     322,   322,   322,   322,   322,   322,   322,   322,   322,   323,
     323,   323,   323,   323,   324,   324,   324,   324,   325,   325,
     326,   326,   327,   327,   327,   328,   328,   329,   329,   329,
     329,   330,   330,   330,   330,   330,   330,   331,   331,   331,
     331,   332,   332,   332,   332,   333,   333,   334,   334,   335,
     335,   335,   335,   335,   335,   335
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN. */
static const short yyr2[] =
{
       0,     1,     1,     1,     2,     1,     2,     1,    21,     1,
       0,     2,     1,     1,     1,     2,     2,     2,     2,     2,
       7,     5,    17,     9,    23,    31,    15,    11,    11,    15,
       9,    13,     9,    11,    13,     9,     9,    11,     9,    11,
       9,    11,    13,    13,    11,    13,    17,     9,    11,    11,
      13,    11,     9,     0,     2,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     5,     7,
       6,     8,     0,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     1,
       3,     0,    13,     1,     3,     0,    13,     1,     3,     0,
      13,     1,     3,     0,    19,     1,     3,     0,    19,     1,
       3,     0,    19,     1,     3,     0,    25,     1,     3,     0,
      25,     1,     3,     0,    25,     1,     3,     0,    31,     1,
       3,     0,    31,     1,     3,     0,    31,     1,     3,     0,
      31,     1,     3,     0,    31,     1,     3,     0,    31,     1,
       3,     0,    55,     1,     3,     0,    55,     1,     3,     0,
      55,     1,     3,     0,    43,     1,     3,     0,    43,     1,
       3,     0,    43,     1,     3,     0,    37,     1,     3,     0,
      37,     1,     3,     0,    37,     1,     3,     0,    13,     1,
       3,     0,    15,     1,     1,     1,     1,     1,     1,     1,
       4,     7,     9,     6,     3,     6,     6,     9,     6,     9,
       5,     8,     8,    11,     6,     9,     9,     9,     7,     8,
      12,     6,     7,     7,    12,     7,     7,     9,    17,     8,
       8,     7,     7,    11,     8,    12,     8,    14,    22,    20,
       8,     8,     8,     7,     8,     5,    11,     5,     9,     1,
       1,     1,     0,     2,     6,     6,     6,     4,     6,     4,
       6,     3,     5,     3,     3,     7,     2,     2,     6,     8,
       8,    10,     1,     2,     1,     3,     4,     1,     8,    12,
      14,     0,    12,     0,    16,     0,    18,     8,    12,    14,
       0,    12,     0,    16,     0,    18,     8,    12,    14,     0,
      12,     0,    16,     0,    18,     1,     2,     9,     7,     2,
       6,     9,     9,     8,     8,     8,     6,     4,     2,     2,
       1,     1,     1,     1,     1,     1,     3,     2,     2,     2,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     5,     4,     4,     4,     4,     4,
       4,     4,     4,     4,     4,     6,     4,     4,     4,     4,
       4,     4,     6,     6,     6,     4,     4,     4,     4,     4,
       4,     4,     4,     4,     4,     4,     6,     4,     4,     4,
       4,     4,     4,     6,     6,     6,     4,     1,     1,     1,
       1,     1,     4,     2,     5,     3,     6,     4,     7,     1,
       2,     2,     3,     3,    11,     9,     7,     7,     0,     3,
       1,     3,     0,     3,     3,     1,     3,     1,     1,     3,
       4,     3,     5,     3,     4,     6,     7,     1,     1,     3,
       3,     9,     7,     1,     5,     3,     6,     1,     3,     1,
       6,     4,     4,     6,     6,     9
};

/* YYDEFACT[S] -- default rule to reduce with in state S when YYTABLE
   doesn't specify something else to do.  Zero means the default is an
   error. */
static const short yydefact[] =
{
       0,     0,     7,     9,     0,     2,     1,     3,     4,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    11,
      12,    14,    13,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   282,
       0,   287,     0,   284,     0,     0,     0,    54,    56,    55,
      57,    58,    59,    60,    61,    62,    67,    66,    63,    64,
      65,     5,     0,     0,     0,    15,    16,    18,    17,    19,
     418,   418,     0,   397,   401,   449,   203,   398,   399,   400,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   204,   205,   206,   207,     0,     0,
       0,   208,   209,     0,     0,     0,     0,     0,     0,   335,
       0,     0,   277,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   409,     0,     0,     0,     0,     0,     0,   262,
       0,     0,     0,   262,   328,   329,     0,     0,     0,     0,
       0,     0,   443,     0,     0,     0,     0,     0,   276,     0,
     283,     0,     6,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     403,     0,    72,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   338,   337,
     339,     0,     0,     0,     0,     0,     0,     0,     0,   214,
     274,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   273,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   401,     0,     0,   427,
       0,   428,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   411,   410,     0,
       0,     0,     0,   262,   262,     0,     0,     0,     0,     0,
       0,     0,     0,   271,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   262,     0,     0,     0,   285,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   420,     0,     0,     0,     0,     0,   405,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   449,     0,     0,     0,   336,     0,     0,
     437,   438,     0,     0,   203,     0,     0,     0,     0,   210,
       0,   353,   352,   350,   351,   346,   348,   347,   349,   341,
     340,   342,   343,   344,   345,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   401,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   413,   412,
     261,     0,   260,   259,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   267,   263,   327,     0,     0,   269,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   286,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   419,     0,     0,    21,     0,   402,
     407,    72,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    73,
      74,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    86,    87,    88,    89,    90,    91,    92,    93,
      94,    95,    96,    97,    98,   355,   376,   356,   377,   357,
     378,   358,   379,   359,   380,   360,   381,   361,   382,   362,
     383,   363,   384,   375,   396,   364,   385,     0,     0,   366,
     387,   367,   388,   368,   389,   369,   390,   370,   391,   371,
     392,     0,     0,     0,     0,     0,     0,     0,     0,   452,
       0,     0,   451,     0,     0,     0,     0,     0,     0,     0,
       0,   220,     0,     0,     0,     0,     0,    68,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   433,     0,     0,
       0,   429,   431,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   255,   257,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   272,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   421,     0,   418,
       0,   404,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    70,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   213,   439,   440,     0,     0,     0,     0,     0,
     215,   216,   218,     0,     0,   447,     0,   224,   354,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   434,
       0,   430,     0,   231,     0,     0,     0,     0,     0,   320,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   268,     0,     0,     0,
     326,   270,     0,     0,     0,     0,     0,   422,     0,   444,
       0,     0,     0,   278,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   330,
     331,   332,   333,   334,     0,     0,     0,     0,     0,     0,
       0,    20,     0,   406,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   365,   386,   372,   393,   373,   394,   374,   395,     0,
     454,   453,   450,     0,   203,     0,     0,     0,     0,   211,
       0,     0,     0,   445,    69,   228,   235,     0,   236,     0,
     232,     0,   233,   253,     0,     0,   432,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   275,     0,     0,     0,     0,   262,     0,   291,     0,
     300,     0,   309,     0,     0,     0,     0,     0,   241,   242,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     418,   408,    71,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   221,     0,     0,   222,     0,   448,     0,
     240,   251,   435,     0,     0,   324,   244,   246,     0,     0,
       0,   323,   325,   252,   229,   239,   250,   254,     0,     0,
       0,   417,     0,   416,     0,     0,   288,     0,     0,   297,
       0,     0,   306,     0,   264,   265,   266,     0,     0,   422,
       0,   425,     0,     0,     0,     0,   442,     0,   280,   279,
       0,     0,     0,     0,     0,    23,     0,    32,     0,    36,
       0,    30,     0,     0,    35,     0,    40,    38,     0,     0,
       0,     0,     0,     0,    47,     0,     0,     0,     0,     0,
      52,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     212,   217,   219,     0,   225,     0,   237,   436,     0,     0,
     322,   321,   226,   227,   262,     0,   258,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   424,     0,   423,     0,
       0,     0,     0,     0,     0,     0,   422,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   455,     0,   446,     0,     0,     0,     0,
     415,     0,     0,     0,     0,     0,     0,     0,     0,   315,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   426,
       0,     0,   441,   281,     0,     0,    37,     0,     0,     0,
       0,    27,     0,    33,     0,    39,    28,    41,     0,    44,
       0,    48,    49,     0,     0,    51,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   223,     0,     0,   256,     0,     0,
     293,     0,   319,     0,     0,   316,   302,     0,     0,   311,
       0,     0,     0,     0,     0,     0,   243,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   101,   105,   109,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   197,     0,     0,     0,   414,
     289,     0,     0,     0,   292,   298,     0,     0,   301,   307,
       0,     0,   310,   230,   234,     0,     0,   245,     0,     0,
       0,     0,     0,    31,    34,    42,     0,    43,    50,    45,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     295,     0,     0,   304,     0,   313,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     201,     0,   247,     0,   290,     0,     0,     0,   299,     0,
       0,   308,     0,     0,     0,     0,     0,     0,    26,    29,
       0,     0,     0,    99,     0,   103,     0,   107,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     195,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   294,
       0,     0,   318,   303,     0,   312,     0,     0,     0,     0,
       0,     0,    46,    22,   100,   102,   104,   106,   108,   110,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   196,   198,     0,   199,   238,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   113,   117,   121,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   296,   317,
     305,   314,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   200,   202,
       0,     0,     8,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   249,     0,     0,
       0,   111,     0,   115,     0,   119,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   248,     0,    24,   112,   114,   116,   118,   120,   122,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   125,
     129,   133,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   123,     0,   127,
       0,   131,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     124,   126,   128,   130,   132,   134,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   137,   141,   145,   149,   153,   157,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    25,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   135,
       0,   139,     0,   143,     0,   147,     0,   151,     0,   155,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     136,   138,   140,   142,   144,   146,   148,   150,   152,   154,
     156,   158,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   185,   189,   193,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   183,     0,   187,     0,   191,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   184,   186,
     188,   190,   192,   194,     0,     0,     0,   173,   177,   181,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   171,     0,   175,     0,
     179,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   172,   174,   176,   178,   180,   182,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   161,   165,   169,
       0,     0,     0,     0,     0,     0,     0,   159,     0,   163,
       0,   167,     0,     0,     0,     0,     0,     0,   160,   162,
     164,   166,   168,   170,     0,     0,     0
};

static const short yydefgoto[] =
{
    2284,    83,     5,     6,    19,    20,    21,    22,     7,    67,
      68,    69,   419,  1602,   629,  1511,  1604,   630,  1512,  1606,
     631,  1513,  1820,   632,  1767,  1822,   633,  1768,  1824,   634,
    1769,  1956,   635,  1918,  1958,   636,  1919,  1960,   637,  1920,
    2068,   638,  2038,  2070,   639,  2039,  2072,   640,  2040,  2074,
     641,  2041,  2076,   642,  2042,  2078,   643,  2043,  2266,   644,
    2260,  2268,   645,  2261,  2270,   646,  2262,  2215,   647,  2203,
    2217,   648,  2204,  2219,   649,  2205,  2164,   650,  2146,  2166,
     651,  2147,  2168,   652,  2148,  1629,   653,  1535,  1723,   654,
    1631,   136,   240,    70,   544,   530,   531,   532,   533,    74,
      75,    76,    77,    78,  1167,  1481,  1585,  1170,  1486,  1589,
    1173,  1490,  1592,  1348,  1349,    79,    80,   954,   329,   139,
     347,   172,   235,   412,  1063,  1180,  1181,   331,   472,   194,
     715,   866,   140
};

static const short yypact[] =
{
    2799,    84,-32768,-32768,   -37,-32768,    12,  3110,-32768,    14,
     118,   125,   134,   152,   176,   194,    10,    19,    76,-32768,
  -32768,-32768,-32768,  2336,   102,   302,   119,   137,   146,   -15,
     261,   177,   188,   283,   196,   356,   396,   402,   407,   439,
     370,   100,   230,   271,   -93,   -93,   317,    21,     3,   473,
       2,   518,   558,    74,   330,   333,   -28,     5,     7,-32768,
     337,-32768,   561,-32768,   564,   571,   542,-32768,-32768,-32768,
  -32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,
  -32768,-32768,   586,    14,  2977,-32768,-32768,-32768,-32768,-32768,
     428,   428,   624,-32768,   110,     8,-32768,-32768,-32768,-32768,
     -52,   151,   325,   334,   338,   343,   344,   347,   348,   351,
     354,   355,   358,   359,   362,   363,   366,   376,   377,   381,
     384,   444,   458,   480,-32768,-32768,-32768,-32768,  2440,  2440,
    2440,-32768,-32768,  2440,   583,    27,  2440,   646,   740,-32768,
     673,   677,-32768,  2440,  2440,  2440,   496,  2440,   513,  2440,
    2440,  1488,  2440,   529,   536,   537,   538,  1488,   533,   541,
     544,   550,   552,   553,   554,   746,   -93,   -93,   -93,  2440,
    2440,  -116,-32768,   -84,   -93,   551,   556,   557,   562,-32768,
    1488,   563,   745,-32768,-32768,-32768,  1488,  1488,  2440,  2440,
     -60,  2440,   555,  2440,   560,   645,  2440,  2440,-32768,   756,
  -32768,   568,-32768,    14,   569,   570,   574,   575,   577,   579,
     580,   582,   584,   585,   587,   588,   590,   591,   593,   594,
     626,   636,   637,   638,   640,   644,   652,   663,   665,   669,
     670,   671,   672,   674,   761,   675,   641,   679,  2440,   836,
  -32768,   -93,-32768,  2440,  2440,  2440,  2440,  2440,  2440,  2440,
    2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,
    2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,
    2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,
    2440,  2440,  2440,  2440,  2440,    42,    39,    39,   676,   676,
     676,   809,   856,  2533,  2790,    25,   681,   861,   781,-32768,
  -32768,  2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,
    2440,  2440,  2440,  2440,  2440,  2440,-32768,   -19, 10704, 10727,
   10750,  2440, 10773,  2440, 10796, 10819,   256,  1555,  2533,   668,
     864,-32768, 10842,  2440,  2440,  2440,  2440,   865,  2440,  2440,
    2440,  2440,  2440,  2440,  2440,   678,   -91,-32768,-32768,  3502,
    3523,   -93,   -93,   372,   372,   -81,  2440,  2440,  2440,  2440,
    2662,   270,  2440,-32768,  2698,   866,   874, 10865, 10888,   779,
    2440, 10911,   778,  3544,-32768,   683,   969, 10934,-32768,  2440,
     719,   881,   882,   883,   884,   885,   886,   887,   889,   890,
     891,   895,   896,   897,   898,   899,   900,   901,   902,   903,
     904,   905,   906,   907,   765,   924,   925,   926,   927,   930,
     931,-32768,   103,   934,   929,   935, 10054,   163,   139,  2918,
   10957, 10079, 10980, 10104, 11003, 10129, 11026, 10154, 11049, 10179,
   11072, 10204, 11095, 10229, 11118, 10254, 11141, 10279, 11164, 10304,
   11187, 10329,  3565,  3586, 11210, 10354, 11233, 10379, 11256, 10404,
   11279, 10429, 11302, 10454, 11325, 10479,  3607,  3628,  3649,  3670,
    3691,  3712,   191,-32768,   131,   742,   747,-32768,  1488,  2628,
     668,-32768,   380,    20,    39,  2440,   938,   941,     9,-32768,
    2107,   193,   219,   280,   280,   291,   291,   291,   291,   323,
     323,   676,   676,   676,   676,   940,  2533,   942,   943,   944,
   11348,   945, 11371,   946,   953,  1157,   322,  2533,   383,  2440,
    2440,   963,  2299, 11394, 11417, 11440,  2440,  2845,  3009, 11463,
   11486, 11509, 11532, 11555,   748,   -93,  2440,  2440,-32768,-32768,
  -32768,   769,  3190,-32768,   774,  2440,  3733,  3754,  3775, 10504,
    -114,   -39,   -40,-32768,-32768,-32768,  2440, 10529,-32768,   777,
     780,   972,   973,   753, 11578,   981,   800,  2440,  2832,  2440,
    2440,-32768, 11601,   833,   801,   802,   804,   806,   812,   813,
     814,   815,   816,   817,   818,   820,   821,   822,   823,   824,
     825,   826,   827,   828,   829,   830,   831,   832,   835,   838,
     839,   840,   841,   842,-32768,  1031,   847,-32768,   844,    -5,
  -32768,-32768,   851,   852,   854,   855,   858,   859,   860,   862,
     867,   868,   869,   873,   875,   876,   878,   879,   880,   916,
     928,   933,   936,   937,   939,   947,   970,   997,  1045,-32768,
  -32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,
  -32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,
  -32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,
  -32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,
  -32768,-32768,-32768,-32768,-32768,-32768,-32768,  2440,  2440,-32768,
  -32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,
  -32768,  2440,  2440,  2440,  2440,  2440,  2440,  2440,  1052,-32768,
    2533,    39,-32768,  1053,  2533,   863,    31,  2440,  1054,  1063,
     932,-32768,  1070,   951,     5,  1072,  2440,-32768,   189,   -93,
    1488,  1488,  1115,  1488,  1117,  1488,  1488,-32768,  2533,  1187,
     388,-32768,  2487,  1046,   957,  1118,  1120,  1122,  1123,   450,
    1126,  1128,  1129,  1130,  1131,  1133,  1134,  1075,   153,  3796,
    3817,-32768,-32768,  3081,   -93,   -93,   -93,  1188,  2533,  2533,
    2533,  1414,  1189,  2440,  2440,  1488,  1488,  2440,  1186,  1488,
    1221,  3838,-32768,  2502,   642,  1230,  1076,  1235,  2440,  2440,
     -93,  1238,  1239,  1057,  1242,  1244,  1488,  1488,  1246,   -93,
    1249,  1250,  1488,  1488,  1251,  1252,  1253,  1255,  1256,  1488,
     236,  1488,  1257,  1258,  1259,  1265,  1267,-32768,  1266,   428,
    1269,-32768,  2986,  2440,  2440,  2440,  2440,  2440,  2440,  2440,
    2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,
    2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,-32768,
   11624, 10554, 11647, 10579, 11670, 10604, 11693, 10629, 10654,  1065,
     212,  1066,-32768,   668,-32768,   123,   172,  1077,  1264,  1620,
  -32768,-32768,-32768,     5,  2440,-32768,   416,-32768, 12544,  1271,
      82,    37,  1272,  1488,  1274,  1488,  1275,  1277,   417,-32768,
    2533,-32768,  2440,-32768,  2440,  1488,  1488,  1488,  1080,-32768,
     401,  1488,  1488,  1488,  1488,  1488,  1488,  1488,   500,  2440,
    2440,  2440,  1109,  -118,  -105,   -86,-32768,   420,   440,   441,
  -32768,-32768,  3859,  3880,  1305,  1306, 11716,  -112,  1210,-32768,
    2440,  2440,  2440,-32768,  1114,    14,  1121,  3901,  3922,  -124,
    1124,  1127,  1125,  1132,  1135,  1136,  1137,  1138,   -21,  1139,
    1140,  1144,  1143,  1145,  1146,  1148,  1149,  1150,  1155,-32768,
  -32768,-32768,-32768,-32768,  1153,  1154,  1156,  1159,  1160,  1161,
    1162,-32768,  1163,   163,  1311,  3943,  3964,  3985,  4006,  4027,
    4048,  4069,  4090,  4111,  4132,  4153,  4174,  4195,  4216,  4237,
    4258,  4279,  4300,  4321,  4342,  4363,  4384,  4405,  4426,  4447,
    4468,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,  1165,
  -32768,-32768,-32768,  1488,    39,  2440,  1316,  1322,     9,-32768,
    1321, 10679,     5,-32768,-32768,-32768,-32768,   -93,-32768,  1323,
  -32768,  1324,-32768,-32768,  1167,   445, 12544,  4489,  1325,  1328,
    1338,  2440,  2440,  2440,  1355,  1360,  1361,  1362,  1363,  1364,
    1367,-32768,  2406,  3134, 11739,  1294,   372,   -93,  1368,   -93,
    1369,   -93,  1370,  1372,  1373,  1374,  2440,  2440,-32768,-32768,
    1376,  1488,  1488,  1280,  1488,  2434,   314, 11762,  2440,    14,
    1378,  2440,  1488,  1380,  1384,  1383,  1204,  1385,   236,  1386,
    1390,  2440,  1388,  1392,  1391,  1393,  1397,   236,  2440,  2440,
    2440,  1488,  1395,  1399,   236,  2440,  1400,  1402,  1404,  2440,
     428,-32768,-32768,  2440,  2440,  2440,  2440,  2440,  2440,  2440,
    2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,
    2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,  1408,
    1407,  1409,  1674,-32768,  1389,  1410,-32768,  1209,-32768,    90,
  -32768,-32768,-32768,  1216,  2440,-32768,-32768,-32768,  4510,  1758,
    1806,-32768,-32768,-32768,-32768,-32768,-32768,-32768,  1871,  1411,
    1217,-32768,  2440,-32768,  1219,   165,-32768,  1218,   167,-32768,
    1222,   209,-32768,  1223,-32768,-32768,-32768,  4531,  4552,  -112,
     254,-32768,   446,  1224,  1326,  2440,-32768,  2440,-32768,-32768,
    4573,    14,  1226,  4594,  1228,-32768,  1229,-32768,  1254,-32768,
    1234,-32768,  1260, 11785,-32768,  1261,-32768,-32768,  1262,  1263,
   11808,  4615, 11831,  1273,-32768,  1268,  1287,  4636,  1284,  1290,
  -32768,  4657,  1293,  4678,  4699,  4720,  4741,  4762,  4783,  4804,
    4825,  4846,  4867,  4888,  4909,  4930,  4951,  4972,  4993,  5014,
    5035,  5056,  5077,  5098,  5119,  5140,  5161,  5182,  5203,  1299,
  -32768,-32768,-32768,     5,-32768,  1320,-32768,-32768,  5224,  2440,
  -32768,-32768,-32768,-32768,   372,  2589,-32768,  2304,    68,  2304,
      68,  2304,    68,  2440,  2440,  1348,-32768,  1488,-32768,  1488,
    2440,  3157,  3186,  1488,  1292,  1450,  -112,   236,  1454,  2440,
    1456,   236,  1457,  1462,  1461,  1515,  1516,  2440,  1517,  1488,
    1518,  1519,  2440,  1523,  1521,  2440,  1524,  2440,  2440,  2440,
    2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,
    2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,
    2440,  2440,  2440,-32768,  1522,-32768,  1525, 11854,  1329,  2440,
  -32768,  2304,  2304,  2440,  3209,   237,  1550,  1356,   -43,-32768,
    3238,   243,   -42,  3268,   245,   -33,  3291,  3314,  1403,-32768,
    1405,  2081,-32768,-32768,  1359,    14,-32768,  1406,  1412,  1413,
    5245,-32768,  1366,-32768,  1418,-32768,-32768,-32768, 11877,-32768,
    1415,-32768,-32768, 11900,  1420,-32768, 11923,  1417, 11946, 11969,
   11992,  5266,  5287,  5308,  5329,  5350,  5371,  5392,  5413,  5434,
    5455,  5476,  5497,  5518,  5539,  5560,  5581,  5602,  5623,  5644,
    5665,  5686, 12015,  5707,-32768,  1421,  1488,-32768,  3337,  3475,
    1587,  2440,-32768,  1488,  1597,-32768,  1601,  2440,  1603,  1604,
    2440,  1612,  1614,  1616,  1488,  1488,-32768,  1617,    14,   236,
     236,   236,   236,  1618,  1622,  1624,   236,  1646,  1647,  1648,
    1650,-32768,-32768,-32768,  2440,  2440,  2440,  2440,  2440,  2440,
    2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,
    2440,  2440,  2440,  2440,  2440,-32768,  2440,  1651,  1488,-32768,
  -32768,  1458,  3360,  1460,-32768,-32768,  1463,  3383,-32768,-32768,
    1464,  3406,-32768,-32768,-32768,  1466,  1459,-32768,    14,  1467,
    1469,  1474,  1475,-32768,-32768,-32768,  1476,-32768,-32768,-32768,
    1477,  1473,  1478,  1480,  5728,  5749,  5770,  5791,  5812,  5833,
    5854,  5875,  5896,  5917,  5938,  5959,  5980,  6001,  6022,  6043,
    6064,  6085,  6106,  6127,  6148,  1481, 12038,  1484,  1652,    68,
    1657,  1488,    68,  1669,    68,  1679,  1488,  1585,  1527,   236,
     236,  1681,  1682,   236,  1687,  2440,  2440,  2440,  2440,  2440,
    2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,
    2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,    39,
  -32768,  1688,-32768,   -30,-32768,  1493,   449,   -26,-32768,  1494,
     -18,-32768,  1495,  1497,  1499,    14,  1501,  1502,-32768,-32768,
    1507,  1508,   456, 12544,   457, 12544,   460, 12544,  6169,  6190,
    6211,  6232,  6253,  6274,  6295,  6316,  6337,  6358,  6379,  6400,
    6421,  6442,  6463,  6484,  6505,  6526,  6547,  6568,  6589,   461,
  -32768,  1504,  1509,  1700,    68,  1488,  1703,  1704,    68,  1706,
      68,  1613,  2440,    14,   236,  1488,  1707,  1727,  2440,  1728,
    2440,  1729,  2440,  1730,  2440,  2440,  2440,  2440,  2440,  2440,
    2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,
    2440,  2440,  2440,  2440,  2440,    39,  1731,    39,  1732,-32768,
     -17,  1539,-32768,-32768,   -14,-32768,    -1,  1541,  6610,    14,
    1543,  1544,-32768,-32768, 12544,-32768, 12544,-32768, 12544,-32768,
   12061, 12084, 12107,  6631,  6652,  6673,  6694,  6715,  6736,  6757,
    6778,  6799,  6820,  6841,  6862,  6883,  6904,  6925,  6946,  6967,
    6988,-32768,-32768,   464,-32768,-32768,  1740,  1741,  1742,  1743,
    2440,  2440,  1583,   236,  1488,-32768,-32768,-32768,  2440,  2440,
    2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,
    2440,  2440,  2440,  2440,  2440,  2440,    39,  1746,-32768,-32768,
  -32768,-32768,  7009,  3429,  1584,  1554,  1557,  1558,  1559,  1560,
    7030,  7051,  7072,  7093,  7114,  7135,  7156,  7177,  7198,  7219,
    7240,  7261,  7282,  7303,  7324,  7345,  7366,  7387,-32768,-32768,
    2440,  1749,-32768,  1488,   236,  2440,  2440,  2440,  2440,  2440,
    2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,
    2440,  2440,  2440,  2440,  2440,  2440,  3452,-32768,  1562,  1567,
     465, 12544,   478, 12544,   483, 12544,  7408,  7429,  7450,  7471,
    7492,  7513,  7534,  7555,  7576,  7597,  7618,  7639,  7660,  7681,
    7702,  7723,  7744,  7765,  1752,  1488,  1759,  2440,  1760,  2440,
    1762,  2440,  1763,  2440,  2440,  2440,  2440,  2440,  2440,  2440,
    2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,
    2440,-32768,  1570,-32768, 12544,-32768, 12544,-32768, 12544,-32768,
   12130, 12153, 12176,  7786,  7807,  7828,  7849,  7870,  7891,  7912,
    7933,  7954,  7975,  7996,  8017,  8038,  8059,  8080,  1488,-32768,
  -32768,-32768,  2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,
    2440,  2440,  2440,  2440,  2440,  2440,  2440,  1571,  1592,  1598,
    1608,  8101,  8122,  8143,  8164,  8185,  8206,  8227,  8248,  8269,
    8290,  8311,  8332,  8353,  8374,  8395,  1488,  2440,  2440,  2440,
    2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,
    2440,  2440,  2440,  2440,  2440,  1610,   486, 12544,   487, 12544,
     490, 12544,  8416,  8437,  8458,  8479,  8500,  8521,  8542,  8563,
    8584,  8605,  8626,  8647,  8668,  8689,  8710,   236,  2440,  1805,
    2440,  1807,  2440,  1809,  2440,  2440,  2440,  2440,  2440,  2440,
    2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,  1621,
   12544,-32768, 12544,-32768, 12544,-32768, 12199, 12222, 12245, 12268,
   12291, 12314,  8731,  8752,  8773,  8794,  8815,  8836,  8857,  8878,
    8899,  1810,-32768,-32768,-32768,-32768,-32768,-32768,  2440,  2440,
    2440,  2440,  2440,  2440,  2440,  2440,  2440,-32768,  1619,  1626,
    1628,  1662,  1663,  1664,  8920,  8941,  8962,  8983,  9004,  9025,
    9046,  9067,  9088,  2440,  2440,  2440,  2440,  2440,  2440,  2440,
    2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,   494, 12544,
     497, 12544,   498, 12544,   501, 12544,   502, 12544,   507, 12544,
    9109,  9130,  9151,  9172,  9193,  9214,  9235,  9256,  9277,  2440,
    1812,  2440,  1813,  2440,  1815,  2440,  1816,  2440,  1817,  2440,
    1819,  2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,
   12544,-32768, 12544,-32768, 12544,-32768, 12544,-32768, 12544,-32768,
   12544,-32768,  9298,  9319,  9340,  9361,  9382,  9403, 12337, 12360,
   12383,  2440,  2440,  2440,  2440,  2440,  2440,-32768,-32768,-32768,
    9424,  9445,  9466,  9487,  9508,  9529,  1665,  1666,  1668,  2440,
    2440,  2440,  2440,  2440,  2440,  2440,  2440,  2440,  9550,  9571,
    9592,  9613,  9634,  9655,   511, 12544,   512, 12544,   515, 12544,
    2440,  2440,  2440,  2440,  2440,  2440,  2440,  1847,  2440,  1864,
    2440,  1865,  9676,  9697,  9718, 12406, 12429, 12452, 12544,-32768,
   12544,-32768, 12544,-32768,  2440,  2440,  2440,-32768,-32768,-32768,
    9739,  9760,  9781,  1671,  1672,  1673,  2440,  2440,  2440,  2440,
    2440,  2440,  9802,  9823,  9844,   516, 12544,   519, 12544,   522,
   12544,  2440,  2440,  2440,  2440,  1869,  2440,  1870,  2440,  1872,
    9865,  9886,  9907, 12544,-32768, 12544,-32768, 12544,-32768,  2440,
    2440,  2440,  9928,  9949,  9970,  2440,  2440,  2440,  9991, 10012,
   10033,  2440,  2440,  2440, 12475, 12498, 12521,-32768,-32768,-32768,
    1693,  1694,  1695,  2440,  2440,  2440,   523, 12544,   526, 12544,
     527, 12544,  2440,  1891,  2440,  1892,  2440,  1893, 12544,-32768,
   12544,-32768, 12544,-32768,  1900,  1901,-32768
};

static const short yypgoto[] =
{
  -32768,   -32,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,
  -32768,-32768,  1301,-32768,-32768,-32768,-32768,-32768,-32768,-32768,
  -32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,
  -32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,
  -32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,
  -32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,
  -32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,
  -32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,
  -32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,
  -32768,  -290,   -22,-32768,  1896,  1897,  -351,  -161,  1898,-32768,
  -32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,
  -32768,-32768,-32768, -1214, -1318,-32768,-32768, -1023,   -23,-32768,
     218,-32768,   -89,-32768, -1163,   845,  1511,  -289,  -318,  -706,
     948,-32768,  -266
};


#define	YYLAST		12738


static const short yytable[] =
{
     138,   137,   236,   534,   471,   475,   181,   178,   865,   192,
     508,   195,   241,   713,   190,    10,  1275,    81,   360,   464,
     465,   466,   364,  1346,  1346,   148,   146,    96,  1347,  1347,
    1425,   295,   474,  1346,  1425,   856,  1346,  1425,  1347,   471,
    1346,  1347,   369,  1016,   463,  1347,   462,   463,  1346,  1346,
     146,   203,  1346,  1347,  1347,  1200,  1352,  1347,  1355,   175,
     351,   352,   176,   177,  1209,  1346,   351,   352,   351,   352,
    1347,  1216,  1073,   121,   122,   123,   121,   122,   123,   351,
     352,   143,  1047,  1061,  1048,   353,  1017,   758,  1015,  1062,
       8,   167,   168,   351,   352,  1049,  1256,  1050,   351,   352,
     351,   352,   169,   351,   352,   288,   289,   290,   170,   525,
     291,   294,   186,   298,  1051,   187,  1052,   354,   182,   535,
     318,   319,   320,  1367,   322,    84,   324,   325,     9,   332,
      96,    85,   296,   297,  1346,   370,   857,   858,   161,  1347,
      86,   162,   163,   243,   164,   244,   349,   350,    11,    12,
      13,    14,    15,    16,    17,    18,   147,  1010,    87,  1424,
    1428,   760,   759,   351,   352,   367,   368,   191,   371,  1431,
     373,   380,  1633,   376,   377,  1082,  1637,   495,   718,  1004,
     147,   496,    88,   707,  1639,  1726,   131,   132,  1728,   730,
     124,   125,   126,   127,   810,   124,   125,   126,   127,    82,
      89,  1729,   196,   183,   179,    90,   193,   471,   709,   242,
     714,   131,   132,   558,    91,   416,   131,   132,   471,   706,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   171,   173,  1368,  1425,   351,   352,  1372,  1425,
     470,    92,  1425,   476,   351,   352,   545,   546,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   124,   125,   126,   127,   141,   500,   594,
     502,   131,   132,   595,   289,   470,  1138,   238,   142,   239,
     512,   513,   514,   515,   143,   517,   518,   519,   520,   521,
     522,   523,  1187,   351,   352,  1583,   148,   699,  1587,   151,
    1590,   700,   144,   536,   537,   538,   539,   351,   352,   547,
     601,   145,   124,   125,   126,   127,   245,   554,   246,   351,
     352,   351,   352,   899,   131,   132,   562,   949,   950,   951,
     952,   953,  1425,   131,   132,  1267,  1425,  1269,  1425,   303,
     304,   305,   149,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   850,   150,   346,   869,   348,   315,   697,   704,
     698,   152,   355,   351,   352,   600,   304,   305,   153,   306,
     307,   308,   309,   310,   311,   312,   313,   314,  1001,  1271,
     878,   471,   704,   315,   160,   854,  1499,  1500,  1501,  1502,
    1680,   351,   352,  1506,  1684,   165,  1686,   351,   352,   351,
     352,    43,    44,    45,    46,   851,    48,  1421,   154,   471,
     907,   908,   909,  1427,   155,  1430,   289,   131,   132,   156,
    1276,   708,   710,   505,  1277,   239,   889,  1032,  1033,   418,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   471,
     471,   471,   166,   470,   315,   310,   311,   312,   313,   314,
     157,   158,   416,   159,   470,   315,   732,   733,   301,   302,
     303,   304,   305,   739,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   749,   750,   890,  1041,  1042,   315,   312,
     313,   314,   753,   131,   132,   180,  1188,   315,   174,   729,
     247,   239,   248,   761,   184,   188,  1596,  1597,   189,   249,
    1600,   250,   197,   251,   771,   252,   773,   774,   253,   255,
     254,   256,   257,   259,   258,   260,   261,  1334,   262,   263,
     265,   264,   266,   267,   269,   268,   270,   271,   273,   272,
     274,   275,  1025,   276,   185,  1003,  1005,   198,   199,   528,
     529,   277,   279,   278,   280,   200,   281,   811,   282,   283,
     704,   284,   705,   704,   201,   731,    93,    94,   704,   202,
     881,   471,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,  1012,   704,  1013,  1024,
     704,  1690,  1053,   234,   301,   302,   303,   304,   305,   237,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   285,
     704,   704,  1054,  1055,   315,   704,  1277,  1143,  1278,  1635,
     922,  1636,   299,   286,   840,   841,  1648,  1650,  1649,  1651,
    1652,  1675,  1653,  1676,  1756,  1847,  1757,  1848,   842,   843,
     844,   845,   846,   847,   848,   287,   509,   470,  1849,   316,
    1850,   853,   317,  1851,   859,  1852,  1978,  1980,  1979,  1981,
    1982,   321,  1983,   868,  2089,  1164,  2090,  2091,  2093,  2092,
    2094,  2095,  2097,  2096,  2098,   470,   416,  2099,   323,  2100,
    1765,  2176,  2178,  2177,  2179,  2180,  2224,  2181,  2225,  2226,
     962,  2227,  2228,  2272,  2229,  2273,  2274,  2276,  2275,  2277,
     333,   334,   335,   336,   338,   470,   470,   470,  1131,   340,
     912,   913,   339,   748,   916,   341,   300,   342,   343,   344,
     345,   363,   356,   375,   372,   927,   928,   357,   358,   359,
     362,   374,   378,   379,   381,   382,   411,   128,   129,   383,
     384,  1819,   385,   130,   386,   387,  1159,   388,   133,   389,
     390,   292,   391,   392,   293,   393,   394,   479,   395,   396,
     965,   966,   967,   968,   969,   970,   971,   972,   973,   974,
     975,   976,   977,   978,   979,   980,   981,   982,   983,   984,
     985,   986,   987,   988,   989,   990,   301,   302,   303,   304,
     305,   397,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   398,   399,   400,  1006,   401,   315,   414,   923,   402,
     417,  1011,   301,   302,   303,   304,   305,   403,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   470,   404,  1026,
     405,  1027,   315,   468,   406,   407,   408,   409,   478,   410,
     315,   510,   516,   549,   524,   413,  1043,  1044,  1045,   415,
     477,   550,   553,   556,   559,   563,   564,   565,   566,   567,
     568,   569,   570,  1069,   571,   572,   573,  1065,  1066,  1067,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,  1338,   301,   302,   303,   304,   305,   587,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   588,
     589,   590,   591,   592,   315,   597,   593,   870,   862,   596,
     598,  1101,   701,   702,   711,   712,   717,   747,   767,   719,
     720,   721,   723,   725,  1999,   301,   302,   303,   304,   305,
     726,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     734,   751,   903,   904,   905,   315,   752,   560,   763,   765,
     766,   764,  1132,   301,   302,   303,   304,   305,   769,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   929,   770,
     776,   777,   778,   315,   779,   467,   780,   938,  1148,  1149,
    1150,  1222,   781,   782,   783,   784,   785,   786,   787,  1158,
     788,   789,   790,   791,   792,   793,   794,   795,   796,   797,
     798,   799,   800,  1177,  1178,   801,   807,  1191,   802,   803,
     804,   805,   806,   808,   809,  1190,   813,   814,  1193,   815,
     816,   839,   883,   817,   818,   819,   849,   820,  1203,   852,
     860,   855,   821,   822,   823,  1210,  1211,  1212,   824,   861,
     825,   826,  1217,   827,   828,   829,  1221,   863,   867,   898,
    1223,  1224,  1225,  1226,  1227,  1228,  1229,  1230,  1231,  1232,
    1233,  1234,  1235,  1236,  1237,  1238,  1239,  1240,  1241,  1242,
    1243,  1244,  1245,  1246,  1247,  1248,   301,   302,   303,   304,
     305,   830,   306,   307,   308,   309,   310,   311,   312,   313,
     314,  1258,   873,   831,   875,   885,   315,   886,   832,   887,
     888,   833,   834,   891,   835,   892,   893,   894,   895,  1265,
     896,   897,   836,   301,   302,   303,   304,   305,   864,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   884,  1284,
      93,    94,  1281,   315,  1282,   837,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   118,   119,   120,
      93,    94,   838,   917,   906,   911,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   118,   119,   120,
     301,   302,   303,   304,   305,   919,   306,   307,   308,   309,
     310,   311,   312,   313,   314,  1139,  1337,   924,   926,   925,
     315,   930,   931,   932,  1344,   933,  1350,   934,  1353,   937,
    1356,  1357,   939,   940,   943,   944,   945,  1361,   946,   947,
     956,  1000,  1002,   957,   958,  1165,  1370,  1168,   959,  1171,
     960,  1008,   961,   963,  1378,  1031,  1007,  1014,  1018,  1383,
    1020,  1022,  1386,  1023,  1388,  1389,  1390,  1391,  1392,  1393,
    1394,  1395,  1396,  1397,  1398,  1399,  1400,  1401,  1402,  1403,
    1404,  1405,  1406,  1407,  1408,  1409,  1410,  1411,  1412,  1413,
    1046,  1058,  1059,  1630,  1064,  1068,  1418,  1102,   288,   289,
    1419,  1070,  1133,  1075,  1074,  1076,  1134,  1136,  1077,  1140,
    1141,  1145,  1079,  1438,  1146,  1078,  1084,  1080,  1081,  1083,
    1085,   128,   129,  1086,  1147,  1087,  1088,   130,  1089,  1090,
    1091,  1092,   133,  1093,  1094,   727,  1095,  1098,   728,  1096,
    1097,  1151,  1099,  1100,  1129,  1142,  1152,  1153,  1154,  1155,
    1156,   128,   129,  1157,  1166,  1169,  1172,   130,  1174,  1175,
    1176,  1192,   133,  1179,  1183,   879,  1195,  1196,   880,  1197,
    1198,  1199,  1201,  1202,  1204,  1205,  1253,  1206,  1482,  1207,
    1208,  1214,  1215,  1218,  1487,  1219,  1498,  1491,  1255,  1721,
    1220,  1724,  1249,  1250,  1257,  1251,  1254,  1263,  1264,  1268,
     910,  1266,  1285,  1270,  1272,  1279,  1335,  1280,  1287,  1288,
    1290,  1514,  1515,  1516,  1517,  1518,  1519,  1520,  1521,  1522,
    1523,  1524,  1525,  1526,  1527,  1528,  1529,  1530,  1531,  1532,
    1533,  1534,  1358,  1536,  1289,  1365,  1366,  1369,  1294,  1295,
    1291,  1293,  1371,  1373,  1300,  1374,  1548,  1375,   301,   302,
     303,   304,   305,  1299,   306,   307,   308,   309,   310,   311,
     312,   313,   314,  1301,  1303,  1345,  1304,  1351,   315,  1354,
    1788,    93,   326,  1306,  1162,  1333,  1163,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   118,   119,
     120,  1376,  1377,  1379,  1381,  1382,  1384,  1385,  1414,  1387,
    1415,  1417,  1603,  1605,  1607,  1608,  1609,  1610,  1611,  1612,
    1613,  1614,  1615,  1616,  1617,  1618,  1619,  1620,  1621,  1622,
    1623,  1624,  1625,  1626,  1627,  1628,  1422,  1423,    93,   506,
     348,  1437,  1443,  1643,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,   119,   120,   301,   302,
     303,   304,   305,  1480,   306,   307,   308,   309,   310,   311,
     312,   313,   314,  1484,  1434,  1435,  1439,  1485,   315,  1488,
    1489,  1689,  1440,  1441,  1444,  1446,  1448,  1450,  1492,  1688,
    1493,  1477,  1494,  1497,  1503,  1694,  1009,  1696,  1504,  1698,
    1505,  1700,  1701,  1702,  1703,  1704,  1705,  1706,  1707,  1708,
    1709,  1710,  1711,  1712,  1713,  1714,  1715,  1716,  1717,  1718,
    1719,  1720,  1507,  1508,  1509,  1510,  1537,  1732,  1582,  1539,
    1541,  1547,   330,  1584,  1542,  1544,  1546,  1549,   337,  1550,
    1551,  1552,   128,   327,  1555,  1588,  1553,  1554,   130,  1556,
    1252,  1557,  1579,   133,  1581,  1591,  1594,  1598,  1599,   328,
    1595,   361,  1601,  1632,  1634,  1638,  1640,   365,   366,  1641,
    1642,  1644,  1645,  1646,  1647,  1677,  1679,  1762,  1763,  1682,
    1683,  1678,  1685,  1692,  1687,  1770,  1771,  1772,  1773,  1774,
    1775,  1776,  1777,  1778,  1779,  1780,  1781,  1782,  1783,  1784,
    1785,  1786,  1787,  1693,  1695,  1697,  1699,  1722,  1725,   128,
     129,  1727,  1730,  1733,  1734,   130,  1758,  1759,  1760,  1761,
     133,  1764,  1789,  1792,  1793,  1817,   507,  1794,  1871,  1795,
    1796,  1797,  1845,  1846,  1260,  1873,  1875,  1816,  1877,  1879,
    1898,  1936,  1821,  1823,  1825,  1826,  1827,  1828,  1829,  1830,
    1831,  1832,  1833,  1834,  1835,  1836,  1837,  1838,  1839,  1840,
    1841,  1842,  1843,  1937,   301,   302,   303,   304,   305,  1938,
     306,   307,   308,   309,   310,   311,   312,   313,   314,  1939,
    1977,  2001,  1261,  2003,   315,  2005,  2037,  2021,  2111,  2113,
    2053,  2115,  2117,  2119,  1874,  2121,  1876,  2054,  1878,  2055,
    1880,  1881,  1882,  1883,  1884,  1885,  1886,  1887,  1888,  1889,
    1890,  1891,  1892,  1893,  1894,  1895,  1896,  1897,   301,   302,
     303,   304,   305,  2189,   306,   307,   308,   309,   310,   311,
     312,   313,   314,  2056,  2057,  2058,  2155,  2156,   315,  2157,
    2191,  2193,  2209,  2210,  2211,  2234,  2236,  1262,  2238,  1921,
    1922,  1923,  1924,  1925,  1926,  1927,  1928,  1929,  1930,  1931,
    1932,  1933,  1934,  1935,  2263,  2264,  2265,  2279,  2281,  2283,
    2285,  2286,   812,    71,    72,    73,     0,  1182,     0,     0,
       0,     0,     0,     0,  1957,  1959,  1961,  1962,  1963,  1964,
    1965,  1966,  1967,  1968,  1969,  1970,  1971,  1972,  1973,  1974,
    1975,  1976,   301,   302,   303,   304,   305,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,     0,     0,
       0,     0,   315,     0,     0,  2000,  1135,  2002,     0,  2004,
       0,  2006,  2007,  2008,  2009,  2010,  2011,  2012,  2013,  2014,
    2015,  2016,  2017,  2018,  2019,  2020,     0,     0,     0,   703,
     301,   302,   303,   304,   305,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,     0,     0,     0,     0,
     315,     0,     0,     0,     0,  2044,  2045,  2046,  2047,  2048,
    2049,  2050,  2051,  2052,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2069,  2071,  2073,  2075,  2077,  2079,  2080,  2081,  2082,  2083,
    2084,  2085,  2086,  2087,  2088,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,     0,     0,     0,     0,   315,  2110,     0,  2112,     0,
    2114,     0,  2116,     0,  2118,     0,  2120,     0,  2122,  2123,
    2124,  2125,  2126,  2127,  2128,  2129,  2130,  1436,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2140,  2141,
    2142,  2143,  2144,  2145,     0,   716,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2158,  2159,  2160,  2161,
    2162,  2163,  2165,  2167,  2169,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2182,  2183,  2184,
    2185,  2186,  2187,  2188,     0,  2190,     0,  2192,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2200,  2201,  2202,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2212,  2213,  2214,  2216,  2218,  2220,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2230,  2231,
    2232,  2233,     0,  2235,     0,  2237,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2242,  2243,  2244,     0,
       0,     0,  2248,  2249,  2250,     0,     0,     0,  2254,  2255,
    2256,   871,   872,     0,   874,     0,   876,   877,     0,     0,
    2267,  2269,  2271,     0,     0,     0,     0,     0,     0,  2278,
       0,  2280,     0,  2282,     0,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,     0,     0,     0,     0,   315,   914,   915,     0,     0,
     918,   301,   302,   303,   304,   305,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,     0,   935,   936,     0,
       0,   315,     0,   941,   942,     0,     0,    93,    94,     0,
     948,     0,   955,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   118,   119,   120,     0,     0,    93,
      94,    95,     0,    96,     0,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   118,   119,   120,     0,
     121,   122,   123,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1019,     0,  1021,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1028,  1029,  1030,     0,
       0,     0,  1034,  1035,  1036,  1037,  1038,  1039,  1040,    93,
      94,   463,     0,     0,     0,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   118,   119,   120,     0,
     121,   122,   123,    93,    94,     0,     0,     0,     0,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     118,   119,   120,   301,   302,   303,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,  1341,  1342,
       0,     0,     0,   315,   130,   882,     0,     0,     0,  1343,
       0,   735,     0,     0,     0,   170,   124,   125,   126,   127,
     921,     0,     0,     0,  1130,     0,     0,     0,     0,     0,
     128,   129,     0,     0,     0,     0,   130,   131,   132,     0,
       0,   133,     0,   134,     0,   135,    93,   326,     0,     0,
       0,     0,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1184,     0,     0,     0,     0,
       0,     0,     0,  1194,     0,     0,     0,     0,     0,     0,
     128,   129,     0,     0,     0,     0,   130,     0,     0,     0,
       0,   133,  1213,     0,     0,     0,     0,     0,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   128,   129,     0,     0,   315,     0,
     130,    93,   506,     0,  1185,   133,  1186,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   118,   119,
     120,   301,   302,   303,   304,   305,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   301,   302,   303,   304,
     305,   315,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,     0,     0,     0,     0,   315,     0,     0,     0,
     540,    27,    28,   541,   542,    31,    32,    33,     0,    34,
       0,    36,    37,    38,     0,    40,    41,   128,   469,     0,
       0,     0,     0,   130,     0,     0,     0,     0,   133,     0,
       0,     0,    53,     0,     0,     0,   540,    27,    28,   541,
     542,    31,    32,    33,     0,    34,     0,    36,    37,    38,
       0,    40,    41,     0,     0,     0,     0,     0,     0,     0,
      54,    55,    56,   301,   302,   303,   304,   305,    53,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,    66,
       0,     0,     0,   315,     0,     0,     0,     0,  1359,  1339,
    1360,  1340,     0,     0,  1364,     0,    54,    55,    56,   -10,
       1,     0,   -10,   -53,     0,     0,     0,     0,     0,     0,
    1380,     0,   128,   129,     0,    66,     0,     0,   130,     0,
       0,     0,     0,   133,     0,     0,     0,     0,     0,     0,
       0,     0,   -53,     0,     0,     0,   -53,   -53,   -53,   -53,
     -53,   -53,   -53,   -53,   -53,     0,   -53,   -53,   -53,   -53,
     -53,   -53,   -53,   -53,     0,     0,     0,   -53,   -53,   -53,
     -53,   -53,   -53,   -53,   543,   -53,   -53,   -53,   -53,   -53,
     540,    27,    28,   541,   542,    31,    32,    33,     0,    34,
       0,    36,    37,    38,     0,    40,    41,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   -53,   -53,   -53,
     548,     0,    53,     0,   -53,     0,   -53,     0,   -53,   -53,
     -53,   -53,   -53,   -53,   -53,     0,   -53,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1478,     0,     0,
      54,    55,    56,     0,  1483,   -10,   -10,   -10,   -10,   -10,
     -10,   -10,   -10,     0,     0,  1495,  1496,     0,     0,    66,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       2,     3,     0,     4,   301,   302,   303,   304,   305,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,     0,
       0,     0,     0,     0,   315,     0,     0,     0,   473,  1538,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,     0,     0,   204,   301,
     302,   303,   304,   305,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   772,     0,     0,     0,     0,   315,
       0,     0,     0,     0,     0,     0,     0,   740,     0,     0,
       0,     0,  1586,     0,     0,     0,     0,  1593,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   205,   206,   207,     0,     0,
       0,     0,     0,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,     0,    23,     0,     0,     0,     0,     0,
     628,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,     0,   228,   229,   230,   231,   232,   233,     0,     0,
       0,     0,     0,    24,     0,     0,  1681,    25,    26,    27,
      28,    29,    30,    31,    32,    33,  1691,    34,    35,    36,
      37,    38,    39,    40,    41,     0,     0,     0,    42,    43,
      44,    45,    46,    47,    48,     0,    49,    50,    51,    52,
      53,     0,     0,   301,   302,   303,   304,   305,   964,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,     0,     0,     0,     0,    54,    55,
      56,   741,     0,     0,     0,    57,     0,    58,     0,    59,
      60,    61,    62,    63,    64,    65,     0,    66,   540,    27,
      28,   541,   542,    31,    32,    33,     0,    34,     0,    36,
      37,    38,     0,    40,    41,  1766,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   301,   302,   303,   304,   305,
      53,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,     0,     0,     0,     0,   315,     0,     0,     0,     0,
       0,     0,     0,   902,     0,     0,     0,     0,    54,    55,
      56,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1818,     0,     0,    66,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,     0,
       0,   301,   302,   303,   304,   305,  1160,   306,   307,   308,
     309,   310,   311,   312,   313,   314,     0,     0,     0,     0,
       0,   315,     0,     0,     0,     0,  1872,     0,     0,  1362,
     301,   302,   303,   304,   305,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,     0,     0,     0,     0,
     315,     0,     0,   301,   302,   303,   304,   305,  1363,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,     0,     0,     0,     0,     0,  1917,
       0,  1420,   301,   302,   303,   304,   305,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,     0,     0,
       0,     0,   315,     0,     0,     0,     0,     0,     0,     0,
    1426,     0,   301,   302,   303,   304,   305,  1955,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,     0,     0,
       0,     0,   315,     0,     0,   301,   302,   303,   304,   305,
    1429,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,     0,     0,     0,     0,   315,     0,     0,   301,   302,
     303,   304,   305,  1432,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,     0,
       0,   301,   302,   303,   304,   305,  1433,   306,   307,   308,
     309,   310,   311,   312,   313,   314,     0,     0,     0,     0,
       0,   315,     0,     0,   301,   302,   303,   304,   305,  1479,
     306,   307,   308,   309,   310,   311,   312,   313,   314,     0,
       0,     0,     0,     0,   315,     0,     0,   301,   302,   303,
     304,   305,  1540,   306,   307,   308,   309,   310,   311,   312,
     313,   314,     0,     0,     0,     0,     0,   315,     0,     0,
     301,   302,   303,   304,   305,  1543,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,     0,     0,     0,     0,
     315,     0,     0,   301,   302,   303,   304,   305,  1545,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,     0,     0,   301,   302,   303,   304,
     305,  1791,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,     0,     0,     0,     0,   315,     0,     0,   301,
     302,   303,   304,   305,  1844,   306,   307,   308,   309,   310,
     311,   312,   313,   314,     0,     0,     0,     0,     0,   315,
       0,   467,     0,     0,     0,   526,   301,   302,   303,   304,
     305,     0,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,     0,     0,     0,     0,   315,   301,   302,   303,
     304,   305,   526,   306,   307,   308,   309,   310,   311,   312,
     313,   314,     0,     0,     0,     0,     0,   315,   301,   302,
     303,   304,   305,   527,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,   301,
     302,   303,   304,   305,   557,   306,   307,   308,   309,   310,
     311,   312,   313,   314,     0,     0,     0,     0,     0,   315,
     301,   302,   303,   304,   305,   677,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,     0,     0,     0,     0,
     315,   301,   302,   303,   304,   305,   678,   306,   307,   308,
     309,   310,   311,   312,   313,   314,     0,     0,     0,     0,
       0,   315,   301,   302,   303,   304,   305,   691,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,     0,     0,
       0,     0,   315,   301,   302,   303,   304,   305,   692,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,   301,   302,   303,   304,   305,   693,
     306,   307,   308,   309,   310,   311,   312,   313,   314,     0,
       0,     0,     0,     0,   315,   301,   302,   303,   304,   305,
     694,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,     0,     0,     0,     0,   315,   301,   302,   303,   304,
     305,   695,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,     0,     0,     0,     0,   315,   301,   302,   303,
     304,   305,   696,   306,   307,   308,   309,   310,   311,   312,
     313,   314,     0,     0,     0,     0,     0,   315,   301,   302,
     303,   304,   305,   754,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,   301,
     302,   303,   304,   305,   755,   306,   307,   308,   309,   310,
     311,   312,   313,   314,     0,     0,     0,     0,     0,   315,
     301,   302,   303,   304,   305,   756,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,     0,     0,     0,     0,
     315,   301,   302,   303,   304,   305,   900,   306,   307,   308,
     309,   310,   311,   312,   313,   314,     0,     0,     0,     0,
       0,   315,   301,   302,   303,   304,   305,   901,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,     0,     0,
       0,     0,   315,   301,   302,   303,   304,   305,   920,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,   301,   302,   303,   304,   305,  1056,
     306,   307,   308,   309,   310,   311,   312,   313,   314,     0,
       0,     0,     0,     0,   315,   301,   302,   303,   304,   305,
    1057,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,     0,     0,     0,     0,   315,   301,   302,   303,   304,
     305,  1071,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,     0,     0,     0,     0,   315,   301,   302,   303,
     304,   305,  1072,   306,   307,   308,   309,   310,   311,   312,
     313,   314,     0,     0,     0,     0,     0,   315,   301,   302,
     303,   304,   305,  1103,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,   301,
     302,   303,   304,   305,  1104,   306,   307,   308,   309,   310,
     311,   312,   313,   314,     0,     0,     0,     0,     0,   315,
     301,   302,   303,   304,   305,  1105,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,     0,     0,     0,     0,
     315,   301,   302,   303,   304,   305,  1106,   306,   307,   308,
     309,   310,   311,   312,   313,   314,     0,     0,     0,     0,
       0,   315,   301,   302,   303,   304,   305,  1107,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,     0,     0,
       0,     0,   315,   301,   302,   303,   304,   305,  1108,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,   301,   302,   303,   304,   305,  1109,
     306,   307,   308,   309,   310,   311,   312,   313,   314,     0,
       0,     0,     0,     0,   315,   301,   302,   303,   304,   305,
    1110,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,     0,     0,     0,     0,   315,   301,   302,   303,   304,
     305,  1111,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,     0,     0,     0,     0,   315,   301,   302,   303,
     304,   305,  1112,   306,   307,   308,   309,   310,   311,   312,
     313,   314,     0,     0,     0,     0,     0,   315,   301,   302,
     303,   304,   305,  1113,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,   301,
     302,   303,   304,   305,  1114,   306,   307,   308,   309,   310,
     311,   312,   313,   314,     0,     0,     0,     0,     0,   315,
     301,   302,   303,   304,   305,  1115,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,     0,     0,     0,     0,
     315,   301,   302,   303,   304,   305,  1116,   306,   307,   308,
     309,   310,   311,   312,   313,   314,     0,     0,     0,     0,
       0,   315,   301,   302,   303,   304,   305,  1117,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,     0,     0,
       0,     0,   315,   301,   302,   303,   304,   305,  1118,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,   301,   302,   303,   304,   305,  1119,
     306,   307,   308,   309,   310,   311,   312,   313,   314,     0,
       0,     0,     0,     0,   315,   301,   302,   303,   304,   305,
    1120,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,     0,     0,     0,     0,   315,   301,   302,   303,   304,
     305,  1121,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,     0,     0,     0,     0,   315,   301,   302,   303,
     304,   305,  1122,   306,   307,   308,   309,   310,   311,   312,
     313,   314,     0,     0,     0,     0,     0,   315,   301,   302,
     303,   304,   305,  1123,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,   301,
     302,   303,   304,   305,  1124,   306,   307,   308,   309,   310,
     311,   312,   313,   314,     0,     0,     0,     0,     0,   315,
     301,   302,   303,   304,   305,  1125,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,     0,     0,     0,     0,
     315,   301,   302,   303,   304,   305,  1126,   306,   307,   308,
     309,   310,   311,   312,   313,   314,     0,     0,     0,     0,
       0,   315,   301,   302,   303,   304,   305,  1127,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,     0,     0,
       0,     0,   315,   301,   302,   303,   304,   305,  1128,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,   301,   302,   303,   304,   305,  1144,
     306,   307,   308,   309,   310,   311,   312,   313,   314,     0,
       0,     0,     0,     0,   315,   301,   302,   303,   304,   305,
    1259,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,     0,     0,     0,     0,   315,   301,   302,   303,   304,
     305,  1273,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,     0,     0,     0,     0,   315,   301,   302,   303,
     304,   305,  1274,   306,   307,   308,   309,   310,   311,   312,
     313,   314,     0,     0,     0,     0,     0,   315,   301,   302,
     303,   304,   305,  1283,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,   301,
     302,   303,   304,   305,  1286,   306,   307,   308,   309,   310,
     311,   312,   313,   314,     0,     0,     0,     0,     0,   315,
     301,   302,   303,   304,   305,  1297,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,     0,     0,     0,     0,
     315,   301,   302,   303,   304,   305,  1302,   306,   307,   308,
     309,   310,   311,   312,   313,   314,     0,     0,     0,     0,
       0,   315,   301,   302,   303,   304,   305,  1305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,     0,     0,
       0,     0,   315,   301,   302,   303,   304,   305,  1307,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,   301,   302,   303,   304,   305,  1308,
     306,   307,   308,   309,   310,   311,   312,   313,   314,     0,
       0,     0,     0,     0,   315,   301,   302,   303,   304,   305,
    1309,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,     0,     0,     0,     0,   315,   301,   302,   303,   304,
     305,  1310,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,     0,     0,     0,     0,   315,   301,   302,   303,
     304,   305,  1311,   306,   307,   308,   309,   310,   311,   312,
     313,   314,     0,     0,     0,     0,     0,   315,   301,   302,
     303,   304,   305,  1312,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,   301,
     302,   303,   304,   305,  1313,   306,   307,   308,   309,   310,
     311,   312,   313,   314,     0,     0,     0,     0,     0,   315,
     301,   302,   303,   304,   305,  1314,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,     0,     0,     0,     0,
     315,   301,   302,   303,   304,   305,  1315,   306,   307,   308,
     309,   310,   311,   312,   313,   314,     0,     0,     0,     0,
       0,   315,   301,   302,   303,   304,   305,  1316,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,     0,     0,
       0,     0,   315,   301,   302,   303,   304,   305,  1317,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,   301,   302,   303,   304,   305,  1318,
     306,   307,   308,   309,   310,   311,   312,   313,   314,     0,
       0,     0,     0,     0,   315,   301,   302,   303,   304,   305,
    1319,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,     0,     0,     0,     0,   315,   301,   302,   303,   304,
     305,  1320,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,     0,     0,     0,     0,   315,   301,   302,   303,
     304,   305,  1321,   306,   307,   308,   309,   310,   311,   312,
     313,   314,     0,     0,     0,     0,     0,   315,   301,   302,
     303,   304,   305,  1322,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,   301,
     302,   303,   304,   305,  1323,   306,   307,   308,   309,   310,
     311,   312,   313,   314,     0,     0,     0,     0,     0,   315,
     301,   302,   303,   304,   305,  1324,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,     0,     0,     0,     0,
     315,   301,   302,   303,   304,   305,  1325,   306,   307,   308,
     309,   310,   311,   312,   313,   314,     0,     0,     0,     0,
       0,   315,   301,   302,   303,   304,   305,  1326,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,     0,     0,
       0,     0,   315,   301,   302,   303,   304,   305,  1327,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,   301,   302,   303,   304,   305,  1328,
     306,   307,   308,   309,   310,   311,   312,   313,   314,     0,
       0,     0,     0,     0,   315,   301,   302,   303,   304,   305,
    1329,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,     0,     0,     0,     0,   315,   301,   302,   303,   304,
     305,  1330,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,     0,     0,     0,     0,   315,   301,   302,   303,
     304,   305,  1331,   306,   307,   308,   309,   310,   311,   312,
     313,   314,     0,     0,     0,     0,     0,   315,   301,   302,
     303,   304,   305,  1332,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,   301,
     302,   303,   304,   305,  1336,   306,   307,   308,   309,   310,
     311,   312,   313,   314,     0,     0,     0,     0,     0,   315,
     301,   302,   303,   304,   305,  1442,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,     0,     0,     0,     0,
     315,   301,   302,   303,   304,   305,  1454,   306,   307,   308,
     309,   310,   311,   312,   313,   314,     0,     0,     0,     0,
       0,   315,   301,   302,   303,   304,   305,  1455,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,     0,     0,
       0,     0,   315,   301,   302,   303,   304,   305,  1456,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,   301,   302,   303,   304,   305,  1457,
     306,   307,   308,   309,   310,   311,   312,   313,   314,     0,
       0,     0,     0,     0,   315,   301,   302,   303,   304,   305,
    1458,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,     0,     0,     0,     0,   315,   301,   302,   303,   304,
     305,  1459,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,     0,     0,     0,     0,   315,   301,   302,   303,
     304,   305,  1460,   306,   307,   308,   309,   310,   311,   312,
     313,   314,     0,     0,     0,     0,     0,   315,   301,   302,
     303,   304,   305,  1461,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,   301,
     302,   303,   304,   305,  1462,   306,   307,   308,   309,   310,
     311,   312,   313,   314,     0,     0,     0,     0,     0,   315,
     301,   302,   303,   304,   305,  1463,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,     0,     0,     0,     0,
     315,   301,   302,   303,   304,   305,  1464,   306,   307,   308,
     309,   310,   311,   312,   313,   314,     0,     0,     0,     0,
       0,   315,   301,   302,   303,   304,   305,  1465,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,     0,     0,
       0,     0,   315,   301,   302,   303,   304,   305,  1466,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,   301,   302,   303,   304,   305,  1467,
     306,   307,   308,   309,   310,   311,   312,   313,   314,     0,
       0,     0,     0,     0,   315,   301,   302,   303,   304,   305,
    1468,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,     0,     0,     0,     0,   315,   301,   302,   303,   304,
     305,  1469,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,     0,     0,     0,     0,   315,   301,   302,   303,
     304,   305,  1470,   306,   307,   308,   309,   310,   311,   312,
     313,   314,     0,     0,     0,     0,     0,   315,   301,   302,
     303,   304,   305,  1471,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,   301,
     302,   303,   304,   305,  1472,   306,   307,   308,   309,   310,
     311,   312,   313,   314,     0,     0,     0,     0,     0,   315,
     301,   302,   303,   304,   305,  1473,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,     0,     0,     0,     0,
     315,   301,   302,   303,   304,   305,  1474,   306,   307,   308,
     309,   310,   311,   312,   313,   314,     0,     0,     0,     0,
       0,   315,   301,   302,   303,   304,   305,  1476,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,     0,     0,
       0,     0,   315,   301,   302,   303,   304,   305,  1558,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,   301,   302,   303,   304,   305,  1559,
     306,   307,   308,   309,   310,   311,   312,   313,   314,     0,
       0,     0,     0,     0,   315,   301,   302,   303,   304,   305,
    1560,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,     0,     0,     0,     0,   315,   301,   302,   303,   304,
     305,  1561,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,     0,     0,     0,     0,   315,   301,   302,   303,
     304,   305,  1562,   306,   307,   308,   309,   310,   311,   312,
     313,   314,     0,     0,     0,     0,     0,   315,   301,   302,
     303,   304,   305,  1563,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,   301,
     302,   303,   304,   305,  1564,   306,   307,   308,   309,   310,
     311,   312,   313,   314,     0,     0,     0,     0,     0,   315,
     301,   302,   303,   304,   305,  1565,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,     0,     0,     0,     0,
     315,   301,   302,   303,   304,   305,  1566,   306,   307,   308,
     309,   310,   311,   312,   313,   314,     0,     0,     0,     0,
       0,   315,   301,   302,   303,   304,   305,  1567,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,     0,     0,
       0,     0,   315,   301,   302,   303,   304,   305,  1568,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,   301,   302,   303,   304,   305,  1569,
     306,   307,   308,   309,   310,   311,   312,   313,   314,     0,
       0,     0,     0,     0,   315,   301,   302,   303,   304,   305,
    1570,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,     0,     0,     0,     0,   315,   301,   302,   303,   304,
     305,  1571,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,     0,     0,     0,     0,   315,   301,   302,   303,
     304,   305,  1572,   306,   307,   308,   309,   310,   311,   312,
     313,   314,     0,     0,     0,     0,     0,   315,   301,   302,
     303,   304,   305,  1573,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,   301,
     302,   303,   304,   305,  1574,   306,   307,   308,   309,   310,
     311,   312,   313,   314,     0,     0,     0,     0,     0,   315,
     301,   302,   303,   304,   305,  1575,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,     0,     0,     0,     0,
     315,   301,   302,   303,   304,   305,  1576,   306,   307,   308,
     309,   310,   311,   312,   313,   314,     0,     0,     0,     0,
       0,   315,   301,   302,   303,   304,   305,  1577,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,     0,     0,
       0,     0,   315,   301,   302,   303,   304,   305,  1578,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,   301,   302,   303,   304,   305,  1654,
     306,   307,   308,   309,   310,   311,   312,   313,   314,     0,
       0,     0,     0,     0,   315,   301,   302,   303,   304,   305,
    1655,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,     0,     0,     0,     0,   315,   301,   302,   303,   304,
     305,  1656,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,     0,     0,     0,     0,   315,   301,   302,   303,
     304,   305,  1657,   306,   307,   308,   309,   310,   311,   312,
     313,   314,     0,     0,     0,     0,     0,   315,   301,   302,
     303,   304,   305,  1658,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,   301,
     302,   303,   304,   305,  1659,   306,   307,   308,   309,   310,
     311,   312,   313,   314,     0,     0,     0,     0,     0,   315,
     301,   302,   303,   304,   305,  1660,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,     0,     0,     0,     0,
     315,   301,   302,   303,   304,   305,  1661,   306,   307,   308,
     309,   310,   311,   312,   313,   314,     0,     0,     0,     0,
       0,   315,   301,   302,   303,   304,   305,  1662,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,     0,     0,
       0,     0,   315,   301,   302,   303,   304,   305,  1663,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,   301,   302,   303,   304,   305,  1664,
     306,   307,   308,   309,   310,   311,   312,   313,   314,     0,
       0,     0,     0,     0,   315,   301,   302,   303,   304,   305,
    1665,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,     0,     0,     0,     0,   315,   301,   302,   303,   304,
     305,  1666,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,     0,     0,     0,     0,   315,   301,   302,   303,
     304,   305,  1667,   306,   307,   308,   309,   310,   311,   312,
     313,   314,     0,     0,     0,     0,     0,   315,   301,   302,
     303,   304,   305,  1668,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,   301,
     302,   303,   304,   305,  1669,   306,   307,   308,   309,   310,
     311,   312,   313,   314,     0,     0,     0,     0,     0,   315,
     301,   302,   303,   304,   305,  1670,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,     0,     0,     0,     0,
     315,   301,   302,   303,   304,   305,  1671,   306,   307,   308,
     309,   310,   311,   312,   313,   314,     0,     0,     0,     0,
       0,   315,   301,   302,   303,   304,   305,  1672,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,     0,     0,
       0,     0,   315,   301,   302,   303,   304,   305,  1673,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,   301,   302,   303,   304,   305,  1674,
     306,   307,   308,   309,   310,   311,   312,   313,   314,     0,
       0,     0,     0,     0,   315,   301,   302,   303,   304,   305,
    1731,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,     0,     0,     0,     0,   315,   301,   302,   303,   304,
     305,  1738,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,     0,     0,     0,     0,   315,   301,   302,   303,
     304,   305,  1739,   306,   307,   308,   309,   310,   311,   312,
     313,   314,     0,     0,     0,     0,     0,   315,   301,   302,
     303,   304,   305,  1740,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,   301,
     302,   303,   304,   305,  1741,   306,   307,   308,   309,   310,
     311,   312,   313,   314,     0,     0,     0,     0,     0,   315,
     301,   302,   303,   304,   305,  1742,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,     0,     0,     0,     0,
     315,   301,   302,   303,   304,   305,  1743,   306,   307,   308,
     309,   310,   311,   312,   313,   314,     0,     0,     0,     0,
       0,   315,   301,   302,   303,   304,   305,  1744,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,     0,     0,
       0,     0,   315,   301,   302,   303,   304,   305,  1745,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,   301,   302,   303,   304,   305,  1746,
     306,   307,   308,   309,   310,   311,   312,   313,   314,     0,
       0,     0,     0,     0,   315,   301,   302,   303,   304,   305,
    1747,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,     0,     0,     0,     0,   315,   301,   302,   303,   304,
     305,  1748,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,     0,     0,     0,     0,   315,   301,   302,   303,
     304,   305,  1749,   306,   307,   308,   309,   310,   311,   312,
     313,   314,     0,     0,     0,     0,     0,   315,   301,   302,
     303,   304,   305,  1750,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,   301,
     302,   303,   304,   305,  1751,   306,   307,   308,   309,   310,
     311,   312,   313,   314,     0,     0,     0,     0,     0,   315,
     301,   302,   303,   304,   305,  1752,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,     0,     0,     0,     0,
     315,   301,   302,   303,   304,   305,  1753,   306,   307,   308,
     309,   310,   311,   312,   313,   314,     0,     0,     0,     0,
       0,   315,   301,   302,   303,   304,   305,  1754,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,     0,     0,
       0,     0,   315,   301,   302,   303,   304,   305,  1755,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,   301,   302,   303,   304,   305,  1790,
     306,   307,   308,   309,   310,   311,   312,   313,   314,     0,
       0,     0,     0,     0,   315,   301,   302,   303,   304,   305,
    1798,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,     0,     0,     0,     0,   315,   301,   302,   303,   304,
     305,  1799,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,     0,     0,     0,     0,   315,   301,   302,   303,
     304,   305,  1800,   306,   307,   308,   309,   310,   311,   312,
     313,   314,     0,     0,     0,     0,     0,   315,   301,   302,
     303,   304,   305,  1801,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,   301,
     302,   303,   304,   305,  1802,   306,   307,   308,   309,   310,
     311,   312,   313,   314,     0,     0,     0,     0,     0,   315,
     301,   302,   303,   304,   305,  1803,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,     0,     0,     0,     0,
     315,   301,   302,   303,   304,   305,  1804,   306,   307,   308,
     309,   310,   311,   312,   313,   314,     0,     0,     0,     0,
       0,   315,   301,   302,   303,   304,   305,  1805,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,     0,     0,
       0,     0,   315,   301,   302,   303,   304,   305,  1806,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,   301,   302,   303,   304,   305,  1807,
     306,   307,   308,   309,   310,   311,   312,   313,   314,     0,
       0,     0,     0,     0,   315,   301,   302,   303,   304,   305,
    1808,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,     0,     0,     0,     0,   315,   301,   302,   303,   304,
     305,  1809,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,     0,     0,     0,     0,   315,   301,   302,   303,
     304,   305,  1810,   306,   307,   308,   309,   310,   311,   312,
     313,   314,     0,     0,     0,     0,     0,   315,   301,   302,
     303,   304,   305,  1811,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,   301,
     302,   303,   304,   305,  1812,   306,   307,   308,   309,   310,
     311,   312,   313,   314,     0,     0,     0,     0,     0,   315,
     301,   302,   303,   304,   305,  1813,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,     0,     0,     0,     0,
     315,   301,   302,   303,   304,   305,  1814,   306,   307,   308,
     309,   310,   311,   312,   313,   314,     0,     0,     0,     0,
       0,   315,   301,   302,   303,   304,   305,  1815,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,     0,     0,
       0,     0,   315,   301,   302,   303,   304,   305,  1853,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,   301,   302,   303,   304,   305,  1854,
     306,   307,   308,   309,   310,   311,   312,   313,   314,     0,
       0,     0,     0,     0,   315,   301,   302,   303,   304,   305,
    1855,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,     0,     0,     0,     0,   315,   301,   302,   303,   304,
     305,  1856,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,     0,     0,     0,     0,   315,   301,   302,   303,
     304,   305,  1857,   306,   307,   308,   309,   310,   311,   312,
     313,   314,     0,     0,     0,     0,     0,   315,   301,   302,
     303,   304,   305,  1858,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,   301,
     302,   303,   304,   305,  1859,   306,   307,   308,   309,   310,
     311,   312,   313,   314,     0,     0,     0,     0,     0,   315,
     301,   302,   303,   304,   305,  1860,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,     0,     0,     0,     0,
     315,   301,   302,   303,   304,   305,  1861,   306,   307,   308,
     309,   310,   311,   312,   313,   314,     0,     0,     0,     0,
       0,   315,   301,   302,   303,   304,   305,  1862,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,     0,     0,
       0,     0,   315,   301,   302,   303,   304,   305,  1863,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,   301,   302,   303,   304,   305,  1864,
     306,   307,   308,   309,   310,   311,   312,   313,   314,     0,
       0,     0,     0,     0,   315,   301,   302,   303,   304,   305,
    1865,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,     0,     0,     0,     0,   315,   301,   302,   303,   304,
     305,  1866,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,     0,     0,     0,     0,   315,   301,   302,   303,
     304,   305,  1867,   306,   307,   308,   309,   310,   311,   312,
     313,   314,     0,     0,     0,     0,     0,   315,   301,   302,
     303,   304,   305,  1868,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,   301,
     302,   303,   304,   305,  1869,   306,   307,   308,   309,   310,
     311,   312,   313,   314,     0,     0,     0,     0,     0,   315,
     301,   302,   303,   304,   305,  1870,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,     0,     0,     0,     0,
     315,   301,   302,   303,   304,   305,  1902,   306,   307,   308,
     309,   310,   311,   312,   313,   314,     0,     0,     0,     0,
       0,   315,   301,   302,   303,   304,   305,  1903,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,     0,     0,
       0,     0,   315,   301,   302,   303,   304,   305,  1904,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,   301,   302,   303,   304,   305,  1905,
     306,   307,   308,   309,   310,   311,   312,   313,   314,     0,
       0,     0,     0,     0,   315,   301,   302,   303,   304,   305,
    1906,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,     0,     0,     0,     0,   315,   301,   302,   303,   304,
     305,  1907,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,     0,     0,     0,     0,   315,   301,   302,   303,
     304,   305,  1908,   306,   307,   308,   309,   310,   311,   312,
     313,   314,     0,     0,     0,     0,     0,   315,   301,   302,
     303,   304,   305,  1909,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,   301,
     302,   303,   304,   305,  1910,   306,   307,   308,   309,   310,
     311,   312,   313,   314,     0,     0,     0,     0,     0,   315,
     301,   302,   303,   304,   305,  1911,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,     0,     0,     0,     0,
     315,   301,   302,   303,   304,   305,  1912,   306,   307,   308,
     309,   310,   311,   312,   313,   314,     0,     0,     0,     0,
       0,   315,   301,   302,   303,   304,   305,  1913,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,     0,     0,
       0,     0,   315,   301,   302,   303,   304,   305,  1914,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,   301,   302,   303,   304,   305,  1915,
     306,   307,   308,   309,   310,   311,   312,   313,   314,     0,
       0,     0,     0,     0,   315,   301,   302,   303,   304,   305,
    1916,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,     0,     0,     0,     0,   315,   301,   302,   303,   304,
     305,  1940,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,     0,     0,     0,     0,   315,   301,   302,   303,
     304,   305,  1941,   306,   307,   308,   309,   310,   311,   312,
     313,   314,     0,     0,     0,     0,     0,   315,   301,   302,
     303,   304,   305,  1942,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,   301,
     302,   303,   304,   305,  1943,   306,   307,   308,   309,   310,
     311,   312,   313,   314,     0,     0,     0,     0,     0,   315,
     301,   302,   303,   304,   305,  1944,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,     0,     0,     0,     0,
     315,   301,   302,   303,   304,   305,  1945,   306,   307,   308,
     309,   310,   311,   312,   313,   314,     0,     0,     0,     0,
       0,   315,   301,   302,   303,   304,   305,  1946,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,     0,     0,
       0,     0,   315,   301,   302,   303,   304,   305,  1947,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,   301,   302,   303,   304,   305,  1948,
     306,   307,   308,   309,   310,   311,   312,   313,   314,     0,
       0,     0,     0,     0,   315,   301,   302,   303,   304,   305,
    1949,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,     0,     0,     0,     0,   315,   301,   302,   303,   304,
     305,  1950,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,     0,     0,     0,     0,   315,   301,   302,   303,
     304,   305,  1951,   306,   307,   308,   309,   310,   311,   312,
     313,   314,     0,     0,     0,     0,     0,   315,   301,   302,
     303,   304,   305,  1952,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,   301,
     302,   303,   304,   305,  1953,   306,   307,   308,   309,   310,
     311,   312,   313,   314,     0,     0,     0,     0,     0,   315,
     301,   302,   303,   304,   305,  1954,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,     0,     0,     0,     0,
     315,   301,   302,   303,   304,   305,  1984,   306,   307,   308,
     309,   310,   311,   312,   313,   314,     0,     0,     0,     0,
       0,   315,   301,   302,   303,   304,   305,  1985,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,     0,     0,
       0,     0,   315,   301,   302,   303,   304,   305,  1986,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,   301,   302,   303,   304,   305,  1987,
     306,   307,   308,   309,   310,   311,   312,   313,   314,     0,
       0,     0,     0,     0,   315,   301,   302,   303,   304,   305,
    1988,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,     0,     0,     0,     0,   315,   301,   302,   303,   304,
     305,  1989,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,     0,     0,     0,     0,   315,   301,   302,   303,
     304,   305,  1990,   306,   307,   308,   309,   310,   311,   312,
     313,   314,     0,     0,     0,     0,     0,   315,   301,   302,
     303,   304,   305,  1991,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,   301,
     302,   303,   304,   305,  1992,   306,   307,   308,   309,   310,
     311,   312,   313,   314,     0,     0,     0,     0,     0,   315,
     301,   302,   303,   304,   305,  1993,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,     0,     0,     0,     0,
     315,   301,   302,   303,   304,   305,  1994,   306,   307,   308,
     309,   310,   311,   312,   313,   314,     0,     0,     0,     0,
       0,   315,   301,   302,   303,   304,   305,  1995,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,     0,     0,
       0,     0,   315,   301,   302,   303,   304,   305,  1996,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,   301,   302,   303,   304,   305,  1997,
     306,   307,   308,   309,   310,   311,   312,   313,   314,     0,
       0,     0,     0,     0,   315,   301,   302,   303,   304,   305,
    1998,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,     0,     0,     0,     0,   315,   301,   302,   303,   304,
     305,  2028,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,     0,     0,     0,     0,   315,   301,   302,   303,
     304,   305,  2029,   306,   307,   308,   309,   310,   311,   312,
     313,   314,     0,     0,     0,     0,     0,   315,   301,   302,
     303,   304,   305,  2030,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,   301,
     302,   303,   304,   305,  2031,   306,   307,   308,   309,   310,
     311,   312,   313,   314,     0,     0,     0,     0,     0,   315,
     301,   302,   303,   304,   305,  2032,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,     0,     0,     0,     0,
     315,   301,   302,   303,   304,   305,  2033,   306,   307,   308,
     309,   310,   311,   312,   313,   314,     0,     0,     0,     0,
       0,   315,   301,   302,   303,   304,   305,  2034,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,     0,     0,
       0,     0,   315,   301,   302,   303,   304,   305,  2035,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,   301,   302,   303,   304,   305,  2036,
     306,   307,   308,   309,   310,   311,   312,   313,   314,     0,
       0,     0,     0,     0,   315,   301,   302,   303,   304,   305,
    2059,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,     0,     0,     0,     0,   315,   301,   302,   303,   304,
     305,  2060,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,     0,     0,     0,     0,   315,   301,   302,   303,
     304,   305,  2061,   306,   307,   308,   309,   310,   311,   312,
     313,   314,     0,     0,     0,     0,     0,   315,   301,   302,
     303,   304,   305,  2062,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,   301,
     302,   303,   304,   305,  2063,   306,   307,   308,   309,   310,
     311,   312,   313,   314,     0,     0,     0,     0,     0,   315,
     301,   302,   303,   304,   305,  2064,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,     0,     0,     0,     0,
     315,   301,   302,   303,   304,   305,  2065,   306,   307,   308,
     309,   310,   311,   312,   313,   314,     0,     0,     0,     0,
       0,   315,   301,   302,   303,   304,   305,  2066,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,     0,     0,
       0,     0,   315,   301,   302,   303,   304,   305,  2067,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,   301,   302,   303,   304,   305,  2101,
     306,   307,   308,   309,   310,   311,   312,   313,   314,     0,
       0,     0,     0,     0,   315,   301,   302,   303,   304,   305,
    2102,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,     0,     0,     0,     0,   315,   301,   302,   303,   304,
     305,  2103,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,     0,     0,     0,     0,   315,   301,   302,   303,
     304,   305,  2104,   306,   307,   308,   309,   310,   311,   312,
     313,   314,     0,     0,     0,     0,     0,   315,   301,   302,
     303,   304,   305,  2105,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,   301,
     302,   303,   304,   305,  2106,   306,   307,   308,   309,   310,
     311,   312,   313,   314,     0,     0,     0,     0,     0,   315,
     301,   302,   303,   304,   305,  2107,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,     0,     0,     0,     0,
     315,   301,   302,   303,   304,   305,  2108,   306,   307,   308,
     309,   310,   311,   312,   313,   314,     0,     0,     0,     0,
       0,   315,   301,   302,   303,   304,   305,  2109,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,     0,     0,
       0,     0,   315,   301,   302,   303,   304,   305,  2131,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,   301,   302,   303,   304,   305,  2132,
     306,   307,   308,   309,   310,   311,   312,   313,   314,     0,
       0,     0,     0,     0,   315,   301,   302,   303,   304,   305,
    2133,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,     0,     0,     0,     0,   315,   301,   302,   303,   304,
     305,  2134,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,     0,     0,     0,     0,   315,   301,   302,   303,
     304,   305,  2135,   306,   307,   308,   309,   310,   311,   312,
     313,   314,     0,     0,     0,     0,     0,   315,   301,   302,
     303,   304,   305,  2136,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,   301,
     302,   303,   304,   305,  2149,   306,   307,   308,   309,   310,
     311,   312,   313,   314,     0,     0,     0,     0,     0,   315,
     301,   302,   303,   304,   305,  2150,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,     0,     0,     0,     0,
     315,   301,   302,   303,   304,   305,  2151,   306,   307,   308,
     309,   310,   311,   312,   313,   314,     0,     0,     0,     0,
       0,   315,   301,   302,   303,   304,   305,  2152,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,     0,     0,
       0,     0,   315,   301,   302,   303,   304,   305,  2153,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,   301,   302,   303,   304,   305,  2154,
     306,   307,   308,   309,   310,   311,   312,   313,   314,     0,
       0,     0,     0,     0,   315,   301,   302,   303,   304,   305,
    2170,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,     0,     0,     0,     0,   315,   301,   302,   303,   304,
     305,  2171,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,     0,     0,     0,     0,   315,   301,   302,   303,
     304,   305,  2172,   306,   307,   308,   309,   310,   311,   312,
     313,   314,     0,     0,     0,     0,     0,   315,   301,   302,
     303,   304,   305,  2173,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,   301,
     302,   303,   304,   305,  2174,   306,   307,   308,   309,   310,
     311,   312,   313,   314,     0,     0,     0,     0,     0,   315,
     301,   302,   303,   304,   305,  2175,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,     0,     0,     0,     0,
     315,   301,   302,   303,   304,   305,  2194,   306,   307,   308,
     309,   310,   311,   312,   313,   314,     0,     0,     0,     0,
       0,   315,   301,   302,   303,   304,   305,  2195,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,     0,     0,
       0,     0,   315,   301,   302,   303,   304,   305,  2196,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,   301,   302,   303,   304,   305,  2206,
     306,   307,   308,   309,   310,   311,   312,   313,   314,     0,
       0,     0,     0,     0,   315,   301,   302,   303,   304,   305,
    2207,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,     0,     0,     0,     0,   315,   301,   302,   303,   304,
     305,  2208,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,     0,     0,     0,     0,   315,   301,   302,   303,
     304,   305,  2221,   306,   307,   308,   309,   310,   311,   312,
     313,   314,     0,     0,     0,     0,     0,   315,   301,   302,
     303,   304,   305,  2222,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,   301,
     302,   303,   304,   305,  2223,   306,   307,   308,   309,   310,
     311,   312,   313,   314,     0,     0,     0,     0,     0,   315,
     301,   302,   303,   304,   305,  2239,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,     0,     0,     0,     0,
     315,   301,   302,   303,   304,   305,  2240,   306,   307,   308,
     309,   310,   311,   312,   313,   314,     0,     0,     0,     0,
       0,   315,   301,   302,   303,   304,   305,  2241,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,     0,     0,
       0,     0,   315,   301,   302,   303,   304,   305,  2245,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,   301,   302,   303,   304,   305,  2246,
     306,   307,   308,   309,   310,   311,   312,   313,   314,     0,
       0,     0,     0,     0,   315,   301,   302,   303,   304,   305,
    2247,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,     0,     0,     0,     0,   315,   301,   302,   303,   304,
     305,  2251,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,     0,     0,     0,     0,   315,   301,   302,   303,
     304,   305,  2252,   306,   307,   308,   309,   310,   311,   312,
     313,   314,     0,     0,     0,     0,     0,   315,   301,   302,
     303,   304,   305,  2253,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,     0,
       0,     0,   599,   301,   302,   303,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,     0,     0,     0,   656,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,     0,
       0,     0,   658,   301,   302,   303,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,     0,     0,     0,   660,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,     0,
       0,     0,   662,   301,   302,   303,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,     0,     0,     0,   664,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,     0,
       0,     0,   666,   301,   302,   303,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,     0,     0,     0,   668,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,     0,
       0,     0,   670,   301,   302,   303,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,     0,     0,     0,   672,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,     0,
       0,     0,   674,   301,   302,   303,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,     0,     0,     0,   676,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,     0,
       0,     0,   680,   301,   302,   303,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,     0,     0,     0,   682,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,     0,
       0,     0,   684,   301,   302,   303,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,     0,     0,     0,   686,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,     0,
       0,     0,   688,   301,   302,   303,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,     0,     0,     0,   690,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,     0,
       0,     0,   757,   301,   302,   303,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,     0,     0,     0,   762,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,     0,
       0,     0,   992,   301,   302,   303,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,     0,     0,     0,   994,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,     0,
       0,     0,   996,   301,   302,   303,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,     0,     0,     0,   998,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,     0,
       0,     0,   999,   301,   302,   303,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,     0,     0,     0,  1137,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,     0,
     497,   301,   302,   303,   304,   305,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,     0,     0,     0,     0,
       0,   315,     0,   498,   301,   302,   303,   304,   305,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,     0,
       0,     0,     0,     0,   315,     0,   499,   301,   302,   303,
     304,   305,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,     0,     0,     0,     0,     0,   315,     0,   501,
     301,   302,   303,   304,   305,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,     0,     0,     0,     0,
     315,     0,   503,   301,   302,   303,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,     0,   504,   301,   302,   303,   304,
     305,     0,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,     0,     0,     0,     0,   315,     0,   511,   301,
     302,   303,   304,   305,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,     0,     0,     0,     0,     0,   315,
       0,   551,   301,   302,   303,   304,   305,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,     0,     0,
       0,     0,   315,     0,   552,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,     0,     0,     0,     0,   315,     0,   555,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,     0,
     561,   301,   302,   303,   304,   305,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,     0,     0,     0,     0,
       0,   315,     0,   655,   301,   302,   303,   304,   305,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,     0,
       0,     0,     0,     0,   315,     0,   657,   301,   302,   303,
     304,   305,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,     0,     0,     0,     0,     0,   315,     0,   659,
     301,   302,   303,   304,   305,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,     0,     0,     0,     0,
     315,     0,   661,   301,   302,   303,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,     0,   663,   301,   302,   303,   304,
     305,     0,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,     0,     0,     0,     0,   315,     0,   665,   301,
     302,   303,   304,   305,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,     0,     0,     0,     0,     0,   315,
       0,   667,   301,   302,   303,   304,   305,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,     0,     0,
       0,     0,   315,     0,   669,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,     0,     0,     0,     0,   315,     0,   671,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,     0,
     673,   301,   302,   303,   304,   305,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,     0,     0,     0,     0,
       0,   315,     0,   675,   301,   302,   303,   304,   305,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,     0,
       0,     0,     0,     0,   315,     0,   679,   301,   302,   303,
     304,   305,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,     0,     0,     0,     0,     0,   315,     0,   681,
     301,   302,   303,   304,   305,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,     0,     0,     0,     0,
     315,     0,   683,   301,   302,   303,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,     0,   685,   301,   302,   303,   304,
     305,     0,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,     0,     0,     0,     0,   315,     0,   687,   301,
     302,   303,   304,   305,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,     0,     0,     0,     0,     0,   315,
       0,   689,   301,   302,   303,   304,   305,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,     0,     0,
       0,     0,   315,     0,   722,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,     0,     0,     0,     0,   315,     0,   724,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,     0,
     736,   301,   302,   303,   304,   305,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,     0,     0,     0,     0,
       0,   315,     0,   737,   301,   302,   303,   304,   305,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,     0,
       0,     0,     0,     0,   315,     0,   738,   301,   302,   303,
     304,   305,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,     0,     0,     0,     0,     0,   315,     0,   742,
     301,   302,   303,   304,   305,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,     0,     0,     0,     0,
     315,     0,   743,   301,   302,   303,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,     0,   744,   301,   302,   303,   304,
     305,     0,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,     0,     0,     0,     0,   315,     0,   745,   301,
     302,   303,   304,   305,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,     0,     0,     0,     0,     0,   315,
       0,   746,   301,   302,   303,   304,   305,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,     0,     0,
       0,     0,   315,     0,   768,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,     0,     0,     0,     0,   315,     0,   775,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,     0,
     991,   301,   302,   303,   304,   305,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,     0,     0,     0,     0,
       0,   315,     0,   993,   301,   302,   303,   304,   305,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,     0,
       0,     0,     0,     0,   315,     0,   995,   301,   302,   303,
     304,   305,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,     0,     0,     0,     0,     0,   315,     0,   997,
     301,   302,   303,   304,   305,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,     0,     0,     0,     0,
     315,     0,  1060,   301,   302,   303,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,     0,  1161,   301,   302,   303,   304,
     305,     0,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,     0,     0,     0,     0,   315,     0,  1189,   301,
     302,   303,   304,   305,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,     0,     0,     0,     0,     0,   315,
       0,  1292,   301,   302,   303,   304,   305,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,     0,     0,
       0,     0,   315,     0,  1296,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,     0,     0,     0,     0,   315,     0,  1298,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,     0,
    1416,   301,   302,   303,   304,   305,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,     0,     0,     0,     0,
       0,   315,     0,  1445,   301,   302,   303,   304,   305,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,     0,
       0,     0,     0,     0,   315,     0,  1447,   301,   302,   303,
     304,   305,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,     0,     0,     0,     0,     0,   315,     0,  1449,
     301,   302,   303,   304,   305,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,     0,     0,     0,     0,
     315,     0,  1451,   301,   302,   303,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,     0,  1452,   301,   302,   303,   304,
     305,     0,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,     0,     0,     0,     0,   315,     0,  1453,   301,
     302,   303,   304,   305,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,     0,     0,     0,     0,     0,   315,
       0,  1475,   301,   302,   303,   304,   305,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,     0,     0,
       0,     0,   315,     0,  1580,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,     0,     0,     0,     0,   315,     0,  1735,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,     0,
    1736,   301,   302,   303,   304,   305,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,     0,     0,     0,     0,
       0,   315,     0,  1737,   301,   302,   303,   304,   305,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,     0,
       0,     0,     0,     0,   315,     0,  1899,   301,   302,   303,
     304,   305,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,     0,     0,     0,     0,     0,   315,     0,  1900,
     301,   302,   303,   304,   305,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,     0,     0,     0,     0,
     315,     0,  1901,   301,   302,   303,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,     0,  2022,   301,   302,   303,   304,
     305,     0,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,     0,     0,     0,     0,   315,     0,  2023,   301,
     302,   303,   304,   305,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,     0,     0,     0,     0,     0,   315,
       0,  2024,   301,   302,   303,   304,   305,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,     0,     0,
       0,     0,   315,     0,  2025,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,     0,     0,     0,     0,   315,     0,  2026,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315,     0,
    2027,   301,   302,   303,   304,   305,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,     0,     0,     0,     0,
       0,   315,     0,  2137,   301,   302,   303,   304,   305,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,     0,
       0,     0,     0,     0,   315,     0,  2138,   301,   302,   303,
     304,   305,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,     0,     0,     0,     0,     0,   315,     0,  2139,
     301,   302,   303,   304,   305,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,     0,     0,     0,     0,
     315,     0,  2197,   301,   302,   303,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,     0,   315,     0,  2198,   301,   302,   303,   304,
     305,     0,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,     0,     0,     0,     0,   315,     0,  2199,   301,
     302,   303,   304,   305,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,     0,     0,     0,     0,     0,   315,
       0,  2257,   301,   302,   303,   304,   305,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,     0,     0,
       0,     0,   315,     0,  2258,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,     0,     0,     0,     0,   315,     0,  2259,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,     0,     0,     0,     0,   315
};

static const short yycheck[] =
{
      23,    23,    91,   354,   293,   295,     4,     4,   714,     4,
     328,     4,     4,     4,    42,     3,  1179,     3,   179,   285,
     286,   287,   183,    66,    66,    65,    65,     7,    71,    71,
    1348,     4,     7,    66,  1352,     4,    66,  1355,    71,   328,
      66,    71,   102,     6,     5,    71,     4,     5,    66,    66,
      65,    83,    66,    71,    71,  1078,  1270,    71,  1272,    38,
     184,   185,    41,    42,  1087,    66,   184,   185,   184,   185,
      71,  1094,   196,    34,    35,    36,    34,    35,    36,   184,
     185,   195,   200,   195,   202,   201,    49,   201,     6,   201,
       6,   184,   185,   184,   185,   200,     6,   202,   184,   185,
     184,   185,   195,   184,   185,   128,   129,   130,   201,   200,
     133,   134,    38,   136,   200,    41,   202,   201,   116,   200,
     143,   144,   145,  1286,   147,     7,   149,   150,   165,   152,
       7,     6,   105,   106,    66,   195,   105,   106,    38,    71,
       6,    41,    42,   195,    44,   197,   169,   170,   136,   137,
     138,   139,   140,   141,   142,   143,   195,   863,     6,   202,
     202,   201,   201,   184,   185,   188,   189,   195,   191,   202,
     193,   203,   202,   196,   197,   196,   202,   196,   496,     7,
     195,   200,     6,   473,   202,   202,   191,   192,   202,   507,
     170,   171,   172,   173,   199,   170,   171,   172,   173,   185,
       6,   202,   195,   201,   201,   195,   201,   496,   474,   201,
     201,   191,   192,   374,   195,   238,   191,   192,   507,   199,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,    44,    45,  1287,  1583,   184,   185,  1291,  1587,
     293,   195,  1590,   295,   184,   185,     6,     7,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   170,   171,   172,   173,   195,   321,   196,
     323,   191,   192,   200,   327,   328,  1012,   197,     6,   199,
     333,   334,   335,   336,   195,   338,   339,   340,   341,   342,
     343,   344,     8,   184,   185,  1539,    65,   196,  1542,    46,
    1544,   200,   195,   356,   357,   358,   359,   184,   185,   362,
     201,   195,   170,   171,   172,   173,   195,   370,   197,   184,
     185,   184,   185,   200,   191,   192,   379,   121,   122,   123,
     124,   125,  1680,   191,   192,   200,  1684,   200,  1686,   176,
     177,   178,   195,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   700,   195,   166,   196,   168,   194,   197,   200,
     199,   195,   174,   184,   185,   417,   177,   178,    42,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   196,   200,
     728,   700,   200,   194,    44,   704,  1439,  1440,  1441,  1442,
    1634,   184,   185,  1446,  1638,   195,  1640,   184,   185,   184,
     185,    59,    60,    61,    62,   701,    64,   200,    42,   728,
     758,   759,   760,   200,    42,   200,   469,   191,   192,    42,
     196,   473,   475,   197,   200,   199,     6,    56,    57,   241,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   758,
     759,   760,   201,   496,   194,   184,   185,   186,   187,   188,
      41,    42,   505,    44,   507,   194,   509,   510,   174,   175,
     176,   177,   178,   516,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   526,   527,    55,     6,     7,   194,   186,
     187,   188,   535,   191,   192,    42,   202,   194,   201,   197,
     195,   199,   197,   546,     6,   195,  1549,  1550,   195,   195,
    1553,   197,   195,   195,   557,   197,   559,   560,   195,   195,
     197,   197,   195,   195,   197,   197,   195,  1253,   197,   195,
     195,   197,   197,   195,   195,   197,   197,   195,   195,   197,
     197,   195,   880,   197,     6,   855,   856,     6,     4,   351,
     352,   195,   195,   197,   197,     4,   195,   599,   197,   195,
     200,   197,   202,   200,    42,   202,     3,     4,   200,     3,
     202,   880,     9,    10,    11,    12,    13,    14,    15,    16,
      17,    18,    19,    20,    21,    22,    23,    24,    25,    26,
      27,    28,    29,    30,    31,    32,   200,   200,   202,   202,
     200,  1644,   202,   195,   174,   175,   176,   177,   178,     5,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   195,
     200,   200,   202,   202,   194,   200,   200,   202,   202,   200,
       8,   202,     6,   195,   677,   678,   200,   200,   202,   202,
     200,   200,   202,   202,   200,   200,   202,   202,   691,   692,
     693,   694,   695,   696,   697,   195,     8,   700,   200,     6,
     202,   704,     5,   200,   707,   202,   200,   200,   202,   202,
     200,   195,   202,   716,   200,  1046,   202,   200,   200,   202,
     202,   200,   200,   202,   202,   728,   729,   200,   195,   202,
    1733,   200,   200,   202,   202,   200,   200,   202,   202,   200,
     809,   202,   200,   200,   202,   202,   200,   200,   202,   202,
     201,   195,   195,   195,   201,   758,   759,   760,  1004,   195,
     763,   764,   201,   525,   767,   195,     6,   195,   195,   195,
       4,     6,   201,   108,   199,   778,   779,   201,   201,   197,
     197,   201,     6,   195,   195,   195,     5,   184,   185,   195,
     195,  1794,   195,   190,   195,   195,  1042,   195,   195,   195,
     195,   198,   195,   195,   201,   195,   195,     6,   195,   195,
     813,   814,   815,   816,   817,   818,   819,   820,   821,   822,
     823,   824,   825,   826,   827,   828,   829,   830,   831,   832,
     833,   834,   835,   836,   837,   838,   174,   175,   176,   177,
     178,   195,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   195,   195,   195,   856,   195,   194,   196,   196,   195,
       4,   864,   174,   175,   176,   177,   178,   195,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   880,   195,   882,
     195,   884,   194,     7,   195,   195,   195,   195,     7,   195,
     194,     7,     7,     7,   196,   200,   899,   900,   901,   200,
     199,     7,   103,   105,   201,   166,     5,     5,     5,     5,
       5,     5,     5,   925,     5,     5,     5,   920,   921,   922,
       5,     5,     5,     5,     5,     5,     5,     5,     5,     5,
       5,     5,     5,  1264,   174,   175,   176,   177,   178,   154,
     180,   181,   182,   183,   184,   185,   186,   187,   188,     5,
       5,     5,     5,     3,   194,     6,     5,   719,     6,     5,
       5,   963,   200,   196,     6,     4,     6,   199,   195,     7,
       7,     7,     7,     7,  1977,   174,   175,   176,   177,   178,
       7,   180,   181,   182,   183,   184,   185,   186,   187,   188,
       7,   202,   754,   755,   756,   194,   202,     8,   201,     7,
       7,   201,  1005,   174,   175,   176,   177,   178,     7,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   780,   199,
     167,   200,   200,   194,   200,   196,   200,   789,  1031,  1032,
    1033,  1100,   200,   200,   200,   200,   200,   200,   200,  1042,
     200,   200,   200,   200,   200,   200,   200,   200,   200,   200,
     200,   200,   200,  1056,  1057,   200,     5,  1069,   200,   200,
     200,   200,   200,   196,   200,  1068,   195,   195,  1071,   195,
     195,     6,     6,   195,   195,   195,     4,   195,  1081,     6,
       6,   198,   195,   195,   195,  1088,  1089,  1090,   195,     6,
     195,   195,  1095,   195,   195,   195,  1099,     7,     6,     4,
    1103,  1104,  1105,  1106,  1107,  1108,  1109,  1110,  1111,  1112,
    1113,  1114,  1115,  1116,  1117,  1118,  1119,  1120,  1121,  1122,
    1123,  1124,  1125,  1126,  1127,  1128,   174,   175,   176,   177,
     178,   195,   180,   181,   182,   183,   184,   185,   186,   187,
     188,  1144,     7,   195,     7,     7,   194,     7,   195,     7,
       7,   195,   195,     7,   195,     7,     7,     7,     7,  1162,
       7,     7,   195,   174,   175,   176,   177,   178,   197,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   201,  1191,
       3,     4,  1185,   194,  1187,   195,     9,    10,    11,    12,
      13,    14,    15,    16,    17,    18,    19,    20,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
       3,     4,   195,     7,     6,     6,     9,    10,    11,    12,
      13,    14,    15,    16,    17,    18,    19,    20,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
     174,   175,   176,   177,   178,     4,   180,   181,   182,   183,
     184,   185,   186,   187,   188,  1017,  1259,     7,     3,   163,
     194,     3,     3,   186,  1267,     3,  1269,     3,  1271,     3,
    1273,  1274,     3,     3,     3,     3,     3,  1280,     3,     3,
       3,   196,   196,     5,     5,  1047,  1289,  1049,     3,  1051,
       3,     7,     6,     4,  1297,   195,   199,     6,     6,  1302,
       6,     6,  1305,     6,  1307,  1308,  1309,  1310,  1311,  1312,
    1313,  1314,  1315,  1316,  1317,  1318,  1319,  1320,  1321,  1322,
    1323,  1324,  1325,  1326,  1327,  1328,  1329,  1330,  1331,  1332,
     201,     6,     6,  1579,   104,   201,  1339,     6,  1341,  1342,
    1343,   200,     6,   196,   200,   200,     4,     6,   196,     6,
       6,     6,   196,  1365,     6,   200,   196,   200,   200,   200,
     196,   184,   185,   200,     6,   200,   200,   190,   200,   200,
     200,   196,   195,   200,   200,   198,   200,   196,   201,   200,
     200,     6,   200,   200,   199,   198,     6,     6,     6,     6,
       6,   184,   185,     6,     6,     6,     6,   190,     6,     6,
       6,     3,   195,     7,   104,   198,     6,     3,   201,     6,
     186,     6,     6,     3,     6,     3,     7,     6,  1421,     6,
       3,     6,     3,     3,  1427,     3,  1438,  1430,   199,  1675,
       6,  1677,     4,     6,   198,     6,     6,     6,   201,   201,
       6,   202,   196,   201,   201,   201,   106,   101,   200,   200,
     196,  1454,  1455,  1456,  1457,  1458,  1459,  1460,  1461,  1462,
    1463,  1464,  1465,  1466,  1467,  1468,  1469,  1470,  1471,  1472,
    1473,  1474,   104,  1476,   200,   163,     6,     3,   196,   196,
     200,   200,     6,     6,   196,     3,  1498,     6,   174,   175,
     176,   177,   178,   200,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   196,   200,  1267,   196,  1269,   194,  1271,
    1756,     3,     4,   200,   200,   196,   202,     9,    10,    11,
      12,    13,    14,    15,    16,    17,    18,    19,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
      32,     6,     6,     6,     6,     6,     3,     6,     6,     5,
       5,   202,  1555,  1556,  1557,  1558,  1559,  1560,  1561,  1562,
    1563,  1564,  1565,  1566,  1567,  1568,  1569,  1570,  1571,  1572,
    1573,  1574,  1575,  1576,  1577,  1578,     6,   201,     3,     4,
    1342,   202,   196,  1595,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,   174,   175,
     176,   177,   178,     6,   180,   181,   182,   183,   184,   185,
     186,   187,   188,     6,   201,   200,   200,     6,   194,     6,
       6,  1643,   200,   200,   196,   200,   196,   200,     6,  1642,
       6,   200,     6,     6,     6,  1648,     6,  1650,     6,  1652,
       6,  1654,  1655,  1656,  1657,  1658,  1659,  1660,  1661,  1662,
    1663,  1664,  1665,  1666,  1667,  1668,  1669,  1670,  1671,  1672,
    1673,  1674,     6,     6,     6,     5,     5,  1689,     6,   201,
     200,   202,   151,     6,   201,   201,   200,   200,   157,   200,
     196,   196,   184,   185,   201,     6,   200,   200,   190,   201,
       6,   201,   201,   195,   200,     6,   101,     6,     6,   201,
     163,   180,     5,     5,   201,   201,   201,   186,   187,   202,
     201,   200,   200,   196,   196,   201,     6,  1730,  1731,     6,
       6,   202,     6,     6,   101,  1738,  1739,  1740,  1741,  1742,
    1743,  1744,  1745,  1746,  1747,  1748,  1749,  1750,  1751,  1752,
    1753,  1754,  1755,     6,     6,     6,     6,     6,     6,   184,
     185,   202,   201,   200,   200,   190,     6,     6,     6,     6,
     195,   168,     6,   169,   200,     6,   201,   200,     6,   201,
     201,   201,   200,   196,     6,     6,     6,  1790,     6,     6,
     200,   200,  1795,  1796,  1797,  1798,  1799,  1800,  1801,  1802,
    1803,  1804,  1805,  1806,  1807,  1808,  1809,  1810,  1811,  1812,
    1813,  1814,  1815,   201,   174,   175,   176,   177,   178,   201,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   201,
     200,     6,     6,     6,   194,     6,     6,   196,     6,     6,
     201,     6,     6,     6,  1847,     6,  1849,   201,  1851,   201,
    1853,  1854,  1855,  1856,  1857,  1858,  1859,  1860,  1861,  1862,
    1863,  1864,  1865,  1866,  1867,  1868,  1869,  1870,   174,   175,
     176,   177,   178,     6,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   201,   201,   201,   201,   201,   194,   201,
       6,     6,   201,   201,   201,     6,     6,     6,     6,  1902,
    1903,  1904,  1905,  1906,  1907,  1908,  1909,  1910,  1911,  1912,
    1913,  1914,  1915,  1916,   201,   201,   201,     6,     6,     6,
       0,     0,   601,     7,     7,     7,    -1,  1062,    -1,    -1,
      -1,    -1,    -1,    -1,  1937,  1938,  1939,  1940,  1941,  1942,
    1943,  1944,  1945,  1946,  1947,  1948,  1949,  1950,  1951,  1952,
    1953,  1954,   174,   175,   176,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,   188,    -1,    -1,    -1,
      -1,    -1,   194,    -1,    -1,  1978,  1008,  1980,    -1,  1982,
      -1,  1984,  1985,  1986,  1987,  1988,  1989,  1990,  1991,  1992,
    1993,  1994,  1995,  1996,  1997,  1998,    -1,    -1,    -1,   468,
     174,   175,   176,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,
     194,    -1,    -1,    -1,    -1,  2028,  2029,  2030,  2031,  2032,
    2033,  2034,  2035,  2036,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2053,  2054,  2055,  2056,  2057,  2058,  2059,  2060,  2061,  2062,
    2063,  2064,  2065,  2066,  2067,   174,   175,   176,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,   188,
      -1,    -1,    -1,    -1,    -1,   194,  2089,    -1,  2091,    -1,
    2093,    -1,  2095,    -1,  2097,    -1,  2099,    -1,  2101,  2102,
    2103,  2104,  2105,  2106,  2107,  2108,  2109,     6,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2131,  2132,
    2133,  2134,  2135,  2136,    -1,     8,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2149,  2150,  2151,  2152,
    2153,  2154,  2155,  2156,  2157,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2170,  2171,  2172,
    2173,  2174,  2175,  2176,    -1,  2178,    -1,  2180,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2194,  2195,  2196,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2206,  2207,  2208,  2209,  2210,  2211,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2221,  2222,
    2223,  2224,    -1,  2226,    -1,  2228,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2239,  2240,  2241,    -1,
      -1,    -1,  2245,  2246,  2247,    -1,    -1,    -1,  2251,  2252,
    2253,   720,   721,    -1,   723,    -1,   725,   726,    -1,    -1,
    2263,  2264,  2265,    -1,    -1,    -1,    -1,    -1,    -1,  2272,
      -1,  2274,    -1,  2276,    -1,   174,   175,   176,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,   188,
      -1,    -1,    -1,    -1,    -1,   194,   765,   766,    -1,    -1,
     769,   174,   175,   176,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,   188,    -1,   786,   787,    -1,
      -1,   194,    -1,   792,   793,    -1,    -1,     3,     4,    -1,
     799,    -1,   801,     9,    10,    11,    12,    13,    14,    15,
      16,    17,    18,    19,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    31,    32,    -1,    -1,     3,
       4,     5,    -1,     7,    -1,     9,    10,    11,    12,    13,
      14,    15,    16,    17,    18,    19,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    32,    -1,
      34,    35,    36,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   873,    -1,   875,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   885,   886,   887,    -1,
      -1,    -1,   891,   892,   893,   894,   895,   896,   897,     3,
       4,     5,    -1,    -1,    -1,     9,    10,    11,    12,    13,
      14,    15,    16,    17,    18,    19,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    32,    -1,
      34,    35,    36,     3,     4,    -1,    -1,    -1,    -1,     9,
      10,    11,    12,    13,    14,    15,    16,    17,    18,    19,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,   174,   175,   176,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   184,   185,
      -1,    -1,    -1,   194,   190,     8,    -1,    -1,    -1,   195,
      -1,   202,    -1,    -1,    -1,   201,   170,   171,   172,   173,
       8,    -1,    -1,    -1,  1003,    -1,    -1,    -1,    -1,    -1,
     184,   185,    -1,    -1,    -1,    -1,   190,   191,   192,    -1,
      -1,   195,    -1,   197,    -1,   199,     3,     4,    -1,    -1,
      -1,    -1,     9,    10,    11,    12,    13,    14,    15,    16,
      17,    18,    19,    20,    21,    22,    23,    24,    25,    26,
      27,    28,    29,    30,    31,    32,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1064,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1072,    -1,    -1,    -1,    -1,    -1,    -1,
     184,   185,    -1,    -1,    -1,    -1,   190,    -1,    -1,    -1,
      -1,   195,  1091,    -1,    -1,    -1,    -1,    -1,   174,   175,
     176,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,   184,   185,    -1,    -1,   194,    -1,
     190,     3,     4,    -1,   200,   195,   202,     9,    10,    11,
      12,    13,    14,    15,    16,    17,    18,    19,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
      32,   174,   175,   176,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   174,   175,   176,   177,
     178,   194,   180,   181,   182,   183,   184,   185,   186,   187,
     188,    -1,    -1,    -1,    -1,    -1,   194,    -1,    -1,    -1,
      38,    39,    40,    41,    42,    43,    44,    45,    -1,    47,
      -1,    49,    50,    51,    -1,    53,    54,   184,   185,    -1,
      -1,    -1,    -1,   190,    -1,    -1,    -1,    -1,   195,    -1,
      -1,    -1,    70,    -1,    -1,    -1,    38,    39,    40,    41,
      42,    43,    44,    45,    -1,    47,    -1,    49,    50,    51,
      -1,    53,    54,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      98,    99,   100,   174,   175,   176,   177,   178,    70,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,   117,
      -1,    -1,    -1,   194,    -1,    -1,    -1,    -1,  1277,   200,
    1279,   202,    -1,    -1,  1283,    -1,    98,    99,   100,     0,
       1,    -1,     3,     4,    -1,    -1,    -1,    -1,    -1,    -1,
    1299,    -1,   184,   185,    -1,   117,    -1,    -1,   190,    -1,
      -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    -1,    -1,    -1,    37,    38,    39,    40,
      41,    42,    43,    44,    45,    -1,    47,    48,    49,    50,
      51,    52,    53,    54,    -1,    -1,    -1,    58,    59,    60,
      61,    62,    63,    64,   202,    66,    67,    68,    69,    70,
      38,    39,    40,    41,    42,    43,    44,    45,    -1,    47,
      -1,    49,    50,    51,    -1,    53,    54,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    98,    99,   100,
     202,    -1,    70,    -1,   105,    -1,   107,    -1,   109,   110,
     111,   112,   113,   114,   115,    -1,   117,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1416,    -1,    -1,
      98,    99,   100,    -1,  1423,   136,   137,   138,   139,   140,
     141,   142,   143,    -1,    -1,  1434,  1435,    -1,    -1,   117,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     161,   162,    -1,   164,   174,   175,   176,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,   188,    -1,
      -1,    -1,    -1,    -1,   194,    -1,    -1,    -1,   198,  1478,
      72,    73,    74,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    86,    87,    88,    89,    90,    91,
      92,    93,    94,    95,    96,    97,    -1,    -1,    41,   174,
     175,   176,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   202,    -1,    -1,    -1,    -1,   194,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   202,    -1,    -1,
      -1,    -1,  1541,    -1,    -1,    -1,    -1,  1546,    72,    73,
      74,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    86,    87,    88,    89,    90,    91,    92,    93,
      94,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   118,   119,   120,    -1,    -1,
      -1,    -1,    -1,   126,   127,   128,   129,   130,   131,   132,
     133,   134,   135,    -1,     4,    -1,    -1,    -1,    -1,    -1,
     202,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,    -1,   155,   156,   157,   158,   159,   160,    -1,    -1,
      -1,    -1,    -1,    33,    -1,    -1,  1635,    37,    38,    39,
      40,    41,    42,    43,    44,    45,  1645,    47,    48,    49,
      50,    51,    52,    53,    54,    -1,    -1,    -1,    58,    59,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      70,    -1,    -1,   174,   175,   176,   177,   178,   202,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,    -1,    -1,    -1,    -1,    98,    99,
     100,   202,    -1,    -1,    -1,   105,    -1,   107,    -1,   109,
     110,   111,   112,   113,   114,   115,    -1,   117,    38,    39,
      40,    41,    42,    43,    44,    45,    -1,    47,    -1,    49,
      50,    51,    -1,    53,    54,  1734,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   174,   175,   176,   177,   178,
      70,   180,   181,   182,   183,   184,   185,   186,   187,   188,
      -1,    -1,    -1,    -1,    -1,   194,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   202,    -1,    -1,    -1,    -1,    98,    99,
     100,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1793,    -1,    -1,   117,   174,   175,
     176,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,    -1,
      -1,   174,   175,   176,   177,   178,   202,   180,   181,   182,
     183,   184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,
      -1,   194,    -1,    -1,    -1,    -1,  1845,    -1,    -1,   202,
     174,   175,   176,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,
     194,    -1,    -1,   174,   175,   176,   177,   178,   202,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,    -1,    -1,    -1,    -1,    -1,  1898,
      -1,   202,   174,   175,   176,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,   188,    -1,    -1,    -1,
      -1,    -1,   194,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     202,    -1,   174,   175,   176,   177,   178,  1936,   180,   181,
     182,   183,   184,   185,   186,   187,   188,    -1,    -1,    -1,
      -1,    -1,   194,    -1,    -1,   174,   175,   176,   177,   178,
     202,   180,   181,   182,   183,   184,   185,   186,   187,   188,
      -1,    -1,    -1,    -1,    -1,   194,    -1,    -1,   174,   175,
     176,   177,   178,   202,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,    -1,
      -1,   174,   175,   176,   177,   178,   202,   180,   181,   182,
     183,   184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,
      -1,   194,    -1,    -1,   174,   175,   176,   177,   178,   202,
     180,   181,   182,   183,   184,   185,   186,   187,   188,    -1,
      -1,    -1,    -1,    -1,   194,    -1,    -1,   174,   175,   176,
     177,   178,   202,   180,   181,   182,   183,   184,   185,   186,
     187,   188,    -1,    -1,    -1,    -1,    -1,   194,    -1,    -1,
     174,   175,   176,   177,   178,   202,   180,   181,   182,   183,
     184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,
     194,    -1,    -1,   174,   175,   176,   177,   178,   202,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,    -1,    -1,   174,   175,   176,   177,
     178,   202,   180,   181,   182,   183,   184,   185,   186,   187,
     188,    -1,    -1,    -1,    -1,    -1,   194,    -1,    -1,   174,
     175,   176,   177,   178,   202,   180,   181,   182,   183,   184,
     185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,
      -1,   196,    -1,    -1,    -1,   200,   174,   175,   176,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
     188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,
     177,   178,   200,   180,   181,   182,   183,   184,   185,   186,
     187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,
     176,   177,   178,   200,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,
     175,   176,   177,   178,   200,   180,   181,   182,   183,   184,
     185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,
     174,   175,   176,   177,   178,   200,   180,   181,   182,   183,
     184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,
     194,   174,   175,   176,   177,   178,   200,   180,   181,   182,
     183,   184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,
      -1,   194,   174,   175,   176,   177,   178,   200,   180,   181,
     182,   183,   184,   185,   186,   187,   188,    -1,    -1,    -1,
      -1,    -1,   194,   174,   175,   176,   177,   178,   200,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,   174,   175,   176,   177,   178,   200,
     180,   181,   182,   183,   184,   185,   186,   187,   188,    -1,
      -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,   178,
     200,   180,   181,   182,   183,   184,   185,   186,   187,   188,
      -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,
     178,   200,   180,   181,   182,   183,   184,   185,   186,   187,
     188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,
     177,   178,   200,   180,   181,   182,   183,   184,   185,   186,
     187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,
     176,   177,   178,   200,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,
     175,   176,   177,   178,   200,   180,   181,   182,   183,   184,
     185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,
     174,   175,   176,   177,   178,   200,   180,   181,   182,   183,
     184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,
     194,   174,   175,   176,   177,   178,   200,   180,   181,   182,
     183,   184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,
      -1,   194,   174,   175,   176,   177,   178,   200,   180,   181,
     182,   183,   184,   185,   186,   187,   188,    -1,    -1,    -1,
      -1,    -1,   194,   174,   175,   176,   177,   178,   200,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,   174,   175,   176,   177,   178,   200,
     180,   181,   182,   183,   184,   185,   186,   187,   188,    -1,
      -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,   178,
     200,   180,   181,   182,   183,   184,   185,   186,   187,   188,
      -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,
     178,   200,   180,   181,   182,   183,   184,   185,   186,   187,
     188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,
     177,   178,   200,   180,   181,   182,   183,   184,   185,   186,
     187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,
     176,   177,   178,   200,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,
     175,   176,   177,   178,   200,   180,   181,   182,   183,   184,
     185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,
     174,   175,   176,   177,   178,   200,   180,   181,   182,   183,
     184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,
     194,   174,   175,   176,   177,   178,   200,   180,   181,   182,
     183,   184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,
      -1,   194,   174,   175,   176,   177,   178,   200,   180,   181,
     182,   183,   184,   185,   186,   187,   188,    -1,    -1,    -1,
      -1,    -1,   194,   174,   175,   176,   177,   178,   200,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,   174,   175,   176,   177,   178,   200,
     180,   181,   182,   183,   184,   185,   186,   187,   188,    -1,
      -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,   178,
     200,   180,   181,   182,   183,   184,   185,   186,   187,   188,
      -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,
     178,   200,   180,   181,   182,   183,   184,   185,   186,   187,
     188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,
     177,   178,   200,   180,   181,   182,   183,   184,   185,   186,
     187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,
     176,   177,   178,   200,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,
     175,   176,   177,   178,   200,   180,   181,   182,   183,   184,
     185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,
     174,   175,   176,   177,   178,   200,   180,   181,   182,   183,
     184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,
     194,   174,   175,   176,   177,   178,   200,   180,   181,   182,
     183,   184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,
      -1,   194,   174,   175,   176,   177,   178,   200,   180,   181,
     182,   183,   184,   185,   186,   187,   188,    -1,    -1,    -1,
      -1,    -1,   194,   174,   175,   176,   177,   178,   200,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,   174,   175,   176,   177,   178,   200,
     180,   181,   182,   183,   184,   185,   186,   187,   188,    -1,
      -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,   178,
     200,   180,   181,   182,   183,   184,   185,   186,   187,   188,
      -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,
     178,   200,   180,   181,   182,   183,   184,   185,   186,   187,
     188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,
     177,   178,   200,   180,   181,   182,   183,   184,   185,   186,
     187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,
     176,   177,   178,   200,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,
     175,   176,   177,   178,   200,   180,   181,   182,   183,   184,
     185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,
     174,   175,   176,   177,   178,   200,   180,   181,   182,   183,
     184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,
     194,   174,   175,   176,   177,   178,   200,   180,   181,   182,
     183,   184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,
      -1,   194,   174,   175,   176,   177,   178,   200,   180,   181,
     182,   183,   184,   185,   186,   187,   188,    -1,    -1,    -1,
      -1,    -1,   194,   174,   175,   176,   177,   178,   200,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,   174,   175,   176,   177,   178,   200,
     180,   181,   182,   183,   184,   185,   186,   187,   188,    -1,
      -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,   178,
     200,   180,   181,   182,   183,   184,   185,   186,   187,   188,
      -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,
     178,   200,   180,   181,   182,   183,   184,   185,   186,   187,
     188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,
     177,   178,   200,   180,   181,   182,   183,   184,   185,   186,
     187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,
     176,   177,   178,   200,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,
     175,   176,   177,   178,   200,   180,   181,   182,   183,   184,
     185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,
     174,   175,   176,   177,   178,   200,   180,   181,   182,   183,
     184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,
     194,   174,   175,   176,   177,   178,   200,   180,   181,   182,
     183,   184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,
      -1,   194,   174,   175,   176,   177,   178,   200,   180,   181,
     182,   183,   184,   185,   186,   187,   188,    -1,    -1,    -1,
      -1,    -1,   194,   174,   175,   176,   177,   178,   200,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,   174,   175,   176,   177,   178,   200,
     180,   181,   182,   183,   184,   185,   186,   187,   188,    -1,
      -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,   178,
     200,   180,   181,   182,   183,   184,   185,   186,   187,   188,
      -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,
     178,   200,   180,   181,   182,   183,   184,   185,   186,   187,
     188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,
     177,   178,   200,   180,   181,   182,   183,   184,   185,   186,
     187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,
     176,   177,   178,   200,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,
     175,   176,   177,   178,   200,   180,   181,   182,   183,   184,
     185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,
     174,   175,   176,   177,   178,   200,   180,   181,   182,   183,
     184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,
     194,   174,   175,   176,   177,   178,   200,   180,   181,   182,
     183,   184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,
      -1,   194,   174,   175,   176,   177,   178,   200,   180,   181,
     182,   183,   184,   185,   186,   187,   188,    -1,    -1,    -1,
      -1,    -1,   194,   174,   175,   176,   177,   178,   200,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,   174,   175,   176,   177,   178,   200,
     180,   181,   182,   183,   184,   185,   186,   187,   188,    -1,
      -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,   178,
     200,   180,   181,   182,   183,   184,   185,   186,   187,   188,
      -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,
     178,   200,   180,   181,   182,   183,   184,   185,   186,   187,
     188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,
     177,   178,   200,   180,   181,   182,   183,   184,   185,   186,
     187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,
     176,   177,   178,   200,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,
     175,   176,   177,   178,   200,   180,   181,   182,   183,   184,
     185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,
     174,   175,   176,   177,   178,   200,   180,   181,   182,   183,
     184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,
     194,   174,   175,   176,   177,   178,   200,   180,   181,   182,
     183,   184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,
      -1,   194,   174,   175,   176,   177,   178,   200,   180,   181,
     182,   183,   184,   185,   186,   187,   188,    -1,    -1,    -1,
      -1,    -1,   194,   174,   175,   176,   177,   178,   200,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,   174,   175,   176,   177,   178,   200,
     180,   181,   182,   183,   184,   185,   186,   187,   188,    -1,
      -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,   178,
     200,   180,   181,   182,   183,   184,   185,   186,   187,   188,
      -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,
     178,   200,   180,   181,   182,   183,   184,   185,   186,   187,
     188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,
     177,   178,   200,   180,   181,   182,   183,   184,   185,   186,
     187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,
     176,   177,   178,   200,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,
     175,   176,   177,   178,   200,   180,   181,   182,   183,   184,
     185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,
     174,   175,   176,   177,   178,   200,   180,   181,   182,   183,
     184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,
     194,   174,   175,   176,   177,   178,   200,   180,   181,   182,
     183,   184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,
      -1,   194,   174,   175,   176,   177,   178,   200,   180,   181,
     182,   183,   184,   185,   186,   187,   188,    -1,    -1,    -1,
      -1,    -1,   194,   174,   175,   176,   177,   178,   200,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,   174,   175,   176,   177,   178,   200,
     180,   181,   182,   183,   184,   185,   186,   187,   188,    -1,
      -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,   178,
     200,   180,   181,   182,   183,   184,   185,   186,   187,   188,
      -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,
     178,   200,   180,   181,   182,   183,   184,   185,   186,   187,
     188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,
     177,   178,   200,   180,   181,   182,   183,   184,   185,   186,
     187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,
     176,   177,   178,   200,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,
     175,   176,   177,   178,   200,   180,   181,   182,   183,   184,
     185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,
     174,   175,   176,   177,   178,   200,   180,   181,   182,   183,
     184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,
     194,   174,   175,   176,   177,   178,   200,   180,   181,   182,
     183,   184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,
      -1,   194,   174,   175,   176,   177,   178,   200,   180,   181,
     182,   183,   184,   185,   186,   187,   188,    -1,    -1,    -1,
      -1,    -1,   194,   174,   175,   176,   177,   178,   200,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,   174,   175,   176,   177,   178,   200,
     180,   181,   182,   183,   184,   185,   186,   187,   188,    -1,
      -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,   178,
     200,   180,   181,   182,   183,   184,   185,   186,   187,   188,
      -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,
     178,   200,   180,   181,   182,   183,   184,   185,   186,   187,
     188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,
     177,   178,   200,   180,   181,   182,   183,   184,   185,   186,
     187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,
     176,   177,   178,   200,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,
     175,   176,   177,   178,   200,   180,   181,   182,   183,   184,
     185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,
     174,   175,   176,   177,   178,   200,   180,   181,   182,   183,
     184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,
     194,   174,   175,   176,   177,   178,   200,   180,   181,   182,
     183,   184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,
      -1,   194,   174,   175,   176,   177,   178,   200,   180,   181,
     182,   183,   184,   185,   186,   187,   188,    -1,    -1,    -1,
      -1,    -1,   194,   174,   175,   176,   177,   178,   200,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,   174,   175,   176,   177,   178,   200,
     180,   181,   182,   183,   184,   185,   186,   187,   188,    -1,
      -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,   178,
     200,   180,   181,   182,   183,   184,   185,   186,   187,   188,
      -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,
     178,   200,   180,   181,   182,   183,   184,   185,   186,   187,
     188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,
     177,   178,   200,   180,   181,   182,   183,   184,   185,   186,
     187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,
     176,   177,   178,   200,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,
     175,   176,   177,   178,   200,   180,   181,   182,   183,   184,
     185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,
     174,   175,   176,   177,   178,   200,   180,   181,   182,   183,
     184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,
     194,   174,   175,   176,   177,   178,   200,   180,   181,   182,
     183,   184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,
      -1,   194,   174,   175,   176,   177,   178,   200,   180,   181,
     182,   183,   184,   185,   186,   187,   188,    -1,    -1,    -1,
      -1,    -1,   194,   174,   175,   176,   177,   178,   200,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,   174,   175,   176,   177,   178,   200,
     180,   181,   182,   183,   184,   185,   186,   187,   188,    -1,
      -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,   178,
     200,   180,   181,   182,   183,   184,   185,   186,   187,   188,
      -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,
     178,   200,   180,   181,   182,   183,   184,   185,   186,   187,
     188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,
     177,   178,   200,   180,   181,   182,   183,   184,   185,   186,
     187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,
     176,   177,   178,   200,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,
     175,   176,   177,   178,   200,   180,   181,   182,   183,   184,
     185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,
     174,   175,   176,   177,   178,   200,   180,   181,   182,   183,
     184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,
     194,   174,   175,   176,   177,   178,   200,   180,   181,   182,
     183,   184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,
      -1,   194,   174,   175,   176,   177,   178,   200,   180,   181,
     182,   183,   184,   185,   186,   187,   188,    -1,    -1,    -1,
      -1,    -1,   194,   174,   175,   176,   177,   178,   200,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,   174,   175,   176,   177,   178,   200,
     180,   181,   182,   183,   184,   185,   186,   187,   188,    -1,
      -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,   178,
     200,   180,   181,   182,   183,   184,   185,   186,   187,   188,
      -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,
     178,   200,   180,   181,   182,   183,   184,   185,   186,   187,
     188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,
     177,   178,   200,   180,   181,   182,   183,   184,   185,   186,
     187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,
     176,   177,   178,   200,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,
     175,   176,   177,   178,   200,   180,   181,   182,   183,   184,
     185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,
     174,   175,   176,   177,   178,   200,   180,   181,   182,   183,
     184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,
     194,   174,   175,   176,   177,   178,   200,   180,   181,   182,
     183,   184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,
      -1,   194,   174,   175,   176,   177,   178,   200,   180,   181,
     182,   183,   184,   185,   186,   187,   188,    -1,    -1,    -1,
      -1,    -1,   194,   174,   175,   176,   177,   178,   200,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,   174,   175,   176,   177,   178,   200,
     180,   181,   182,   183,   184,   185,   186,   187,   188,    -1,
      -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,   178,
     200,   180,   181,   182,   183,   184,   185,   186,   187,   188,
      -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,
     178,   200,   180,   181,   182,   183,   184,   185,   186,   187,
     188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,
     177,   178,   200,   180,   181,   182,   183,   184,   185,   186,
     187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,
     176,   177,   178,   200,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,
     175,   176,   177,   178,   200,   180,   181,   182,   183,   184,
     185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,
     174,   175,   176,   177,   178,   200,   180,   181,   182,   183,
     184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,
     194,   174,   175,   176,   177,   178,   200,   180,   181,   182,
     183,   184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,
      -1,   194,   174,   175,   176,   177,   178,   200,   180,   181,
     182,   183,   184,   185,   186,   187,   188,    -1,    -1,    -1,
      -1,    -1,   194,   174,   175,   176,   177,   178,   200,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,   174,   175,   176,   177,   178,   200,
     180,   181,   182,   183,   184,   185,   186,   187,   188,    -1,
      -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,   178,
     200,   180,   181,   182,   183,   184,   185,   186,   187,   188,
      -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,
     178,   200,   180,   181,   182,   183,   184,   185,   186,   187,
     188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,
     177,   178,   200,   180,   181,   182,   183,   184,   185,   186,
     187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,
     176,   177,   178,   200,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,
     175,   176,   177,   178,   200,   180,   181,   182,   183,   184,
     185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,
     174,   175,   176,   177,   178,   200,   180,   181,   182,   183,
     184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,
     194,   174,   175,   176,   177,   178,   200,   180,   181,   182,
     183,   184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,
      -1,   194,   174,   175,   176,   177,   178,   200,   180,   181,
     182,   183,   184,   185,   186,   187,   188,    -1,    -1,    -1,
      -1,    -1,   194,   174,   175,   176,   177,   178,   200,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,   174,   175,   176,   177,   178,   200,
     180,   181,   182,   183,   184,   185,   186,   187,   188,    -1,
      -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,   178,
     200,   180,   181,   182,   183,   184,   185,   186,   187,   188,
      -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,
     178,   200,   180,   181,   182,   183,   184,   185,   186,   187,
     188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,
     177,   178,   200,   180,   181,   182,   183,   184,   185,   186,
     187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,
     176,   177,   178,   200,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,
     175,   176,   177,   178,   200,   180,   181,   182,   183,   184,
     185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,
     174,   175,   176,   177,   178,   200,   180,   181,   182,   183,
     184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,
     194,   174,   175,   176,   177,   178,   200,   180,   181,   182,
     183,   184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,
      -1,   194,   174,   175,   176,   177,   178,   200,   180,   181,
     182,   183,   184,   185,   186,   187,   188,    -1,    -1,    -1,
      -1,    -1,   194,   174,   175,   176,   177,   178,   200,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,   174,   175,   176,   177,   178,   200,
     180,   181,   182,   183,   184,   185,   186,   187,   188,    -1,
      -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,   178,
     200,   180,   181,   182,   183,   184,   185,   186,   187,   188,
      -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,
     178,   200,   180,   181,   182,   183,   184,   185,   186,   187,
     188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,
     177,   178,   200,   180,   181,   182,   183,   184,   185,   186,
     187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,
     176,   177,   178,   200,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,
     175,   176,   177,   178,   200,   180,   181,   182,   183,   184,
     185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,
     174,   175,   176,   177,   178,   200,   180,   181,   182,   183,
     184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,
     194,   174,   175,   176,   177,   178,   200,   180,   181,   182,
     183,   184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,
      -1,   194,   174,   175,   176,   177,   178,   200,   180,   181,
     182,   183,   184,   185,   186,   187,   188,    -1,    -1,    -1,
      -1,    -1,   194,   174,   175,   176,   177,   178,   200,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,   174,   175,   176,   177,   178,   200,
     180,   181,   182,   183,   184,   185,   186,   187,   188,    -1,
      -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,   178,
     200,   180,   181,   182,   183,   184,   185,   186,   187,   188,
      -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,
     178,   200,   180,   181,   182,   183,   184,   185,   186,   187,
     188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,
     177,   178,   200,   180,   181,   182,   183,   184,   185,   186,
     187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,
     176,   177,   178,   200,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,
     175,   176,   177,   178,   200,   180,   181,   182,   183,   184,
     185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,
     174,   175,   176,   177,   178,   200,   180,   181,   182,   183,
     184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,
     194,   174,   175,   176,   177,   178,   200,   180,   181,   182,
     183,   184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,
      -1,   194,   174,   175,   176,   177,   178,   200,   180,   181,
     182,   183,   184,   185,   186,   187,   188,    -1,    -1,    -1,
      -1,    -1,   194,   174,   175,   176,   177,   178,   200,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,   174,   175,   176,   177,   178,   200,
     180,   181,   182,   183,   184,   185,   186,   187,   188,    -1,
      -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,   178,
     200,   180,   181,   182,   183,   184,   185,   186,   187,   188,
      -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,
     178,   200,   180,   181,   182,   183,   184,   185,   186,   187,
     188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,
     177,   178,   200,   180,   181,   182,   183,   184,   185,   186,
     187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,
     176,   177,   178,   200,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,
     175,   176,   177,   178,   200,   180,   181,   182,   183,   184,
     185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,
     174,   175,   176,   177,   178,   200,   180,   181,   182,   183,
     184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,
     194,   174,   175,   176,   177,   178,   200,   180,   181,   182,
     183,   184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,
      -1,   194,   174,   175,   176,   177,   178,   200,   180,   181,
     182,   183,   184,   185,   186,   187,   188,    -1,    -1,    -1,
      -1,    -1,   194,   174,   175,   176,   177,   178,   200,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,   174,   175,   176,   177,   178,   200,
     180,   181,   182,   183,   184,   185,   186,   187,   188,    -1,
      -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,   178,
     200,   180,   181,   182,   183,   184,   185,   186,   187,   188,
      -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,
     178,   200,   180,   181,   182,   183,   184,   185,   186,   187,
     188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,
     177,   178,   200,   180,   181,   182,   183,   184,   185,   186,
     187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,
     176,   177,   178,   200,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,
     175,   176,   177,   178,   200,   180,   181,   182,   183,   184,
     185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,
     174,   175,   176,   177,   178,   200,   180,   181,   182,   183,
     184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,
     194,   174,   175,   176,   177,   178,   200,   180,   181,   182,
     183,   184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,
      -1,   194,   174,   175,   176,   177,   178,   200,   180,   181,
     182,   183,   184,   185,   186,   187,   188,    -1,    -1,    -1,
      -1,    -1,   194,   174,   175,   176,   177,   178,   200,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,   174,   175,   176,   177,   178,   200,
     180,   181,   182,   183,   184,   185,   186,   187,   188,    -1,
      -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,   178,
     200,   180,   181,   182,   183,   184,   185,   186,   187,   188,
      -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,
     178,   200,   180,   181,   182,   183,   184,   185,   186,   187,
     188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,
     177,   178,   200,   180,   181,   182,   183,   184,   185,   186,
     187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,
     176,   177,   178,   200,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,
     175,   176,   177,   178,   200,   180,   181,   182,   183,   184,
     185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,
     174,   175,   176,   177,   178,   200,   180,   181,   182,   183,
     184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,
     194,   174,   175,   176,   177,   178,   200,   180,   181,   182,
     183,   184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,
      -1,   194,   174,   175,   176,   177,   178,   200,   180,   181,
     182,   183,   184,   185,   186,   187,   188,    -1,    -1,    -1,
      -1,    -1,   194,   174,   175,   176,   177,   178,   200,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,   174,   175,   176,   177,   178,   200,
     180,   181,   182,   183,   184,   185,   186,   187,   188,    -1,
      -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,   178,
     200,   180,   181,   182,   183,   184,   185,   186,   187,   188,
      -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,
     178,   200,   180,   181,   182,   183,   184,   185,   186,   187,
     188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,
     177,   178,   200,   180,   181,   182,   183,   184,   185,   186,
     187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,
     176,   177,   178,   200,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,
     175,   176,   177,   178,   200,   180,   181,   182,   183,   184,
     185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,
     174,   175,   176,   177,   178,   200,   180,   181,   182,   183,
     184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,
     194,   174,   175,   176,   177,   178,   200,   180,   181,   182,
     183,   184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,
      -1,   194,   174,   175,   176,   177,   178,   200,   180,   181,
     182,   183,   184,   185,   186,   187,   188,    -1,    -1,    -1,
      -1,    -1,   194,   174,   175,   176,   177,   178,   200,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,   174,   175,   176,   177,   178,   200,
     180,   181,   182,   183,   184,   185,   186,   187,   188,    -1,
      -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,   178,
     200,   180,   181,   182,   183,   184,   185,   186,   187,   188,
      -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,
     178,   200,   180,   181,   182,   183,   184,   185,   186,   187,
     188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,
     177,   178,   200,   180,   181,   182,   183,   184,   185,   186,
     187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,
     176,   177,   178,   200,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,
     175,   176,   177,   178,   200,   180,   181,   182,   183,   184,
     185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,
     174,   175,   176,   177,   178,   200,   180,   181,   182,   183,
     184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,
     194,   174,   175,   176,   177,   178,   200,   180,   181,   182,
     183,   184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,
      -1,   194,   174,   175,   176,   177,   178,   200,   180,   181,
     182,   183,   184,   185,   186,   187,   188,    -1,    -1,    -1,
      -1,    -1,   194,   174,   175,   176,   177,   178,   200,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,   174,   175,   176,   177,   178,   200,
     180,   181,   182,   183,   184,   185,   186,   187,   188,    -1,
      -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,   178,
     200,   180,   181,   182,   183,   184,   185,   186,   187,   188,
      -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,
     178,   200,   180,   181,   182,   183,   184,   185,   186,   187,
     188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,
     177,   178,   200,   180,   181,   182,   183,   184,   185,   186,
     187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,
     176,   177,   178,   200,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,
     175,   176,   177,   178,   200,   180,   181,   182,   183,   184,
     185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,
     174,   175,   176,   177,   178,   200,   180,   181,   182,   183,
     184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,
     194,   174,   175,   176,   177,   178,   200,   180,   181,   182,
     183,   184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,
      -1,   194,   174,   175,   176,   177,   178,   200,   180,   181,
     182,   183,   184,   185,   186,   187,   188,    -1,    -1,    -1,
      -1,    -1,   194,   174,   175,   176,   177,   178,   200,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,   174,   175,   176,   177,   178,   200,
     180,   181,   182,   183,   184,   185,   186,   187,   188,    -1,
      -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,   178,
     200,   180,   181,   182,   183,   184,   185,   186,   187,   188,
      -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,
     178,   200,   180,   181,   182,   183,   184,   185,   186,   187,
     188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,
     177,   178,   200,   180,   181,   182,   183,   184,   185,   186,
     187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,
     176,   177,   178,   200,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,
     175,   176,   177,   178,   200,   180,   181,   182,   183,   184,
     185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,
     174,   175,   176,   177,   178,   200,   180,   181,   182,   183,
     184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,
     194,   174,   175,   176,   177,   178,   200,   180,   181,   182,
     183,   184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,
      -1,   194,   174,   175,   176,   177,   178,   200,   180,   181,
     182,   183,   184,   185,   186,   187,   188,    -1,    -1,    -1,
      -1,    -1,   194,   174,   175,   176,   177,   178,   200,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,   174,   175,   176,   177,   178,   200,
     180,   181,   182,   183,   184,   185,   186,   187,   188,    -1,
      -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,   178,
     200,   180,   181,   182,   183,   184,   185,   186,   187,   188,
      -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,
     178,   200,   180,   181,   182,   183,   184,   185,   186,   187,
     188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,
     177,   178,   200,   180,   181,   182,   183,   184,   185,   186,
     187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,
     176,   177,   178,   200,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,
     175,   176,   177,   178,   200,   180,   181,   182,   183,   184,
     185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,
     174,   175,   176,   177,   178,   200,   180,   181,   182,   183,
     184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,
     194,   174,   175,   176,   177,   178,   200,   180,   181,   182,
     183,   184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,
      -1,   194,   174,   175,   176,   177,   178,   200,   180,   181,
     182,   183,   184,   185,   186,   187,   188,    -1,    -1,    -1,
      -1,    -1,   194,   174,   175,   176,   177,   178,   200,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,   174,   175,   176,   177,   178,   200,
     180,   181,   182,   183,   184,   185,   186,   187,   188,    -1,
      -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,   178,
     200,   180,   181,   182,   183,   184,   185,   186,   187,   188,
      -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,
     178,   200,   180,   181,   182,   183,   184,   185,   186,   187,
     188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,
     177,   178,   200,   180,   181,   182,   183,   184,   185,   186,
     187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,
     176,   177,   178,   200,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,
     175,   176,   177,   178,   200,   180,   181,   182,   183,   184,
     185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,
     174,   175,   176,   177,   178,   200,   180,   181,   182,   183,
     184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,
     194,   174,   175,   176,   177,   178,   200,   180,   181,   182,
     183,   184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,
      -1,   194,   174,   175,   176,   177,   178,   200,   180,   181,
     182,   183,   184,   185,   186,   187,   188,    -1,    -1,    -1,
      -1,    -1,   194,   174,   175,   176,   177,   178,   200,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,   174,   175,   176,   177,   178,   200,
     180,   181,   182,   183,   184,   185,   186,   187,   188,    -1,
      -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,   178,
     200,   180,   181,   182,   183,   184,   185,   186,   187,   188,
      -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,
     178,   200,   180,   181,   182,   183,   184,   185,   186,   187,
     188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,
     177,   178,   200,   180,   181,   182,   183,   184,   185,   186,
     187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,
     176,   177,   178,   200,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,
     175,   176,   177,   178,   200,   180,   181,   182,   183,   184,
     185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,
     174,   175,   176,   177,   178,   200,   180,   181,   182,   183,
     184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,
     194,   174,   175,   176,   177,   178,   200,   180,   181,   182,
     183,   184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,
      -1,   194,   174,   175,   176,   177,   178,   200,   180,   181,
     182,   183,   184,   185,   186,   187,   188,    -1,    -1,    -1,
      -1,    -1,   194,   174,   175,   176,   177,   178,   200,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,   174,   175,   176,   177,   178,   200,
     180,   181,   182,   183,   184,   185,   186,   187,   188,    -1,
      -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,   178,
     200,   180,   181,   182,   183,   184,   185,   186,   187,   188,
      -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,
     178,   200,   180,   181,   182,   183,   184,   185,   186,   187,
     188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,
     177,   178,   200,   180,   181,   182,   183,   184,   185,   186,
     187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,
     176,   177,   178,   200,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,
     175,   176,   177,   178,   200,   180,   181,   182,   183,   184,
     185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,
     174,   175,   176,   177,   178,   200,   180,   181,   182,   183,
     184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,
     194,   174,   175,   176,   177,   178,   200,   180,   181,   182,
     183,   184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,
      -1,   194,   174,   175,   176,   177,   178,   200,   180,   181,
     182,   183,   184,   185,   186,   187,   188,    -1,    -1,    -1,
      -1,    -1,   194,   174,   175,   176,   177,   178,   200,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,   174,   175,   176,   177,   178,   200,
     180,   181,   182,   183,   184,   185,   186,   187,   188,    -1,
      -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,   178,
     200,   180,   181,   182,   183,   184,   185,   186,   187,   188,
      -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,
     178,   200,   180,   181,   182,   183,   184,   185,   186,   187,
     188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,
     177,   178,   200,   180,   181,   182,   183,   184,   185,   186,
     187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,
     176,   177,   178,   200,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,
     175,   176,   177,   178,   200,   180,   181,   182,   183,   184,
     185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,
     174,   175,   176,   177,   178,   200,   180,   181,   182,   183,
     184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,
     194,   174,   175,   176,   177,   178,   200,   180,   181,   182,
     183,   184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,
      -1,   194,   174,   175,   176,   177,   178,   200,   180,   181,
     182,   183,   184,   185,   186,   187,   188,    -1,    -1,    -1,
      -1,    -1,   194,   174,   175,   176,   177,   178,   200,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,   174,   175,   176,   177,   178,   200,
     180,   181,   182,   183,   184,   185,   186,   187,   188,    -1,
      -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,   178,
     200,   180,   181,   182,   183,   184,   185,   186,   187,   188,
      -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,   177,
     178,   200,   180,   181,   182,   183,   184,   185,   186,   187,
     188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,   176,
     177,   178,   200,   180,   181,   182,   183,   184,   185,   186,
     187,   188,    -1,    -1,    -1,    -1,    -1,   194,   174,   175,
     176,   177,   178,   200,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,    -1,
      -1,    -1,   198,   174,   175,   176,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,    -1,    -1,    -1,   198,   174,   175,
     176,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,    -1,
      -1,    -1,   198,   174,   175,   176,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,    -1,    -1,    -1,   198,   174,   175,
     176,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,    -1,
      -1,    -1,   198,   174,   175,   176,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,    -1,    -1,    -1,   198,   174,   175,
     176,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,    -1,
      -1,    -1,   198,   174,   175,   176,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,    -1,    -1,    -1,   198,   174,   175,
     176,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,    -1,
      -1,    -1,   198,   174,   175,   176,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,    -1,    -1,    -1,   198,   174,   175,
     176,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,    -1,
      -1,    -1,   198,   174,   175,   176,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,    -1,    -1,    -1,   198,   174,   175,
     176,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,    -1,
      -1,    -1,   198,   174,   175,   176,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,    -1,    -1,    -1,   198,   174,   175,
     176,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,    -1,
      -1,    -1,   198,   174,   175,   176,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,    -1,    -1,    -1,   198,   174,   175,
     176,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,    -1,
      -1,    -1,   198,   174,   175,   176,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,    -1,    -1,    -1,   198,   174,   175,
     176,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,    -1,
      -1,    -1,   198,   174,   175,   176,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,    -1,    -1,    -1,   198,   174,   175,
     176,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,    -1,
      -1,    -1,   198,   174,   175,   176,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,    -1,    -1,    -1,   198,   174,   175,
     176,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,    -1,
      -1,    -1,   198,   174,   175,   176,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,    -1,    -1,    -1,   198,   174,   175,
     176,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,    -1,
      -1,    -1,   198,   174,   175,   176,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,    -1,    -1,    -1,   198,   174,   175,
     176,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,    -1,
     196,   174,   175,   176,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,
      -1,   194,    -1,   196,   174,   175,   176,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,   188,    -1,
      -1,    -1,    -1,    -1,   194,    -1,   196,   174,   175,   176,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,   186,
     187,   188,    -1,    -1,    -1,    -1,    -1,   194,    -1,   196,
     174,   175,   176,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,
     194,    -1,   196,   174,   175,   176,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,    -1,   196,   174,   175,   176,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
     188,    -1,    -1,    -1,    -1,    -1,   194,    -1,   196,   174,
     175,   176,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,
      -1,   196,   174,   175,   176,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,   188,    -1,    -1,    -1,
      -1,    -1,   194,    -1,   196,   174,   175,   176,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,   188,
      -1,    -1,    -1,    -1,    -1,   194,    -1,   196,   174,   175,
     176,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,    -1,
     196,   174,   175,   176,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,
      -1,   194,    -1,   196,   174,   175,   176,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,   188,    -1,
      -1,    -1,    -1,    -1,   194,    -1,   196,   174,   175,   176,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,   186,
     187,   188,    -1,    -1,    -1,    -1,    -1,   194,    -1,   196,
     174,   175,   176,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,
     194,    -1,   196,   174,   175,   176,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,    -1,   196,   174,   175,   176,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
     188,    -1,    -1,    -1,    -1,    -1,   194,    -1,   196,   174,
     175,   176,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,
      -1,   196,   174,   175,   176,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,   188,    -1,    -1,    -1,
      -1,    -1,   194,    -1,   196,   174,   175,   176,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,   188,
      -1,    -1,    -1,    -1,    -1,   194,    -1,   196,   174,   175,
     176,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,    -1,
     196,   174,   175,   176,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,
      -1,   194,    -1,   196,   174,   175,   176,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,   188,    -1,
      -1,    -1,    -1,    -1,   194,    -1,   196,   174,   175,   176,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,   186,
     187,   188,    -1,    -1,    -1,    -1,    -1,   194,    -1,   196,
     174,   175,   176,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,
     194,    -1,   196,   174,   175,   176,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,    -1,   196,   174,   175,   176,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
     188,    -1,    -1,    -1,    -1,    -1,   194,    -1,   196,   174,
     175,   176,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,
      -1,   196,   174,   175,   176,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,   188,    -1,    -1,    -1,
      -1,    -1,   194,    -1,   196,   174,   175,   176,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,   188,
      -1,    -1,    -1,    -1,    -1,   194,    -1,   196,   174,   175,
     176,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,    -1,
     196,   174,   175,   176,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,
      -1,   194,    -1,   196,   174,   175,   176,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,   188,    -1,
      -1,    -1,    -1,    -1,   194,    -1,   196,   174,   175,   176,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,   186,
     187,   188,    -1,    -1,    -1,    -1,    -1,   194,    -1,   196,
     174,   175,   176,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,
     194,    -1,   196,   174,   175,   176,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,    -1,   196,   174,   175,   176,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
     188,    -1,    -1,    -1,    -1,    -1,   194,    -1,   196,   174,
     175,   176,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,
      -1,   196,   174,   175,   176,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,   188,    -1,    -1,    -1,
      -1,    -1,   194,    -1,   196,   174,   175,   176,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,   188,
      -1,    -1,    -1,    -1,    -1,   194,    -1,   196,   174,   175,
     176,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,    -1,
     196,   174,   175,   176,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,
      -1,   194,    -1,   196,   174,   175,   176,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,   188,    -1,
      -1,    -1,    -1,    -1,   194,    -1,   196,   174,   175,   176,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,   186,
     187,   188,    -1,    -1,    -1,    -1,    -1,   194,    -1,   196,
     174,   175,   176,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,
     194,    -1,   196,   174,   175,   176,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,    -1,   196,   174,   175,   176,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
     188,    -1,    -1,    -1,    -1,    -1,   194,    -1,   196,   174,
     175,   176,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,
      -1,   196,   174,   175,   176,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,   188,    -1,    -1,    -1,
      -1,    -1,   194,    -1,   196,   174,   175,   176,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,   188,
      -1,    -1,    -1,    -1,    -1,   194,    -1,   196,   174,   175,
     176,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,    -1,
     196,   174,   175,   176,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,
      -1,   194,    -1,   196,   174,   175,   176,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,   188,    -1,
      -1,    -1,    -1,    -1,   194,    -1,   196,   174,   175,   176,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,   186,
     187,   188,    -1,    -1,    -1,    -1,    -1,   194,    -1,   196,
     174,   175,   176,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,
     194,    -1,   196,   174,   175,   176,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,    -1,   196,   174,   175,   176,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
     188,    -1,    -1,    -1,    -1,    -1,   194,    -1,   196,   174,
     175,   176,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,
      -1,   196,   174,   175,   176,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,   188,    -1,    -1,    -1,
      -1,    -1,   194,    -1,   196,   174,   175,   176,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,   188,
      -1,    -1,    -1,    -1,    -1,   194,    -1,   196,   174,   175,
     176,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,    -1,
     196,   174,   175,   176,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,
      -1,   194,    -1,   196,   174,   175,   176,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,   188,    -1,
      -1,    -1,    -1,    -1,   194,    -1,   196,   174,   175,   176,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,   186,
     187,   188,    -1,    -1,    -1,    -1,    -1,   194,    -1,   196,
     174,   175,   176,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,
     194,    -1,   196,   174,   175,   176,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,    -1,   196,   174,   175,   176,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
     188,    -1,    -1,    -1,    -1,    -1,   194,    -1,   196,   174,
     175,   176,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,
      -1,   196,   174,   175,   176,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,   188,    -1,    -1,    -1,
      -1,    -1,   194,    -1,   196,   174,   175,   176,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,   188,
      -1,    -1,    -1,    -1,    -1,   194,    -1,   196,   174,   175,
     176,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,    -1,
     196,   174,   175,   176,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,
      -1,   194,    -1,   196,   174,   175,   176,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,   188,    -1,
      -1,    -1,    -1,    -1,   194,    -1,   196,   174,   175,   176,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,   186,
     187,   188,    -1,    -1,    -1,    -1,    -1,   194,    -1,   196,
     174,   175,   176,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,
     194,    -1,   196,   174,   175,   176,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,    -1,
      -1,    -1,    -1,   194,    -1,   196,   174,   175,   176,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
     188,    -1,    -1,    -1,    -1,    -1,   194,    -1,   196,   174,
     175,   176,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,
      -1,   196,   174,   175,   176,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,   188,    -1,    -1,    -1,
      -1,    -1,   194,    -1,   196,   174,   175,   176,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,   188,
      -1,    -1,    -1,    -1,    -1,   194,    -1,   196,   174,   175,
     176,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194
};
/* -*-C-*-  Note some compilers choke on comments on `#line' lines.  */
#line 3 "/usr/share/bison/bison.simple"

/* Skeleton output parser for bison,

   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002 Free Software
   Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */

/* As a special exception, when this file is copied by Bison into a
   Bison output file, you may use that output file without restriction.
   This special exception was added by the Free Software Foundation
   in version 1.24 of Bison.  */

/* This is the parser code that is written into each bison parser when
   the %semantic_parser declaration is not specified in the grammar.
   It was written by Richard Stallman by simplifying the hairy parser
   used when %semantic_parser is specified.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

#if ! defined (yyoverflow) || defined (YYERROR_VERBOSE)

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# if YYSTACK_USE_ALLOCA
#  define YYSTACK_ALLOC alloca
# else
#  ifndef YYSTACK_USE_ALLOCA
#   if defined (alloca) || defined (_ALLOCA_H)
#    define YYSTACK_ALLOC alloca
#   else
#    ifdef __GNUC__
#     define YYSTACK_ALLOC __builtin_alloca
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning. */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (0)
# else
#  if defined (__STDC__) || defined (__cplusplus)
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   define YYSIZE_T size_t
#  endif
#  define YYSTACK_ALLOC malloc
#  define YYSTACK_FREE free
# endif
#endif /* ! defined (yyoverflow) || defined (YYERROR_VERBOSE) */


#if (! defined (yyoverflow) \
     && (! defined (__cplusplus) \
	 || (YYLTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  short yyss;
  YYSTYPE yyvs;
# if YYLSP_NEEDED
  YYLTYPE yyls;
# endif
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAX (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# if YYLSP_NEEDED
#  define YYSTACK_BYTES(N) \
     ((N) * (sizeof (short) + sizeof (YYSTYPE) + sizeof (YYLTYPE))	\
      + 2 * YYSTACK_GAP_MAX)
# else
#  define YYSTACK_BYTES(N) \
     ((N) * (sizeof (short) + sizeof (YYSTYPE))				\
      + YYSTACK_GAP_MAX)
# endif

/* Copy COUNT objects from FROM to TO.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if 1 < __GNUC__
#   define YYCOPY(To, From, Count) \
      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
#  else
#   define YYCOPY(To, From, Count)		\
      do					\
	{					\
	  register YYSIZE_T yyi;		\
	  for (yyi = 0; yyi < (Count); yyi++)	\
	    (To)[yyi] = (From)[yyi];		\
	}					\
      while (0)
#  endif
# endif

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack)					\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack, Stack, yysize);				\
	Stack = &yyptr->Stack;						\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAX;	\
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (0)

#endif


#if ! defined (YYSIZE_T) && defined (__SIZE_TYPE__)
# define YYSIZE_T __SIZE_TYPE__
#endif
#if ! defined (YYSIZE_T) && defined (size_t)
# define YYSIZE_T size_t
#endif
#if ! defined (YYSIZE_T)
# if defined (__STDC__) || defined (__cplusplus)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# endif
#endif
#if ! defined (YYSIZE_T)
# define YYSIZE_T unsigned int
#endif

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		-2
#define YYEOF		0
#define YYACCEPT	goto yyacceptlab
#define YYABORT 	goto yyabortlab
#define YYERROR		goto yyerrlab1
/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */
#define YYFAIL		goto yyerrlab
#define YYRECOVERING()  (!!yyerrstatus)
#define YYBACKUP(Token, Value)					\
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    {								\
      yychar = (Token);						\
      yylval = (Value);						\
      yychar1 = YYTRANSLATE (yychar);				\
      YYPOPSTACK;						\
      goto yybackup;						\
    }								\
  else								\
    { 								\
      yyerror ("syntax error: cannot back up");			\
      YYERROR;							\
    }								\
while (0)

#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Compute the default location (before the actions
   are run).

   When YYLLOC_DEFAULT is run, CURRENT is set the location of the
   first token.  By default, to implement support for ranges, extend
   its range to the last symbol.  */

#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)       	\
   Current.last_line   = Rhs[N].last_line;	\
   Current.last_column = Rhs[N].last_column;
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */

#if YYPURE
# if YYLSP_NEEDED
#  ifdef YYLEX_PARAM
#   define YYLEX		yylex (&yylval, &yylloc, YYLEX_PARAM)
#  else
#   define YYLEX		yylex (&yylval, &yylloc)
#  endif
# else /* !YYLSP_NEEDED */
#  ifdef YYLEX_PARAM
#   define YYLEX		yylex (&yylval, YYLEX_PARAM)
#  else
#   define YYLEX		yylex (&yylval)
#  endif
# endif /* !YYLSP_NEEDED */
#else /* !YYPURE */
# define YYLEX			yylex ()
#endif /* !YYPURE */


/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (0)
/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
#endif /* !YYDEBUG */

/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   SIZE_MAX < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#if YYMAXDEPTH == 0
# undef YYMAXDEPTH
#endif

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif

#ifdef YYERROR_VERBOSE

# ifndef yystrlen
#  if defined (__GLIBC__) && defined (_STRING_H)
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
static YYSIZE_T
#   if defined (__STDC__) || defined (__cplusplus)
yystrlen (const char *yystr)
#   else
yystrlen (yystr)
     const char *yystr;
#   endif
{
  register const char *yys = yystr;

  while (*yys++ != '\0')
    continue;

  return yys - yystr - 1;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined (__GLIBC__) && defined (_STRING_H) && defined (_GNU_SOURCE)
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
static char *
#   if defined (__STDC__) || defined (__cplusplus)
yystpcpy (char *yydest, const char *yysrc)
#   else
yystpcpy (yydest, yysrc)
     char *yydest;
     const char *yysrc;
#   endif
{
  register char *yyd = yydest;
  register const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif
#endif

#line 315 "/usr/share/bison/bison.simple"


/* The user can define YYPARSE_PARAM as the name of an argument to be passed
   into yyparse.  The argument should have type void *.
   It should actually point to an object.
   Grammar actions can access the variable by casting it
   to the proper pointer type.  */

#ifdef YYPARSE_PARAM
# if defined (__STDC__) || defined (__cplusplus)
#  define YYPARSE_PARAM_ARG void *YYPARSE_PARAM
#  define YYPARSE_PARAM_DECL
# else
#  define YYPARSE_PARAM_ARG YYPARSE_PARAM
#  define YYPARSE_PARAM_DECL void *YYPARSE_PARAM;
# endif
#else /* !YYPARSE_PARAM */
# define YYPARSE_PARAM_ARG
# define YYPARSE_PARAM_DECL
#endif /* !YYPARSE_PARAM */

/* Prevent warning if -Wstrict-prototypes.  */
#ifdef __GNUC__
# ifdef YYPARSE_PARAM
int yyparse (void *);
# else
int yyparse (void);
# endif
#endif

/* YY_DECL_VARIABLES -- depending whether we use a pure parser,
   variables are global, or local to YYPARSE.  */

#define YY_DECL_NON_LSP_VARIABLES			\
/* The lookahead symbol.  */				\
int yychar;						\
							\
/* The semantic value of the lookahead symbol. */	\
YYSTYPE yylval;						\
							\
/* Number of parse errors so far.  */			\
int yynerrs;

#if YYLSP_NEEDED
# define YY_DECL_VARIABLES			\
YY_DECL_NON_LSP_VARIABLES			\
						\
/* Location data for the lookahead symbol.  */	\
YYLTYPE yylloc;
#else
# define YY_DECL_VARIABLES			\
YY_DECL_NON_LSP_VARIABLES
#endif


/* If nonreentrant, generate the variables here. */

#if !YYPURE
YY_DECL_VARIABLES
#endif  /* !YYPURE */

int
yyparse (YYPARSE_PARAM_ARG)
     YYPARSE_PARAM_DECL
{
  /* If reentrant, generate the variables here. */
#if YYPURE
  YY_DECL_VARIABLES
#endif  /* !YYPURE */

  register int yystate;
  register int yyn;
  int yyresult;
  /* Number of tokens to shift before error messages enabled.  */
  int yyerrstatus;
  /* Lookahead token as an internal (translated) token number.  */
  int yychar1 = 0;

  /* Three stacks and their tools:
     `yyss': related to states,
     `yyvs': related to semantic values,
     `yyls': related to locations.

     Refer to the stacks thru separate pointers, to allow yyoverflow
     to reallocate them elsewhere.  */

  /* The state stack. */
  short	yyssa[YYINITDEPTH];
  short *yyss = yyssa;
  register short *yyssp;

  /* The semantic value stack.  */
  YYSTYPE yyvsa[YYINITDEPTH];
  YYSTYPE *yyvs = yyvsa;
  register YYSTYPE *yyvsp;

#if YYLSP_NEEDED
  /* The location stack.  */
  YYLTYPE yylsa[YYINITDEPTH];
  YYLTYPE *yyls = yylsa;
  YYLTYPE *yylsp;
#endif

#if YYLSP_NEEDED
# define YYPOPSTACK   (yyvsp--, yyssp--, yylsp--)
#else
# define YYPOPSTACK   (yyvsp--, yyssp--)
#endif

  YYSIZE_T yystacksize = YYINITDEPTH;


  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
#if YYLSP_NEEDED
  YYLTYPE yyloc;
#endif

  /* When reducing, the number of symbols on the RHS of the reduced
     rule. */
  int yylen;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY;		/* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */

  yyssp = yyss;
  yyvsp = yyvs;
#if YYLSP_NEEDED
  yylsp = yyls;
#endif
  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed. so pushing a state here evens the stacks.
     */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyssp >= yyss + yystacksize - 1)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack. Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	short *yyss1 = yyss;

	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  */
# if YYLSP_NEEDED
	YYLTYPE *yyls1 = yyls;
	/* This used to be a conditional around just the two extra args,
	   but that might be undefined if yyoverflow is a macro.  */
	yyoverflow ("parser stack overflow",
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),
		    &yyls1, yysize * sizeof (*yylsp),
		    &yystacksize);
	yyls = yyls1;
# else
	yyoverflow ("parser stack overflow",
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),
		    &yystacksize);
# endif
	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyoverflowlab;
# else
      /* Extend the stack our own way.  */
      if (yystacksize >= YYMAXDEPTH)
	goto yyoverflowlab;
      yystacksize *= 2;
      if (yystacksize > YYMAXDEPTH)
	yystacksize = YYMAXDEPTH;

      {
	short *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyoverflowlab;
	YYSTACK_RELOCATE (yyss);
	YYSTACK_RELOCATE (yyvs);
# if YYLSP_NEEDED
	YYSTACK_RELOCATE (yyls);
# endif
# undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
#if YYLSP_NEEDED
      yylsp = yyls + yysize - 1;
#endif

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyssp >= yyss + yystacksize - 1)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  goto yybackup;


/*-----------.
| yybackup.  |
`-----------*/
yybackup:

/* Do appropriate processing given the current state.  */
/* Read a lookahead token if we need one and don't already have one.  */
/* yyresume: */

  /* First try to decide what to do without reference to lookahead token.  */

  yyn = yypact[yystate];
  if (yyn == YYFLAG)
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* yychar is either YYEMPTY or YYEOF
     or a valid token in external form.  */

  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  /* Convert token to internal form (in yychar1) for indexing tables with */

  if (yychar <= 0)		/* This means end of input. */
    {
      yychar1 = 0;
      yychar = YYEOF;		/* Don't call YYLEX any more */

      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yychar1 = YYTRANSLATE (yychar);

#if YYDEBUG
     /* We have to keep this `#if YYDEBUG', since we use variables
	which are defined only if `YYDEBUG' is set.  */
      if (yydebug)
	{
	  YYFPRINTF (stderr, "Next token is %d (%s",
		     yychar, yytname[yychar1]);
	  /* Give the individual parser a way to print the precise
	     meaning of a token, for further debugging info.  */
# ifdef YYPRINT
	  YYPRINT (stderr, yychar, yylval);
# endif
	  YYFPRINTF (stderr, ")\n");
	}
#endif
    }

  yyn += yychar1;
  if (yyn < 0 || yyn > YYLAST || yycheck[yyn] != yychar1)
    goto yydefault;

  yyn = yytable[yyn];

  /* yyn is what to do for this token type in this state.
     Negative => reduce, -yyn is rule number.
     Positive => shift, yyn is new state.
       New state is final state => don't bother to shift,
       just return success.
     0, or most negative number => error.  */

  if (yyn < 0)
    {
      if (yyn == YYFLAG)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }
  else if (yyn == 0)
    goto yyerrlab;

  if (yyn == YYFINAL)
    YYACCEPT;

  /* Shift the lookahead token.  */
  YYDPRINTF ((stderr, "Shifting token %d (%s), ",
	      yychar, yytname[yychar1]));

  /* Discard the token being shifted unless it is eof.  */
  if (yychar != YYEOF)
    yychar = YYEMPTY;

  *++yyvsp = yylval;
#if YYLSP_NEEDED
  *++yylsp = yylloc;
#endif

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  yystate = yyn;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to the semantic value of
     the lookahead token.  This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

#if YYLSP_NEEDED
  /* Similarly for the default location.  Let the user run additional
     commands if for instance locations are ranges.  */
  yyloc = yylsp[1-yylen];
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
#endif

#if YYDEBUG
  /* We have to keep this `#if YYDEBUG', since we use variables which
     are defined only if `YYDEBUG' is set.  */
  if (yydebug)
    {
      int yyi;

      YYFPRINTF (stderr, "Reducing via rule %d (line %d), ",
		 yyn, yyrline[yyn]);

      /* Print the symbols being reduced, and their result.  */
      for (yyi = yyprhs[yyn]; yyrhs[yyi] > 0; yyi++)
	YYFPRINTF (stderr, "%s ", yytname[yyrhs[yyi]]);
      YYFPRINTF (stderr, " -> %s\n", yytname[yyr1[yyn]]);
    }
#endif

  switch (yyn) {

case 4:
#line 174 "Gmsh.y"
{ yyerrok ; return 1; ;
    break;}
case 5:
#line 180 "Gmsh.y"
{ yyval.d = yyvsp[0].d; ;
    break;}
case 6:
#line 181 "Gmsh.y"
{ yyval.d = -yyvsp[0].d; ;
    break;}
case 7:
#line 186 "Gmsh.y"
{
      yymsg(INFO, "STL file format");
      STL_Surf = Create_Surface(1,MSH_SURF_STL);
      STL_Surf->STL = new STL_Data;
      return 1;
    ;
    break;}
case 8:
#line 200 "Gmsh.y"
{
      STL_Surf->STL->Add_Facet( yyvsp[-12].d, yyvsp[-11].d, yyvsp[-10].d,
				yyvsp[-8].d, yyvsp[-7].d, yyvsp[-6].d,
				yyvsp[-4].d, yyvsp[-3].d, yyvsp[-2].d);
      return 1;
    ;
    break;}
case 9:
#line 207 "Gmsh.y"
{
      yymsg(INFO, "STL file format read");
      Tree_Add(THEM->Surfaces, &STL_Surf);
      return 1;
    ;
    break;}
case 12:
#line 222 "Gmsh.y"
{ return 1; ;
    break;}
case 13:
#line 223 "Gmsh.y"
{ return 1; ;
    break;}
case 14:
#line 224 "Gmsh.y"
{ return 1; ;
    break;}
case 15:
#line 229 "Gmsh.y"
{
      yymsg(INFO, "Step Iso-10303-21 file format");
      Create_Step_Solid_BRep();
    ;
    break;}
case 16:
#line 234 "Gmsh.y"
{
      yymsg(INFO, "Step Iso-10303-21 file format read");
      Resolve_BREP ();
    ;
    break;}
case 20:
#line 245 "Gmsh.y"
{
    ;
    break;}
case 21:
#line 248 "Gmsh.y"
{
    ;
    break;}
case 22:
#line 252 "Gmsh.y"
{
   ;
    break;}
case 23:
#line 258 "Gmsh.y"
{
        Add_Cartesian_Point((int)yyvsp[-8].d,yyvsp[-4].c,yyvsp[-2].v[0],yyvsp[-2].v[1],yyvsp[-2].v[2]);
    ;
    break;}
case 24:
#line 264 "Gmsh.y"
{
       Add_BSpline_Curve_With_Knots ((int)yyvsp[-22].d, yyvsp[-18].c, (int) yyvsp[-16].d, yyvsp[-14].l,	yyvsp[-6].l, yyvsp[-4].l, 0., 1.);
    ;
    break;}
case 25:
#line 271 "Gmsh.y"
{
      Add_BSpline_Surface_With_Knots ((int)yyvsp[-30].d, yyvsp[-26].c, (int) yyvsp[-24].d, (int) yyvsp[-22].d, yyvsp[-20].l, yyvsp[-10].l,
				      yyvsp[-8].l, yyvsp[-6].l, yyvsp[-4].l, 0., 1., 0., 1. );
    ;
    break;}
case 26:
#line 277 "Gmsh.y"
{
      Add_Edge_Curve ((int)yyvsp[-14].d, yyvsp[-10].c , (int)yyvsp[-8].d , (int)yyvsp[-6].d, (int)yyvsp[-4].d);
    ;
    break;}
case 27:
#line 281 "Gmsh.y"
{
      Add_Face_Outer_Bound((int)yyvsp[-10].d,yyvsp[-6].c,(int)yyvsp[-4].d,yyvsp[-2].i,1);
    ;
    break;}
case 28:
#line 285 "Gmsh.y"
{
      // check the norm! Face_Bound : hole outside surface!
      yymsg(INFO, "Found a face bound");
      Add_Face_Outer_Bound((int)yyvsp[-10].d,yyvsp[-6].c,(int)yyvsp[-4].d,yyvsp[-2].i,0);
    ;
    break;}
case 29:
#line 292 "Gmsh.y"
{
      Add_Oriented_Edge((int)yyvsp[-14].d,yyvsp[-10].c,(int)yyvsp[-4].d,yyvsp[-2].i);
    ;
    break;}
case 30:
#line 296 "Gmsh.y"
{
      Add_Edge_Loop((int)yyvsp[-8].d,yyvsp[-4].c,yyvsp[-2].l);
    ;
    break;}
case 31:
#line 301 "Gmsh.y"
{
      Add_Advanced_Face((int)yyvsp[-12].d,yyvsp[-8].c,yyvsp[-6].l,(int)yyvsp[-4].d,yyvsp[-2].i);
    ;
    break;}
case 32:
#line 305 "Gmsh.y"
{
      Add_Vertex_Point((int)yyvsp[-8].d,yyvsp[-4].c,(int)yyvsp[-2].d);
    ;
    break;}
case 33:
#line 309 "Gmsh.y"
{
    ;
    break;}
case 34:
#line 313 "Gmsh.y"
{
      Add_Axis2_Placement3D  ( (int)yyvsp[-12].d, (int)yyvsp[-4].d, (int)yyvsp[-2].d, (int)yyvsp[-6].d);
    ;
    break;}
case 35:
#line 317 "Gmsh.y"
{
      Add_Direction((int)yyvsp[-8].d , yyvsp[-4].c, yyvsp[-2].v[0], yyvsp[-2].v[1], yyvsp[-2].v[2]);
    ;
    break;}
case 36:
#line 321 "Gmsh.y"
{
      Add_Plane((int)yyvsp[-8].d,yyvsp[-4].c,(int)yyvsp[-2].d);
    ;
    break;}
case 37:
#line 325 "Gmsh.y"
{
      Add_Line ((int)yyvsp[-10].d, yyvsp[-6].c , (int) yyvsp[-4].d, (int)yyvsp[-2].d);
    ;
    break;}
case 38:
#line 329 "Gmsh.y"
{
      yymsg(INFO, "Found a closed shell");
      Add_Closed_Shell((int)yyvsp[-8].d, yyvsp[-4].c , yyvsp[-2].l);
    ;
    break;}
case 39:
#line 335 "Gmsh.y"
{
    ;
    break;}
case 40:
#line 338 "Gmsh.y"
{
    ;
    break;}
case 41:
#line 341 "Gmsh.y"
{
      Add_Cylinder ((int)yyvsp[-10].d, yyvsp[-6].c , (int)yyvsp[-4].d, yyvsp[-2].d);
    ;
    break;}
case 42:
#line 345 "Gmsh.y"
{
      Add_Cone ((int)yyvsp[-12].d, yyvsp[-8].c , (int)yyvsp[-6].d, yyvsp[-4].d,yyvsp[-2].d);
    ;
    break;}
case 43:
#line 349 "Gmsh.y"
{
      Add_Torus ((int)yyvsp[-12].d, yyvsp[-8].c , (int)yyvsp[-6].d, yyvsp[-4].d,yyvsp[-2].d);
    ;
    break;}
case 44:
#line 353 "Gmsh.y"
{
      Add_Circle((int) yyvsp[-10].d, yyvsp[-6].c, (int) yyvsp[-4].d, yyvsp[-2].d);
    ;
    break;}
case 45:
#line 357 "Gmsh.y"
{
      Add_Ellipse((int) yyvsp[-12].d, yyvsp[-8].c, (int) yyvsp[-6].d, yyvsp[-4].d, yyvsp[-2].d);
    ;
    break;}
case 46:
#line 362 "Gmsh.y"
{
    ;
    break;}
case 47:
#line 365 "Gmsh.y"
{
    ;
    break;}
case 48:
#line 369 "Gmsh.y"
{
    ;
    break;}
case 49:
#line 372 "Gmsh.y"
{
    ;
    break;}
case 50:
#line 376 "Gmsh.y"
{
    ;
    break;}
case 51:
#line 379 "Gmsh.y"
{
    ;
    break;}
case 52:
#line 382 "Gmsh.y"
{
    ;
    break;}
case 53:
#line 390 "Gmsh.y"
{
  ;
    break;}
case 54:
#line 393 "Gmsh.y"
{
    yymsg(INFO, "Gmsh file format read");
  ;
    break;}
case 55:
#line 399 "Gmsh.y"
{ return 1; ;
    break;}
case 56:
#line 400 "Gmsh.y"
{ return 1; ;
    break;}
case 57:
#line 401 "Gmsh.y"
{ return 1; ;
    break;}
case 58:
#line 402 "Gmsh.y"
{ return 1; ;
    break;}
case 59:
#line 403 "Gmsh.y"
{ return 1; ;
    break;}
case 60:
#line 404 "Gmsh.y"
{ return 1; ;
    break;}
case 61:
#line 405 "Gmsh.y"
{ return 1; ;
    break;}
case 62:
#line 406 "Gmsh.y"
{ return 1; ;
    break;}
case 63:
#line 407 "Gmsh.y"
{ return 1; ;
    break;}
case 64:
#line 408 "Gmsh.y"
{ return 1; ;
    break;}
case 65:
#line 409 "Gmsh.y"
{ return 1; ;
    break;}
case 66:
#line 410 "Gmsh.y"
{ return 1; ;
    break;}
case 67:
#line 411 "Gmsh.y"
{ return 1; ;
    break;}
case 68:
#line 416 "Gmsh.y"
{
      Msg(DIRECT, yyvsp[-2].c);
    ;
    break;}
case 69:
#line 420 "Gmsh.y"
{
      i = PrintListOfDouble(yyvsp[-4].c,yyvsp[-2].l,tmpstring);
      if(i<0) 
	yymsg(GERROR, "Too few arguments in Printf");
      else if(i>0)
	yymsg(GERROR, "Too many arguments (%d) in Printf", i);
      else
	Msg(DIRECT, tmpstring);
      List_Delete(yyvsp[-2].l);
    ;
    break;}
case 70:
#line 436 "Gmsh.y"
{ 
      if(!strcmp(yyvsp[-5].c, "View")) EndView(View, 1, yyname, yyvsp[-4].c); 
    ;
    break;}
case 71:
#line 440 "Gmsh.y"
{
      if(!strcmp(yyvsp[-7].c, "View")) EndView(View, 1, yyname, yyvsp[-6].c);
    ;
    break;}
case 72:
#line 447 "Gmsh.y"
{
      View = BeginView(1); 
    ;
    break;}
case 99:
#line 480 "Gmsh.y"
{ List_Add(View->SP, &yyvsp[0].d) ; ;
    break;}
case 100:
#line 482 "Gmsh.y"
{ List_Add(View->SP, &yyvsp[0].d) ; ;
    break;}
case 101:
#line 487 "Gmsh.y"
{ 
      List_Add(View->SP, &yyvsp[-5].d); List_Add(View->SP, &yyvsp[-3].d);
      List_Add(View->SP, &yyvsp[-1].d);
    ;
    break;}
case 102:
#line 492 "Gmsh.y"
{
      View->NbSP++ ;
    ;
    break;}
case 103:
#line 499 "Gmsh.y"
{ List_Add(View->VP, &yyvsp[0].d) ; ;
    break;}
case 104:
#line 501 "Gmsh.y"
{ List_Add(View->VP, &yyvsp[0].d) ; ;
    break;}
case 105:
#line 506 "Gmsh.y"
{ 
      List_Add(View->VP, &yyvsp[-5].d); List_Add(View->VP, &yyvsp[-3].d);
      List_Add(View->VP, &yyvsp[-1].d); 
    ;
    break;}
case 106:
#line 511 "Gmsh.y"
{
      View->NbVP++ ;
    ;
    break;}
case 107:
#line 518 "Gmsh.y"
{ List_Add(View->TP, &yyvsp[0].d) ; ;
    break;}
case 108:
#line 520 "Gmsh.y"
{ List_Add(View->TP, &yyvsp[0].d) ; ;
    break;}
case 109:
#line 525 "Gmsh.y"
{ 
      List_Add(View->TP, &yyvsp[-5].d); List_Add(View->TP, &yyvsp[-3].d);
      List_Add(View->TP, &yyvsp[-1].d);
    ;
    break;}
case 110:
#line 530 "Gmsh.y"
{
      View->NbTP++ ;
    ;
    break;}
case 111:
#line 537 "Gmsh.y"
{ List_Add(View->SL, &yyvsp[0].d) ; ;
    break;}
case 112:
#line 539 "Gmsh.y"
{ List_Add(View->SL, &yyvsp[0].d) ; ;
    break;}
case 113:
#line 545 "Gmsh.y"
{ 
      List_Add(View->SL, &yyvsp[-11].d); List_Add(View->SL, &yyvsp[-5].d);
      List_Add(View->SL, &yyvsp[-9].d); List_Add(View->SL, &yyvsp[-3].d);
      List_Add(View->SL, &yyvsp[-7].d); List_Add(View->SL, &yyvsp[-1].d);
    ;
    break;}
case 114:
#line 551 "Gmsh.y"
{
      View->NbSL++ ;
    ;
    break;}
case 115:
#line 558 "Gmsh.y"
{ List_Add(View->VL, &yyvsp[0].d) ; ;
    break;}
case 116:
#line 560 "Gmsh.y"
{ List_Add(View->VL, &yyvsp[0].d) ; ;
    break;}
case 117:
#line 566 "Gmsh.y"
{ 
      List_Add(View->VL, &yyvsp[-11].d); List_Add(View->VL, &yyvsp[-5].d);
      List_Add(View->VL, &yyvsp[-9].d); List_Add(View->VL, &yyvsp[-3].d);
      List_Add(View->VL, &yyvsp[-7].d); List_Add(View->VL, &yyvsp[-1].d);
    ;
    break;}
case 118:
#line 572 "Gmsh.y"
{
      View->NbVL++ ;
    ;
    break;}
case 119:
#line 579 "Gmsh.y"
{ List_Add(View->TL, &yyvsp[0].d) ; ;
    break;}
case 120:
#line 581 "Gmsh.y"
{ List_Add(View->TL, &yyvsp[0].d) ; ;
    break;}
case 121:
#line 587 "Gmsh.y"
{ 
      List_Add(View->TL, &yyvsp[-11].d); List_Add(View->TL, &yyvsp[-5].d);
      List_Add(View->TL, &yyvsp[-9].d); List_Add(View->TL, &yyvsp[-3].d);
      List_Add(View->TL, &yyvsp[-7].d); List_Add(View->TL, &yyvsp[-1].d);
    ;
    break;}
case 122:
#line 593 "Gmsh.y"
{
      View->NbTL++ ;
    ;
    break;}
case 123:
#line 600 "Gmsh.y"
{ List_Add(View->ST, &yyvsp[0].d) ; ;
    break;}
case 124:
#line 602 "Gmsh.y"
{ List_Add(View->ST, &yyvsp[0].d) ; ;
    break;}
case 125:
#line 609 "Gmsh.y"
{ 
      List_Add(View->ST, &yyvsp[-17].d); List_Add(View->ST, &yyvsp[-11].d);
      List_Add(View->ST, &yyvsp[-5].d);
      List_Add(View->ST, &yyvsp[-15].d); List_Add(View->ST, &yyvsp[-9].d);
      List_Add(View->ST, &yyvsp[-3].d);
      List_Add(View->ST, &yyvsp[-13].d); List_Add(View->ST, &yyvsp[-7].d);
      List_Add(View->ST, &yyvsp[-1].d);
    ;
    break;}
case 126:
#line 618 "Gmsh.y"
{
      View->NbST++ ;
    ;
    break;}
case 127:
#line 625 "Gmsh.y"
{ List_Add(View->VT, &yyvsp[0].d) ; ;
    break;}
case 128:
#line 627 "Gmsh.y"
{ List_Add(View->VT, &yyvsp[0].d) ; ;
    break;}
case 129:
#line 634 "Gmsh.y"
{ 
      List_Add(View->VT, &yyvsp[-17].d); List_Add(View->VT, &yyvsp[-11].d);
      List_Add(View->VT, &yyvsp[-5].d);
      List_Add(View->VT, &yyvsp[-15].d); List_Add(View->VT, &yyvsp[-9].d);
      List_Add(View->VT, &yyvsp[-3].d);
      List_Add(View->VT, &yyvsp[-13].d); List_Add(View->VT, &yyvsp[-7].d);
      List_Add(View->VT, &yyvsp[-1].d);
    ;
    break;}
case 130:
#line 643 "Gmsh.y"
{
      View->NbVT++ ;
    ;
    break;}
case 131:
#line 650 "Gmsh.y"
{ List_Add(View->TT, &yyvsp[0].d) ; ;
    break;}
case 132:
#line 652 "Gmsh.y"
{ List_Add(View->TT, &yyvsp[0].d) ; ;
    break;}
case 133:
#line 659 "Gmsh.y"
{ 
      List_Add(View->TT, &yyvsp[-17].d); List_Add(View->TT, &yyvsp[-11].d);
      List_Add(View->TT, &yyvsp[-5].d);
      List_Add(View->TT, &yyvsp[-15].d); List_Add(View->TT, &yyvsp[-9].d);
      List_Add(View->TT, &yyvsp[-3].d);
      List_Add(View->TT, &yyvsp[-13].d); List_Add(View->TT, &yyvsp[-7].d);
      List_Add(View->TT, &yyvsp[-1].d);
    ;
    break;}
case 134:
#line 668 "Gmsh.y"
{
      View->NbTT++ ;
    ;
    break;}
case 135:
#line 675 "Gmsh.y"
{ List_Add(View->SQ, &yyvsp[0].d) ; ;
    break;}
case 136:
#line 677 "Gmsh.y"
{ List_Add(View->SQ, &yyvsp[0].d) ; ;
    break;}
case 137:
#line 685 "Gmsh.y"
{ 
      List_Add(View->SQ, &yyvsp[-23].d);  List_Add(View->SQ, &yyvsp[-17].d);
      List_Add(View->SQ, &yyvsp[-11].d); List_Add(View->SQ, &yyvsp[-5].d);
      List_Add(View->SQ, &yyvsp[-21].d);  List_Add(View->SQ, &yyvsp[-15].d);
      List_Add(View->SQ, &yyvsp[-9].d); List_Add(View->SQ, &yyvsp[-3].d);
      List_Add(View->SQ, &yyvsp[-19].d);  List_Add(View->SQ, &yyvsp[-13].d);
      List_Add(View->SQ, &yyvsp[-7].d); List_Add(View->SQ, &yyvsp[-1].d);
    ;
    break;}
case 138:
#line 694 "Gmsh.y"
{
      View->NbSQ++ ;
    ;
    break;}
case 139:
#line 701 "Gmsh.y"
{ List_Add(View->VQ, &yyvsp[0].d) ; ;
    break;}
case 140:
#line 703 "Gmsh.y"
{ List_Add(View->VQ, &yyvsp[0].d) ; ;
    break;}
case 141:
#line 711 "Gmsh.y"
{ 
      List_Add(View->VQ, &yyvsp[-23].d);  List_Add(View->VQ, &yyvsp[-17].d);
      List_Add(View->VQ, &yyvsp[-11].d); List_Add(View->VQ, &yyvsp[-5].d);
      List_Add(View->VQ, &yyvsp[-21].d);  List_Add(View->VQ, &yyvsp[-15].d);
      List_Add(View->VQ, &yyvsp[-9].d); List_Add(View->VQ, &yyvsp[-3].d);
      List_Add(View->VQ, &yyvsp[-19].d);  List_Add(View->VQ, &yyvsp[-13].d);
      List_Add(View->VQ, &yyvsp[-7].d); List_Add(View->VQ, &yyvsp[-1].d);
    ;
    break;}
case 142:
#line 720 "Gmsh.y"
{
      View->NbVQ++ ;
    ;
    break;}
case 143:
#line 727 "Gmsh.y"
{ List_Add(View->TQ, &yyvsp[0].d) ; ;
    break;}
case 144:
#line 729 "Gmsh.y"
{ List_Add(View->TQ, &yyvsp[0].d) ; ;
    break;}
case 145:
#line 737 "Gmsh.y"
{ 
      List_Add(View->TQ, &yyvsp[-23].d);  List_Add(View->TQ, &yyvsp[-17].d);
      List_Add(View->TQ, &yyvsp[-11].d); List_Add(View->TQ, &yyvsp[-5].d);
      List_Add(View->TQ, &yyvsp[-21].d);  List_Add(View->TQ, &yyvsp[-15].d);
      List_Add(View->TQ, &yyvsp[-9].d); List_Add(View->TQ, &yyvsp[-3].d);
      List_Add(View->TQ, &yyvsp[-19].d);  List_Add(View->TQ, &yyvsp[-13].d);
      List_Add(View->TQ, &yyvsp[-7].d); List_Add(View->TQ, &yyvsp[-1].d);
    ;
    break;}
case 146:
#line 746 "Gmsh.y"
{
      View->NbTQ++ ;
    ;
    break;}
case 147:
#line 753 "Gmsh.y"
{ List_Add(View->SS, &yyvsp[0].d) ; ;
    break;}
case 148:
#line 755 "Gmsh.y"
{ List_Add(View->SS, &yyvsp[0].d) ; ;
    break;}
case 149:
#line 763 "Gmsh.y"
{ 
      List_Add(View->SS, &yyvsp[-23].d);  List_Add(View->SS, &yyvsp[-17].d);
      List_Add(View->SS, &yyvsp[-11].d); List_Add(View->SS, &yyvsp[-5].d);
      List_Add(View->SS, &yyvsp[-21].d);  List_Add(View->SS, &yyvsp[-15].d);
      List_Add(View->SS, &yyvsp[-9].d); List_Add(View->SS, &yyvsp[-3].d);
      List_Add(View->SS, &yyvsp[-19].d);  List_Add(View->SS, &yyvsp[-13].d);
      List_Add(View->SS, &yyvsp[-7].d); List_Add(View->SS, &yyvsp[-1].d);
    ;
    break;}
case 150:
#line 772 "Gmsh.y"
{
      View->NbSS++ ;
    ;
    break;}
case 151:
#line 779 "Gmsh.y"
{ List_Add(View->VS, &yyvsp[0].d) ; ;
    break;}
case 152:
#line 781 "Gmsh.y"
{ List_Add(View->VS, &yyvsp[0].d) ; ;
    break;}
case 153:
#line 789 "Gmsh.y"
{ 
      List_Add(View->VS, &yyvsp[-23].d);  List_Add(View->VS, &yyvsp[-17].d);
      List_Add(View->VS, &yyvsp[-11].d); List_Add(View->VS, &yyvsp[-5].d);
      List_Add(View->VS, &yyvsp[-21].d);  List_Add(View->VS, &yyvsp[-15].d);
      List_Add(View->VS, &yyvsp[-9].d); List_Add(View->VS, &yyvsp[-3].d);
      List_Add(View->VS, &yyvsp[-19].d);  List_Add(View->VS, &yyvsp[-13].d);
      List_Add(View->VS, &yyvsp[-7].d); List_Add(View->VS, &yyvsp[-1].d);
    ;
    break;}
case 154:
#line 798 "Gmsh.y"
{
      View->NbVS++ ;
    ;
    break;}
case 155:
#line 805 "Gmsh.y"
{ List_Add(View->TS, &yyvsp[0].d) ; ;
    break;}
case 156:
#line 807 "Gmsh.y"
{ List_Add(View->TS, &yyvsp[0].d) ; ;
    break;}
case 157:
#line 815 "Gmsh.y"
{ 
      List_Add(View->TS, &yyvsp[-23].d);  List_Add(View->TS, &yyvsp[-17].d);
      List_Add(View->TS, &yyvsp[-11].d); List_Add(View->TS, &yyvsp[-5].d);
      List_Add(View->TS, &yyvsp[-21].d);  List_Add(View->TS, &yyvsp[-15].d);
      List_Add(View->TS, &yyvsp[-9].d); List_Add(View->TS, &yyvsp[-3].d);
      List_Add(View->TS, &yyvsp[-19].d);  List_Add(View->TS, &yyvsp[-13].d);
      List_Add(View->TS, &yyvsp[-7].d); List_Add(View->TS, &yyvsp[-1].d);
    ;
    break;}
case 158:
#line 824 "Gmsh.y"
{
      View->NbTS++ ;
    ;
    break;}
case 159:
#line 831 "Gmsh.y"
{ List_Add(View->SH, &yyvsp[0].d) ; ;
    break;}
case 160:
#line 833 "Gmsh.y"
{ List_Add(View->SH, &yyvsp[0].d) ; ;
    break;}
case 161:
#line 845 "Gmsh.y"
{ 
      List_Add(View->SH, &yyvsp[-47].d);  List_Add(View->SH, &yyvsp[-41].d);
      List_Add(View->SH, &yyvsp[-35].d); List_Add(View->SH, &yyvsp[-29].d);
      List_Add(View->SH, &yyvsp[-23].d); List_Add(View->SH, &yyvsp[-17].d);
      List_Add(View->SH, &yyvsp[-11].d); List_Add(View->SH, &yyvsp[-5].d);
      List_Add(View->SH, &yyvsp[-45].d);  List_Add(View->SH, &yyvsp[-39].d);
      List_Add(View->SH, &yyvsp[-33].d); List_Add(View->SH, &yyvsp[-27].d);
      List_Add(View->SH, &yyvsp[-21].d); List_Add(View->SH, &yyvsp[-15].d);
      List_Add(View->SH, &yyvsp[-9].d); List_Add(View->SH, &yyvsp[-3].d);
      List_Add(View->SH, &yyvsp[-43].d);  List_Add(View->SH, &yyvsp[-37].d);
      List_Add(View->SH, &yyvsp[-31].d); List_Add(View->SH, &yyvsp[-25].d);
      List_Add(View->SH, &yyvsp[-19].d); List_Add(View->SH, &yyvsp[-13].d);
      List_Add(View->SH, &yyvsp[-7].d); List_Add(View->SH, &yyvsp[-1].d);
    ;
    break;}
case 162:
#line 860 "Gmsh.y"
{
      View->NbSH++ ;
    ;
    break;}
case 163:
#line 867 "Gmsh.y"
{ List_Add(View->VH, &yyvsp[0].d) ; ;
    break;}
case 164:
#line 869 "Gmsh.y"
{ List_Add(View->VH, &yyvsp[0].d) ; ;
    break;}
case 165:
#line 881 "Gmsh.y"
{ 
      List_Add(View->VH, &yyvsp[-47].d);  List_Add(View->VH, &yyvsp[-41].d);
      List_Add(View->VH, &yyvsp[-35].d); List_Add(View->VH, &yyvsp[-29].d);
      List_Add(View->VH, &yyvsp[-23].d); List_Add(View->VH, &yyvsp[-17].d);
      List_Add(View->VH, &yyvsp[-11].d); List_Add(View->VH, &yyvsp[-5].d);
      List_Add(View->VH, &yyvsp[-45].d);  List_Add(View->VH, &yyvsp[-39].d);
      List_Add(View->VH, &yyvsp[-33].d); List_Add(View->VH, &yyvsp[-27].d);
      List_Add(View->VH, &yyvsp[-21].d); List_Add(View->VH, &yyvsp[-15].d);
      List_Add(View->VH, &yyvsp[-9].d); List_Add(View->VH, &yyvsp[-3].d);
      List_Add(View->VH, &yyvsp[-43].d);  List_Add(View->VH, &yyvsp[-37].d);
      List_Add(View->VH, &yyvsp[-31].d); List_Add(View->VH, &yyvsp[-25].d);
      List_Add(View->VH, &yyvsp[-19].d); List_Add(View->VH, &yyvsp[-13].d);
      List_Add(View->VH, &yyvsp[-7].d); List_Add(View->VH, &yyvsp[-1].d);
    ;
    break;}
case 166:
#line 896 "Gmsh.y"
{
      View->NbVH++ ;
    ;
    break;}
case 167:
#line 903 "Gmsh.y"
{ List_Add(View->TH, &yyvsp[0].d) ; ;
    break;}
case 168:
#line 905 "Gmsh.y"
{ List_Add(View->TH, &yyvsp[0].d) ; ;
    break;}
case 169:
#line 917 "Gmsh.y"
{ 
      List_Add(View->TH, &yyvsp[-47].d);  List_Add(View->TH, &yyvsp[-41].d);
      List_Add(View->TH, &yyvsp[-35].d); List_Add(View->TH, &yyvsp[-29].d);
      List_Add(View->TH, &yyvsp[-23].d); List_Add(View->TH, &yyvsp[-17].d);
      List_Add(View->TH, &yyvsp[-11].d); List_Add(View->TH, &yyvsp[-5].d);
      List_Add(View->TH, &yyvsp[-45].d);  List_Add(View->TH, &yyvsp[-39].d);
      List_Add(View->TH, &yyvsp[-33].d); List_Add(View->TH, &yyvsp[-27].d);
      List_Add(View->TH, &yyvsp[-21].d); List_Add(View->TH, &yyvsp[-15].d);
      List_Add(View->TH, &yyvsp[-9].d); List_Add(View->TH, &yyvsp[-3].d);
      List_Add(View->TH, &yyvsp[-43].d);  List_Add(View->TH, &yyvsp[-37].d);
      List_Add(View->TH, &yyvsp[-31].d); List_Add(View->TH, &yyvsp[-25].d);
      List_Add(View->TH, &yyvsp[-19].d); List_Add(View->TH, &yyvsp[-13].d);
      List_Add(View->TH, &yyvsp[-7].d); List_Add(View->TH, &yyvsp[-1].d);
    ;
    break;}
case 170:
#line 932 "Gmsh.y"
{
      View->NbTH++ ;
    ;
    break;}
case 171:
#line 939 "Gmsh.y"
{ List_Add(View->SI, &yyvsp[0].d) ; ;
    break;}
case 172:
#line 941 "Gmsh.y"
{ List_Add(View->SI, &yyvsp[0].d) ; ;
    break;}
case 173:
#line 951 "Gmsh.y"
{ 
      List_Add(View->SI, &yyvsp[-35].d);  List_Add(View->SI, &yyvsp[-29].d);
      List_Add(View->SI, &yyvsp[-23].d); List_Add(View->SI, &yyvsp[-17].d);
      List_Add(View->SI, &yyvsp[-11].d); List_Add(View->SI, &yyvsp[-5].d);
      List_Add(View->SI, &yyvsp[-33].d);  List_Add(View->SI, &yyvsp[-27].d);
      List_Add(View->SI, &yyvsp[-21].d); List_Add(View->SI, &yyvsp[-15].d);
      List_Add(View->SI, &yyvsp[-9].d); List_Add(View->SI, &yyvsp[-3].d);
      List_Add(View->SI, &yyvsp[-31].d);  List_Add(View->SI, &yyvsp[-25].d);
      List_Add(View->SI, &yyvsp[-19].d); List_Add(View->SI, &yyvsp[-13].d);
      List_Add(View->SI, &yyvsp[-7].d); List_Add(View->SI, &yyvsp[-1].d);
    ;
    break;}
case 174:
#line 963 "Gmsh.y"
{
      View->NbSI++ ;
    ;
    break;}
case 175:
#line 970 "Gmsh.y"
{ List_Add(View->VI, &yyvsp[0].d) ; ;
    break;}
case 176:
#line 972 "Gmsh.y"
{ List_Add(View->VI, &yyvsp[0].d) ; ;
    break;}
case 177:
#line 982 "Gmsh.y"
{ 
      List_Add(View->VI, &yyvsp[-35].d);  List_Add(View->VI, &yyvsp[-29].d);
      List_Add(View->VI, &yyvsp[-23].d); List_Add(View->VI, &yyvsp[-17].d);
      List_Add(View->VI, &yyvsp[-11].d); List_Add(View->VI, &yyvsp[-5].d);
      List_Add(View->VI, &yyvsp[-33].d);  List_Add(View->VI, &yyvsp[-27].d);
      List_Add(View->VI, &yyvsp[-21].d); List_Add(View->VI, &yyvsp[-15].d);
      List_Add(View->VI, &yyvsp[-9].d); List_Add(View->VI, &yyvsp[-3].d);
      List_Add(View->VI, &yyvsp[-31].d);  List_Add(View->VI, &yyvsp[-25].d);
      List_Add(View->VI, &yyvsp[-19].d); List_Add(View->VI, &yyvsp[-13].d);
      List_Add(View->VI, &yyvsp[-7].d); List_Add(View->VI, &yyvsp[-1].d);
    ;
    break;}
case 178:
#line 994 "Gmsh.y"
{
      View->NbVI++ ;
    ;
    break;}
case 179:
#line 1001 "Gmsh.y"
{ List_Add(View->TI, &yyvsp[0].d) ; ;
    break;}
case 180:
#line 1003 "Gmsh.y"
{ List_Add(View->TI, &yyvsp[0].d) ; ;
    break;}
case 181:
#line 1013 "Gmsh.y"
{ 
      List_Add(View->TI, &yyvsp[-35].d);  List_Add(View->TI, &yyvsp[-29].d);
      List_Add(View->TI, &yyvsp[-23].d); List_Add(View->TI, &yyvsp[-17].d);
      List_Add(View->TI, &yyvsp[-11].d); List_Add(View->TI, &yyvsp[-5].d);
      List_Add(View->TI, &yyvsp[-33].d);  List_Add(View->TI, &yyvsp[-27].d);
      List_Add(View->TI, &yyvsp[-21].d); List_Add(View->TI, &yyvsp[-15].d);
      List_Add(View->TI, &yyvsp[-9].d); List_Add(View->TI, &yyvsp[-3].d);
      List_Add(View->TI, &yyvsp[-31].d);  List_Add(View->TI, &yyvsp[-25].d);
      List_Add(View->TI, &yyvsp[-19].d); List_Add(View->TI, &yyvsp[-13].d);
      List_Add(View->TI, &yyvsp[-7].d); List_Add(View->TI, &yyvsp[-1].d);
    ;
    break;}
case 182:
#line 1025 "Gmsh.y"
{
      View->NbTI++ ;
    ;
    break;}
case 183:
#line 1032 "Gmsh.y"
{ List_Add(View->SY, &yyvsp[0].d) ; ;
    break;}
case 184:
#line 1034 "Gmsh.y"
{ List_Add(View->SY, &yyvsp[0].d) ; ;
    break;}
case 185:
#line 1043 "Gmsh.y"
{ 
      List_Add(View->SY, &yyvsp[-29].d);  List_Add(View->SY, &yyvsp[-23].d);
      List_Add(View->SY, &yyvsp[-17].d); List_Add(View->SY, &yyvsp[-11].d);
      List_Add(View->SY, &yyvsp[-5].d);
      List_Add(View->SY, &yyvsp[-27].d);  List_Add(View->SY, &yyvsp[-21].d);
      List_Add(View->SY, &yyvsp[-15].d); List_Add(View->SY, &yyvsp[-9].d);
      List_Add(View->SY, &yyvsp[-3].d);
      List_Add(View->SY, &yyvsp[-25].d);  List_Add(View->SY, &yyvsp[-19].d);
      List_Add(View->SY, &yyvsp[-13].d); List_Add(View->SY, &yyvsp[-7].d);
      List_Add(View->SY, &yyvsp[-1].d);
    ;
    break;}
case 186:
#line 1055 "Gmsh.y"
{
      View->NbSY++ ;
    ;
    break;}
case 187:
#line 1062 "Gmsh.y"
{ List_Add(View->VY, &yyvsp[0].d) ; ;
    break;}
case 188:
#line 1064 "Gmsh.y"
{ List_Add(View->VY, &yyvsp[0].d) ; ;
    break;}
case 189:
#line 1073 "Gmsh.y"
{ 
      List_Add(View->VY, &yyvsp[-29].d);  List_Add(View->VY, &yyvsp[-23].d);
      List_Add(View->VY, &yyvsp[-17].d); List_Add(View->VY, &yyvsp[-11].d);
      List_Add(View->VY, &yyvsp[-5].d);
      List_Add(View->VY, &yyvsp[-27].d);  List_Add(View->VY, &yyvsp[-21].d);
      List_Add(View->VY, &yyvsp[-15].d); List_Add(View->VY, &yyvsp[-9].d);
      List_Add(View->VY, &yyvsp[-3].d);
      List_Add(View->VY, &yyvsp[-25].d);  List_Add(View->VY, &yyvsp[-19].d);
      List_Add(View->VY, &yyvsp[-13].d); List_Add(View->VY, &yyvsp[-7].d);
      List_Add(View->VY, &yyvsp[-1].d);
    ;
    break;}
case 190:
#line 1085 "Gmsh.y"
{
      View->NbVY++ ;
    ;
    break;}
case 191:
#line 1092 "Gmsh.y"
{ List_Add(View->TY, &yyvsp[0].d) ; ;
    break;}
case 192:
#line 1094 "Gmsh.y"
{ List_Add(View->TY, &yyvsp[0].d) ; ;
    break;}
case 193:
#line 1103 "Gmsh.y"
{ 
      List_Add(View->TY, &yyvsp[-29].d);  List_Add(View->TY, &yyvsp[-23].d);
      List_Add(View->TY, &yyvsp[-17].d); List_Add(View->TY, &yyvsp[-11].d);
      List_Add(View->TY, &yyvsp[-5].d);
      List_Add(View->TY, &yyvsp[-27].d);  List_Add(View->TY, &yyvsp[-21].d);
      List_Add(View->TY, &yyvsp[-15].d); List_Add(View->TY, &yyvsp[-9].d);
      List_Add(View->TY, &yyvsp[-3].d);
      List_Add(View->TY, &yyvsp[-25].d);  List_Add(View->TY, &yyvsp[-19].d);
      List_Add(View->TY, &yyvsp[-13].d); List_Add(View->TY, &yyvsp[-7].d);
      List_Add(View->TY, &yyvsp[-1].d);
    ;
    break;}
case 194:
#line 1115 "Gmsh.y"
{
      View->NbTY++ ;
    ;
    break;}
case 195:
#line 1122 "Gmsh.y"
{ 
      for(i=0; i<(int)strlen(yyvsp[0].c)+1; i++) List_Add(View->T2C, &yyvsp[0].c[i]) ; 
      Free(yyvsp[0].c);
    ;
    break;}
case 196:
#line 1127 "Gmsh.y"
{ 
      for(i=0; i<(int)strlen(yyvsp[0].c)+1; i++) List_Add(View->T2C, &yyvsp[0].c[i]) ; 
      Free(yyvsp[0].c);
    ;
    break;}
case 197:
#line 1135 "Gmsh.y"
{ 
      List_Add(View->T2D, &yyvsp[-5].d); List_Add(View->T2D, &yyvsp[-3].d);
      List_Add(View->T2D, &yyvsp[-1].d); 
      d = List_Nbr(View->T2C);
      List_Add(View->T2D, &d); 
    ;
    break;}
case 198:
#line 1142 "Gmsh.y"
{
      View->NbT2++ ;
    ;
    break;}
case 199:
#line 1149 "Gmsh.y"
{ 
      for(i=0; i<(int)strlen(yyvsp[0].c)+1; i++) List_Add(View->T3C, &yyvsp[0].c[i]) ; 
      Free(yyvsp[0].c);
    ;
    break;}
case 200:
#line 1154 "Gmsh.y"
{ 
      for(i=0; i<(int)strlen(yyvsp[0].c)+1; i++) List_Add(View->T3C, &yyvsp[0].c[i]) ; 
      Free(yyvsp[0].c);
    ;
    break;}
case 201:
#line 1162 "Gmsh.y"
{ 
      List_Add(View->T3D, &yyvsp[-7].d); List_Add(View->T3D, &yyvsp[-5].d);
      List_Add(View->T3D, &yyvsp[-3].d); List_Add(View->T3D, &yyvsp[-1].d); 
      d = List_Nbr(View->T3C);
      List_Add(View->T3D, &d); 
    ;
    break;}
case 202:
#line 1169 "Gmsh.y"
{
      View->NbT3++ ;
    ;
    break;}
case 203:
#line 1178 "Gmsh.y"
{ yyval.i = 0 ; ;
    break;}
case 204:
#line 1179 "Gmsh.y"
{ yyval.i = 1 ; ;
    break;}
case 205:
#line 1180 "Gmsh.y"
{ yyval.i = 2 ; ;
    break;}
case 206:
#line 1181 "Gmsh.y"
{ yyval.i = 3 ; ;
    break;}
case 207:
#line 1182 "Gmsh.y"
{ yyval.i = 4 ; ;
    break;}
case 208:
#line 1186 "Gmsh.y"
{ yyval.i = 1 ; ;
    break;}
case 209:
#line 1187 "Gmsh.y"
{ yyval.i = -1 ; ;
    break;}
case 210:
#line 1195 "Gmsh.y"
{
      TheSymbol.Name = yyvsp[-3].c;
      if (!(pSymbol = (Symbol*)List_PQuery(Symbol_L, &TheSymbol, CompareSymbols))){
	TheSymbol.val = List_Create(1,1,sizeof(double));
	if(!yyvsp[-2].i){
	  List_Put(TheSymbol.val, 0, &yyvsp[-1].d);
	  List_Add(Symbol_L, &TheSymbol);
	}
	else
	  yymsg(GERROR, "Unknown variable '%s'", yyvsp[-3].c) ;
      }
      else{
	pd = (double*)List_Pointer_Fast(pSymbol->val, 0) ; 
	switch(yyvsp[-2].i){
	case 0 : *pd = yyvsp[-1].d; break ;
	case 1 : *pd += yyvsp[-1].d ; break ;
	case 2 : *pd -= yyvsp[-1].d ; break ;
	case 3 : *pd *= yyvsp[-1].d ; break ;
	case 4 : 
	  if(yyvsp[-1].d) *pd /= yyvsp[-1].d ; 
	  else yymsg(GERROR, "Division by zero in '%s /= %g'", yyvsp[-3].c, yyvsp[-1].d);
	  break;
	}
      }
    ;
    break;}
case 211:
#line 1222 "Gmsh.y"
{
      TheSymbol.Name = yyvsp[-6].c;
      if (!(pSymbol = (Symbol*)List_PQuery(Symbol_L, &TheSymbol, CompareSymbols))){
	TheSymbol.val = List_Create(5,5,sizeof(double));
	if(!yyvsp[-2].i){
	  List_Put(TheSymbol.val, (int)yyvsp[-4].d, &yyvsp[-1].d);
	  List_Add(Symbol_L, &TheSymbol);
	}
	else
	  yymsg(GERROR, "Unknown variable '%s'", yyvsp[-6].c) ;
      }
      else{
	if((pd = (double*)List_Pointer_Test(pSymbol->val, (int)yyvsp[-4].d))){
	  switch(yyvsp[-2].i){
	  case 0 : *pd = yyvsp[-1].d; break ;
	  case 1 : *pd += yyvsp[-1].d ; break ;
	  case 2 : *pd -= yyvsp[-1].d ; break ;
	  case 3 : *pd *= yyvsp[-1].d ; break ;
	  case 4 : 
	    if(yyvsp[-1].d) *pd /= yyvsp[-1].d ; 
	    else yymsg(GERROR, "Division by zero in '%s[%d] /= %g'", yyvsp[-6].c, (int)yyvsp[-4].d, yyvsp[-1].d);
	    break;
	  }
	}
	else{
	  if(!yyvsp[-2].i)
	    List_Put(pSymbol->val, (int)yyvsp[-4].d, &yyvsp[-1].d);
	  else
	    yymsg(GERROR, "Uninitialized variable '%s[%d]'", yyvsp[-6].c, (int)yyvsp[-4].d) ;
	}
      }
    ;
    break;}
case 212:
#line 1256 "Gmsh.y"
{
      if(List_Nbr(yyvsp[-5].l) != List_Nbr(yyvsp[-1].l))
	yymsg(GERROR, "Incompatible array dimensions in affectation");
      else{
	TheSymbol.Name = yyvsp[-8].c;
	if (!(pSymbol = (Symbol*)List_PQuery(Symbol_L, &TheSymbol, CompareSymbols))){
	  TheSymbol.val = List_Create(5,5,sizeof(double));
	  if(!yyvsp[-2].i){
	    for(i=0 ; i<List_Nbr(yyvsp[-5].l) ; i++){
	      List_Put(TheSymbol.val, (int)(*(double*)List_Pointer(yyvsp[-5].l,i)),
		       (double*)List_Pointer(yyvsp[-1].l,i));
	    }
	    List_Add(Symbol_L, &TheSymbol);
	  }
	  else
	    yymsg(GERROR, "Unknown variable '%s'", yyvsp[-8].c) ;
	}
	else{
	  for(i=0 ; i<List_Nbr(yyvsp[-5].l) ; i++){
	    j = (int)(*(double*)List_Pointer(yyvsp[-5].l,i)) ;
	    d = *(double*)List_Pointer(yyvsp[-1].l,i) ;
	    if((pd = (double*)List_Pointer_Test(pSymbol->val, j))){
	      switch(yyvsp[-2].i){
	      case 0 : *pd = d; break ;
	      case 1 : *pd += d ; break ;
	      case 2 : *pd -= d ; break ;
	      case 3 : *pd *= d ; break ;
	      case 4 : 
		if(yyvsp[-1].l) *pd /= d ; 
		else yymsg(GERROR, "Division by zero in '%s[%d] /= %g'", yyvsp[-8].c, j, d);
		break;
	      }
	    }
	    else{
	      if(!yyvsp[-2].i)
		List_Put(pSymbol->val, j, &d);
	      else
		yymsg(GERROR, "Uninitialized variable '%s[%d]'", yyvsp[-8].c, j) ;	  
	    }
	  }
	}
      }
      List_Delete(yyvsp[-5].l);
      List_Delete(yyvsp[-1].l);
    ;
    break;}
case 213:
#line 1303 "Gmsh.y"
{
      TheSymbol.Name = yyvsp[-5].c;
      if (!(pSymbol = (Symbol*)List_PQuery(Symbol_L, &TheSymbol, CompareSymbols))){
	TheSymbol.val = List_Create(5,5,sizeof(double));
	List_Copy(yyvsp[-1].l,TheSymbol.val);
	List_Add(Symbol_L, &TheSymbol);
      }
      else{
	List_Reset(pSymbol->val);
	List_Copy(yyvsp[-1].l, pSymbol->val);
      }
      List_Delete(yyvsp[-1].l);
    ;
    break;}
case 214:
#line 1318 "Gmsh.y"
{
      TheSymbol.Name = yyvsp[-2].c;
      if (!(pSymbol = (Symbol*)List_PQuery(Symbol_L, &TheSymbol, CompareSymbols)))
	yymsg(GERROR, "Unknown variable '%s'", yyvsp[-2].c) ; 
      else
	*(double*)List_Pointer_Fast(pSymbol->val, 0) += yyvsp[-1].i; 
    ;
    break;}
case 215:
#line 1327 "Gmsh.y"
{
      TheSymbol.Name = yyvsp[-5].c ;
      if (!(pSymbol = (Symbol*)List_PQuery(Symbol_L, &TheSymbol, CompareSymbols)))
	yymsg(GERROR, "Unknown variable '%s'", yyvsp[-5].c) ; 
      else{
	if((pd = (double*)List_Pointer_Test(pSymbol->val, (int)yyvsp[-3].d)))
	  *pd += yyvsp[-1].i ;
	else
	  yymsg(GERROR, "Uninitialized variable '%s[%d]'", yyvsp[-5].c, (int)yyvsp[-3].d) ;
      }
    ;
    break;}
case 216:
#line 1342 "Gmsh.y"
{ 
      if(!(pStrCat = Get_StringOptionCategory(yyvsp[-5].c)))
	yymsg(GERROR, "Unknown string option class '%s'", yyvsp[-5].c);
      else{
	if(!(pStrOpt = (char *(*) (int, int, char *))Get_StringOption(yyvsp[-3].c, pStrCat)))
	  yymsg(GERROR, "Unknown string option '%s.%s'", yyvsp[-5].c, yyvsp[-3].c);
	else
	  pStrOpt(0,GMSH_SET|GMSH_GUI,yyvsp[-1].c) ;
      }
    ;
    break;}
case 217:
#line 1354 "Gmsh.y"
{ 
      if(!(pStrCat = Get_StringOptionCategory(yyvsp[-8].c)))
	yymsg(GERROR, "Unknown string option class '%s'", yyvsp[-8].c);
      else{
	if(!(pStrOpt = (char *(*) (int, int, char *))Get_StringOption(yyvsp[-3].c, pStrCat)))
	  yymsg(GERROR, "Unknown string option '%s[%d].%s'", yyvsp[-8].c, (int)yyvsp[-6].d, yyvsp[-3].c);
	else
	  pStrOpt((int)yyvsp[-6].d,GMSH_SET|GMSH_GUI,yyvsp[-1].c) ;
      }
    ;
    break;}
case 218:
#line 1368 "Gmsh.y"
{
      if(!(pNumCat = Get_NumberOptionCategory(yyvsp[-5].c)))
	yymsg(GERROR, "Unknown numeric option class '%s'", yyvsp[-5].c);
      else{
	if(!(pNumOpt = (double (*) (int, int, double))Get_NumberOption(yyvsp[-3].c, pNumCat)))
	  yymsg(GERROR, "Unknown numeric option '%s.%s'", yyvsp[-5].c, yyvsp[-3].c);
	else{
	  switch(yyvsp[-2].i){
	  case 0 : d = yyvsp[-1].d ; break ;
	  case 1 : d = pNumOpt(0,GMSH_GET,0) + yyvsp[-1].d ; break ;
	  case 2 : d = pNumOpt(0,GMSH_GET,0) - yyvsp[-1].d ; break ;
	  case 3 : d = pNumOpt(0,GMSH_GET,0) * yyvsp[-1].d ; break ;
	  case 4 : 
	    if(yyvsp[-1].d) d = pNumOpt(0,GMSH_GET,0) / yyvsp[-1].d ; 
	    else yymsg(GERROR, "Division by zero in '%s.%s /= %g'", yyvsp[-5].c, yyvsp[-3].c, yyvsp[-1].d);
	    break;
	  }
	  pNumOpt(0,GMSH_SET|GMSH_GUI, d) ;
	}
      }
    ;
    break;}
case 219:
#line 1391 "Gmsh.y"
{
      if(!(pNumCat = Get_NumberOptionCategory(yyvsp[-8].c)))
	yymsg(GERROR, "Unknown numeric option class '%s'", yyvsp[-8].c);
      else{
	if(!(pNumOpt =  (double (*) (int, int, double))Get_NumberOption(yyvsp[-3].c, pNumCat)))
	  yymsg(GERROR, "Unknown numeric option '%s[%d].%s'", yyvsp[-8].c, (int)yyvsp[-6].d, yyvsp[-3].c);
	else{
	  switch(yyvsp[-2].i){
	  case 0 : d = yyvsp[-1].d; break ;
	  case 1 : d = pNumOpt((int)yyvsp[-6].d,GMSH_GET,0) + yyvsp[-1].d ; break ;
	  case 2 : d = pNumOpt((int)yyvsp[-6].d,GMSH_GET,0) - yyvsp[-1].d ; break ;
	  case 3 : d = pNumOpt((int)yyvsp[-6].d,GMSH_GET,0) * yyvsp[-1].d ; break ;
	  case 4 : 
	    if(yyvsp[-1].d) d = pNumOpt((int)yyvsp[-6].d,GMSH_GET,0) / yyvsp[-1].d ;
	    else yymsg(GERROR, "Division by zero in '%s[%d].%s /= %g'", 
		       yyvsp[-8].c, (int)yyvsp[-6].d, yyvsp[-3].c, yyvsp[-1].d);
	    break;
	  }
	  pNumOpt((int)yyvsp[-6].d,GMSH_SET|GMSH_GUI,d) ;
	}
      }
    ;
    break;}
case 220:
#line 1415 "Gmsh.y"
{
      if(!(pNumCat = Get_NumberOptionCategory(yyvsp[-4].c)))
	yymsg(GERROR, "Unknown numeric option class '%s'", yyvsp[-4].c);
      else{
	if(!(pNumOpt =  (double (*) (int, int, double))Get_NumberOption(yyvsp[-2].c, pNumCat)))
	  yymsg(GERROR, "Unknown numeric option '%s.%s'", yyvsp[-4].c, yyvsp[-2].c);
	else
	  pNumOpt(0,GMSH_SET|GMSH_GUI,pNumOpt(0,GMSH_GET,0)+yyvsp[-1].i) ;
      }
    ;
    break;}
case 221:
#line 1427 "Gmsh.y"
{
      if(!(pNumCat = Get_NumberOptionCategory(yyvsp[-7].c)))
	yymsg(GERROR, "Unknown numeric option class '%s'", yyvsp[-7].c);
      else{
	if(!(pNumOpt =  (double (*) (int, int, double))Get_NumberOption(yyvsp[-2].c, pNumCat)))
	  yymsg(GERROR, "Unknown numeric option '%s[%d].%s'", yyvsp[-7].c, (int)yyvsp[-5].d, yyvsp[-2].c);
	else
	  pNumOpt((int)yyvsp[-5].d,GMSH_SET|GMSH_GUI,pNumOpt((int)yyvsp[-5].d,GMSH_GET,0)+yyvsp[-1].i) ;
      }
    ;
    break;}
case 222:
#line 1441 "Gmsh.y"
{
      if(!(pColCat = Get_ColorOptionCategory(yyvsp[-7].c)))
	yymsg(GERROR, "Unknown color option class '%s'", yyvsp[-7].c);
      else{
	if(!(pColOpt =  (unsigned int (*) (int, int, unsigned int))Get_ColorOption(yyvsp[-3].c, pColCat)))
	  yymsg(GERROR, "Unknown color option '%s.Color.%s'", yyvsp[-7].c, yyvsp[-3].c);
	else
	  pColOpt(0,GMSH_SET|GMSH_GUI,yyvsp[-1].u) ;
      }
    ;
    break;}
case 223:
#line 1453 "Gmsh.y"
{
      if(!(pColCat = Get_ColorOptionCategory(yyvsp[-10].c)))
	yymsg(GERROR, "Unknown color option class '%s'", yyvsp[-10].c);
      else{
	if(!(pColOpt =  (unsigned int (*) (int, int, unsigned int))Get_ColorOption(yyvsp[-3].c, pColCat)))
	  yymsg(GERROR, "Unknown color option '%s[%d].Color.%s'", yyvsp[-10].c, (int)yyvsp[-8].d, yyvsp[-3].c);
	else
	  pColOpt((int)yyvsp[-8].d,GMSH_SET|GMSH_GUI,yyvsp[-1].u) ;
      }
    ;
    break;}
case 224:
#line 1467 "Gmsh.y"
{
      GmshColorTable *ct = Get_ColorTable(0);
      if(!ct)
	yymsg(GERROR, "View[%d] does not exist", 0);
      else{
	ct->size = List_Nbr(yyvsp[-1].l);
	if(ct->size > COLORTABLE_NBMAX_COLOR)
	  yymsg(GERROR, "Too many (%d>%d) colors in View[%d].ColorTable", 
		ct->size, COLORTABLE_NBMAX_COLOR, 0);
	else
	  for(i=0 ; i<ct->size ; i++) List_Read(yyvsp[-1].l, i, &ct->table[i]);
	if(ct->size == 1){
	  ct->size = 2;
	  ct->table[1] = ct->table[0];
	}
      }
      List_Delete(yyvsp[-1].l);
    ;
    break;}
case 225:
#line 1487 "Gmsh.y"
{
      GmshColorTable *ct = Get_ColorTable((int)yyvsp[-6].d);
      if(!ct)
	yymsg(GERROR, "View[%d] does not exist", (int)yyvsp[-6].d);
      else{
	ct->size = List_Nbr(yyvsp[-1].l);
	if(ct->size > COLORTABLE_NBMAX_COLOR)
	  yymsg(GERROR, "Too many (%d>%d) colors in View[%d].ColorTable", 
		   ct->size, COLORTABLE_NBMAX_COLOR, (int)yyvsp[-6].d);
	else
	  for(i=0 ; i<ct->size ; i++) List_Read(yyvsp[-1].l, i, &ct->table[i]);
	if(ct->size == 1){
	  ct->size = 2;
	  ct->table[1] = ct->table[0];
	}
      }
      List_Delete(yyvsp[-1].l);
    ;
    break;}
case 226:
#line 1509 "Gmsh.y"
{
      if(CTX.default_plugins){
	try {
	  GMSH_PluginManager::Instance()->SetPluginOption(yyvsp[-6].c,yyvsp[-3].c,yyvsp[-1].d); 
	}
	catch (...) {
	  yymsg(WARNING, "Unknown option '%s' or plugin '%s'",yyvsp[-3].c,yyvsp[-6].c);
	}
      }
    ;
    break;}
case 227:
#line 1521 "Gmsh.y"
{
      if(CTX.default_plugins){
	try {
	  GMSH_PluginManager::Instance()->SetPluginOption(yyvsp[-6].c,yyvsp[-3].c,yyvsp[-1].c); 
	}
	catch (...) {
	  yymsg(WARNING, "Unknown option '%s' or plugin '%s'",yyvsp[-3].c,yyvsp[-6].c);
	}
      }
    ;
    break;}
case 228:
#line 1541 "Gmsh.y"
{
      Cdbpts101((int)yyvsp[-4].d,yyvsp[-1].v[0],yyvsp[-1].v[1],yyvsp[-1].v[2],yyvsp[-1].v[3],yyvsp[-1].v[4]);
      yyval.s.Type = MSH_POINT;
      yyval.s.Num  = (int)yyvsp[-4].d;
    ;
    break;}
case 229:
#line 1548 "Gmsh.y"
{
      Cdbz101((int)yyvsp[-4].d,MSH_PHYSICAL_POINT,0,0,0,0,0,NULL,yyvsp[-1].l,NULL);
      yyval.s.Type = MSH_PHYSICAL_POINT;
      yyval.s.Num  = (int)yyvsp[-4].d;
    ;
    break;}
case 230:
#line 1554 "Gmsh.y"
{
      Vertex *v;
      Attractor *a;
      double p;
      int ip;
      for(int i=0;i<List_Nbr(yyvsp[-9].l);i++){
      	List_Read(yyvsp[-9].l,i,&p);
        ip = (int)p;
        v = FindPoint(ip,THEM);
        if(!v)
	  yymsg(WARNING, "Unknown Point %d", ip);
	else{
	  a = Create_Attractor(List_Nbr(THEM->Metric->Attractors)+1,
			       yyvsp[-6].d,yyvsp[-4].d,yyvsp[-2].d,v,NULL,NULL);
	  List_Add(THEM->Metric->Attractors,&a);
        }
      }
    ;
    break;}
case 231:
#line 1573 "Gmsh.y"
{
      for(i=0;i<List_Nbr(yyvsp[-3].l);i++){
	List_Read(yyvsp[-3].l,i,&d);
	Vertex *v = FindPoint((int)d,THEM);
	if(!v)
	  yymsg(WARNING, "Unknown Point %d", (int)d);
	else
	  v->lc = yyvsp[-1].d;
      }
    ;
    break;}
case 232:
#line 1587 "Gmsh.y"
{
      Cdbseg101((int)yyvsp[-4].d,MSH_SEGM_LINE,1,yyvsp[-1].l,NULL,-1,-1,0.,1.,NULL,NULL,NULL);
      yyval.s.Type = MSH_SEGM_LINE;
      yyval.s.Num  = (int)yyvsp[-4].d;
    ;
    break;}
case 233:
#line 1593 "Gmsh.y"
{
      Cdbseg101((int)yyvsp[-4].d,MSH_SEGM_SPLN,3,yyvsp[-1].l,NULL,-1,-1,0.,1.,NULL,NULL,NULL);
      yyval.s.Type = MSH_SEGM_SPLN;
      yyval.s.Num  = (int)yyvsp[-4].d;
    ;
    break;}
case 234:
#line 1599 "Gmsh.y"
{
      Curve *c;
      Attractor *a;
      double p;
      int ip;
      for(int i=0;i<List_Nbr(yyvsp[-9].l);i++){
      	List_Read(yyvsp[-9].l,i,&p);
        ip = (int)p;
        c = FindCurve(ip,THEM);
        if(!c)
	  yymsg(WARNING, "Unknown Curve %d", ip);
	else{
	  a = Create_Attractor(List_Nbr(THEM->Metric->Attractors)+1,
			       yyvsp[-6].d,yyvsp[-4].d,yyvsp[-2].d,NULL,c,NULL);
	  List_Add(THEM->Metric->Attractors,&a);
        }
      }
    ;
    break;}
case 235:
#line 1618 "Gmsh.y"
{
      Cdbseg101((int)yyvsp[-4].d,MSH_SEGM_CIRC,2,yyvsp[-1].l,NULL,-1,-1,0.,1.,NULL,NULL,NULL);
      yyval.s.Type = MSH_SEGM_CIRC ;
      yyval.s.Num  = (int)yyvsp[-4].d;
    ;
    break;}
case 236:
#line 1624 "Gmsh.y"
{
      Cdbseg101((int)yyvsp[-4].d,MSH_SEGM_ELLI,2,yyvsp[-1].l,NULL,-1,-1,0.,1.,NULL,NULL,NULL);
      yyval.s.Type = MSH_SEGM_ELLI ;
      yyval.s.Num  = (int)yyvsp[-4].d;
    ;
    break;}
case 237:
#line 1630 "Gmsh.y"
{
      List_T *temp;
      int i,j;
      double d;
      temp = List_Create(List_Nbr(yyvsp[-3].l),1,sizeof(int));
      for(i=0;i<List_Nbr(yyvsp[-3].l);i++){
      	List_Read(yyvsp[-3].l,i,&d);
        j = (int)d;
        List_Add(temp,&j);
      }
      AddCircleInDataBase ((int) yyvsp[-6].d, MSH_SEGM_CIRC, temp, yyvsp[-1].v);
      List_Delete(temp);
      yyval.s.Type = MSH_SEGM_CIRC ;
      yyval.s.Num  = (int)yyvsp[-6].d;
    ;
    break;}
case 238:
#line 1647 "Gmsh.y"
{
      Cdbseg101((int)yyvsp[-14].d,MSH_SEGM_PARAMETRIC,2,NULL,NULL,-1,-1,yyvsp[-10].d,yyvsp[-8].d,yyvsp[-6].c,yyvsp[-4].c,yyvsp[-2].c);
      yyval.s.Type = MSH_SEGM_PARAMETRIC ;
      yyval.s.Num  = (int)yyvsp[-14].d;
    ;
    break;}
case 239:
#line 1653 "Gmsh.y"
{
      Cdbz101((int)yyvsp[-4].d,MSH_PHYSICAL_LINE,0,0,0,0,0,NULL,yyvsp[-1].l,NULL);
      yyval.s.Type = MSH_PHYSICAL_LINE;
      yyval.s.Num  = (int)yyvsp[-4].d;
    ;
    break;}
case 240:
#line 1659 "Gmsh.y"
{
      yyval.s.Type = MSH_SEGM_LOOP;
      Cdbz101((int)yyvsp[-4].d,yyval.s.Type,0,0,0,0,0,NULL,yyvsp[-1].l,NULL);
      yyval.s.Num = (int)yyvsp[-4].d;
    ;
    break;}
case 241:
#line 1665 "Gmsh.y"
{
      if(List_Nbr(yyvsp[-1].l) > 3){
	Cdbseg101((int)yyvsp[-4].d,MSH_SEGM_BSPLN,2,yyvsp[-1].l,NULL,-1,-1,0.,1.,NULL,NULL,NULL);
	yyval.s.Type = MSH_SEGM_BSPLN;
	yyval.s.Num  = (int)yyvsp[-4].d;
      }
      else
	yymsg(GERROR, "Too few control points for BSpline %d (%d < 4)", (int)yyvsp[-4].d, 
	      List_Nbr(yyvsp[-1].l));
    ;
    break;}
case 242:
#line 1676 "Gmsh.y"
{
      if(List_Nbr(yyvsp[-1].l) > 3){
	Cdbseg101((int)yyvsp[-4].d,MSH_SEGM_BEZIER,2,yyvsp[-1].l,NULL,-1,-1,0.,1.,NULL,NULL,NULL);
	yyval.s.Type = MSH_SEGM_BSPLN;
	yyval.s.Num  = (int)yyvsp[-4].d;
      }
      else
	yymsg(GERROR, "Too few control points for Bezier %d (%d < 4)", (int)yyvsp[-4].d, 
	      List_Nbr(yyvsp[-1].l));
    ;
    break;}
case 243:
#line 1687 "Gmsh.y"
{
      List_T *Temp;
      int i;
      double d;
      if(List_Nbr(yyvsp[-5].l) + (int)yyvsp[-1].d + 1 != List_Nbr(yyvsp[-3].l)){
	yymsg(GERROR, "Wrong definition of Nurbs Curve %d: "
	      "got %d Knots, need N + D + 1 = %d + %d + 1 = %d",
	      (int)yyvsp[-8].d, 
	      List_Nbr(yyvsp[-3].l), List_Nbr(yyvsp[-5].l), (int)yyvsp[-1].d, List_Nbr(yyvsp[-5].l) + (int)yyvsp[-1].d + 1);
      }
      else{
	Temp = List_Create(List_Nbr(yyvsp[-5].l),1,sizeof(int));
	for(i=0;i<List_Nbr(yyvsp[-5].l);i++) {
	  List_Read(yyvsp[-5].l,i,&d);
	  j = (int)d;
	  List_Add(Temp,&j);
	}
	AddCurveInDataBase ((int)yyvsp[-8].d,MSH_SEGM_NURBS,(int)yyvsp[-1].d,Temp,yyvsp[-3].l,-1,-1,0.,1.);
	List_Delete(Temp);
      }
    ;
    break;}
case 244:
#line 1712 "Gmsh.y"
{
      Cdbz101((int)yyvsp[-4].d,MSH_SURF_PLAN,0,0,0,0,0,NULL,yyvsp[-1].l,NULL);
      yyval.s.Type = MSH_SURF_PLAN;
      yyval.s.Num  = (int)yyvsp[-4].d;
    ;
    break;}
case 245:
#line 1718 "Gmsh.y"
{
      Surface *s,*support;
      support = FindSurface((int)yyvsp[-4].d,THEM);
      if(!support)
	yymsg(GERROR, "Unknown Surface %d", (int)yyvsp[-4].d);
      else{
	Cdbz101((int)yyvsp[-8].d,MSH_SURF_PLAN,0,0,0,0,0,NULL,yyvsp[-2].l,NULL);
	s = FindSurface((int)yyvsp[-8].d,THEM);
	if(!s)
	  yymsg(GERROR, "Unknown Surface %d", (int)yyvsp[-8].d);
	else{
	  s->Typ =  MSH_SURF_TRIMMED;
	  s->Support = support;
	  yyval.s.Type = MSH_SURF_TRIMMED;
	  yyval.s.Num  = (int)yyvsp[-8].d;
	}
      }
    ;
    break;}
case 246:
#line 1737 "Gmsh.y"
{
      List_Read(yyvsp[-1].l,0,&d);
      i = (int)d;
      EdgeLoop *el = FindEdgeLoop(i,THEM);
      if(!el)
	yymsg(GERROR, "Unknown Line Loop %d", i);
      else{
	j = List_Nbr(el->Curves);
	if(j==4)
	  yyval.s.Type = MSH_SURF_REGL;
	else if(j==3)
	  yyval.s.Type  = MSH_SURF_TRIC;
	else
	  yymsg(GERROR, "Wrong definition of Ruled Surface %d: "
		   "%d borders instead of 3 or 4", 
		   (int)yyvsp[-4].d, j);
	Cdbz101((int)yyvsp[-4].d,yyval.s.Type,0,0,0,0,0,NULL,yyvsp[-1].l,NULL);
	yyval.s.Num = (int)yyvsp[-4].d;
      }
    ;
    break;}
case 247:
#line 1759 "Gmsh.y"
{
    AddTriangulationToSurface ((int) yyvsp[-10].d, (int) yyvsp[-6].d, (int) yyvsp[-4].d,yyvsp[-2].l,yyvsp[-1].l);
    yyval.s.Num = (int)yyvsp[-10].d;
  ;
    break;}
case 248:
#line 1767 "Gmsh.y"
{
      CreateNurbsSurface ( (int) yyvsp[-16].d , (int)yyvsp[-4].d , (int)yyvsp[-2].d  , yyvsp[-13].l, yyvsp[-10].l, yyvsp[-8].l);
      yyval.s.Type  = MSH_SURF_NURBS;
      yyval.s.Num = (int)yyvsp[-16].d;
    ;
    break;}
case 249:
#line 1775 "Gmsh.y"
{
      CreateNurbsSurfaceSupport ((int)yyvsp[-16].d, (int) yyvsp[-4].d , (int) yyvsp[-2].d , yyvsp[-13].l, yyvsp[-10].l, yyvsp[-8].l);
    ;
    break;}
case 250:
#line 1779 "Gmsh.y"
{
      Cdbz101((int)yyvsp[-4].d,MSH_PHYSICAL_SURFACE,0,0,0,0,0,NULL,yyvsp[-1].l,NULL);
      yyval.s.Type = MSH_PHYSICAL_SURFACE;
      yyval.s.Num  = (int)yyvsp[-4].d;
    ;
    break;}
case 251:
#line 1785 "Gmsh.y"
{
      Cdbz101((int)yyvsp[-4].d,MSH_SURF_LOOP,0,0,0,0,0,NULL,yyvsp[-1].l,NULL);
      yyval.s.Type = MSH_SURF_LOOP;
      yyval.s.Num  = (int)yyvsp[-4].d;
    ;
    break;}
case 252:
#line 1794 "Gmsh.y"
{
      Cdbz101((int)yyvsp[-4].d,MSH_VOLUME,0,0,0,0,0,NULL,yyvsp[-1].l,NULL);
      yyval.s.Type = MSH_VOLUME;
      yyval.s.Num  = (int)yyvsp[-4].d;      
    ;
    break;}
case 253:
#line 1800 "Gmsh.y"
{
      Cdbz101((int)yyvsp[-4].d,MSH_VOLUME,0,0,0,0,0,NULL,yyvsp[-1].l,NULL);
      yyval.s.Type = MSH_VOLUME;
      yyval.s.Num  = (int)yyvsp[-4].d;
    ;
    break;}
case 254:
#line 1806 "Gmsh.y"
{
      Cdbz101((int)yyvsp[-4].d,MSH_PHYSICAL_VOLUME,0,0,0,0,0,NULL,yyvsp[-1].l,NULL);
      yyval.s.Type = MSH_PHYSICAL_VOLUME;
      yyval.s.Num  = (int)yyvsp[-4].d;
    ;
    break;}
case 255:
#line 1817 "Gmsh.y"
{
      TranslateShapes (yyvsp[-3].v[0],yyvsp[-3].v[1],yyvsp[-3].v[2],yyvsp[-1].l,1);
      yyval.l = yyvsp[-1].l;
    ;
    break;}
case 256:
#line 1822 "Gmsh.y"
{
      RotateShapes(yyvsp[-8].v[0],yyvsp[-8].v[1],yyvsp[-8].v[2],yyvsp[-6].v[0],yyvsp[-6].v[1],yyvsp[-6].v[2],yyvsp[-4].d,yyvsp[-1].l,1);
      yyval.l = yyvsp[-1].l;
    ;
    break;}
case 257:
#line 1827 "Gmsh.y"
{
      SymmetryShapes(yyvsp[-3].v[0],yyvsp[-3].v[1],yyvsp[-3].v[2],yyvsp[-3].v[3],yyvsp[-1].l,1);
      yyval.l = yyvsp[-1].l;
    ;
    break;}
case 258:
#line 1832 "Gmsh.y"
{
      DilatShapes(yyvsp[-6].v[0],yyvsp[-6].v[1],yyvsp[-6].v[2],yyvsp[-4].d,yyvsp[-1].l,1);
      yyval.l = yyvsp[-1].l;
    ;
    break;}
case 259:
#line 1839 "Gmsh.y"
{ yyval.l = yyvsp[0].l; ;
    break;}
case 260:
#line 1840 "Gmsh.y"
{ yyval.l = yyvsp[0].l; ;
    break;}
case 261:
#line 1841 "Gmsh.y"
{ yyval.l = yyvsp[0].l; ;
    break;}
case 262:
#line 1846 "Gmsh.y"
{
      yyval.l = List_Create(3,3,sizeof(Shape));
    ;
    break;}
case 263:
#line 1850 "Gmsh.y"
{
      List_Add(yyval.l,&yyvsp[0].s);
      yyval.l = yyvsp[-1].l;
    ;
    break;}
case 264:
#line 1855 "Gmsh.y"
{
      for(i=0;i<List_Nbr(yyvsp[-2].l);i++){
	List_Read(yyvsp[-2].l, i, &d);
	TheShape.Num = (int)d;
	Vertex *v = FindPoint(TheShape.Num,THEM);
	if(!v)
	  yymsg(WARNING, "Unknown Point %d", TheShape.Num);
	else{
	  TheShape.Type = MSH_POINT;
	  List_Add(yyval.l,&TheShape);
	}
      }
      yyval.l = yyvsp[-5].l;
    ;
    break;}
case 265:
#line 1870 "Gmsh.y"
{
      for(i=0;i<List_Nbr(yyvsp[-2].l);i++){
	List_Read(yyvsp[-2].l, i, &d);
	TheShape.Num = (int)d;
	Curve *c = FindCurve(TheShape.Num,THEM);
	if(!c)
	  yymsg(WARNING, "Unknown Curve %d", TheShape.Num);
	else{
	  TheShape.Type = c->Typ;
	  List_Add(yyval.l,&TheShape);
	}
      }
      yyval.l = yyvsp[-5].l;
    ;
    break;}
case 266:
#line 1885 "Gmsh.y"
{
      for(i=0;i<List_Nbr(yyvsp[-2].l);i++){
	List_Read(yyvsp[-2].l, i, &d);
	TheShape.Num = (int)d;
	Surface *s = FindSurface(TheShape.Num,THEM);
	if(!s)
	  yymsg(WARNING, "Unknown Surface %d", TheShape.Num);
	else{
	  TheShape.Type = s->Typ;
	  List_Add(yyval.l,&TheShape);
	}
      }
      yyval.l = yyvsp[-5].l;
    ;
    break;}
case 267:
#line 1905 "Gmsh.y"
{
      yyval.l = List_Create(3,3,sizeof(Shape));
      for(i=0;i<List_Nbr(yyvsp[-1].l);i++){
	List_Read (yyvsp[-1].l,i,&TheShape);
	CopyShape(TheShape.Type,TheShape.Num,&j);
	TheShape.Num = j;
	List_Add(yyval.l,&TheShape);
      }
    ;
    break;}
case 268:
#line 1915 "Gmsh.y"
{
      if(!strcmp(yyvsp[-4].c, "View")) DuplicateView((int)yyvsp[-2].d,0);
    ;
    break;}
case 269:
#line 1925 "Gmsh.y"
{
      for(i=0;i<List_Nbr(yyvsp[-1].l);i++){
	List_Read (yyvsp[-1].l,i,&TheShape);
	DeleteShape(TheShape.Type,TheShape.Num);
      }
    ;
    break;}
case 270:
#line 1932 "Gmsh.y"
{
      if(!strcmp(yyvsp[-4].c, "View")) FreeView((int)yyvsp[-2].d);
    ;
    break;}
case 271:
#line 1936 "Gmsh.y"
{
      Init_Mesh(THEM, 1);
    ;
    break;}
case 272:
#line 1945 "Gmsh.y"
{
      for(i=0;i<List_Nbr(yyvsp[-1].l);i++){
	List_Read (yyvsp[-1].l,i,&TheShape);
	ColorShape(TheShape.Type,TheShape.Num,yyvsp[-3].u);
      }
    ;
    break;}
case 273:
#line 1957 "Gmsh.y"
{
      if(!strcmp(yyvsp[-2].c, "Include")){

	yyinTab[RecursionLevel++] = yyin;

	if(yyvsp[-1].c[0] == '/' || yyvsp[-1].c[0] == '\\' || (strlen(yyvsp[-1].c)>2 && yyvsp[-1].c[1] == ':')){
	  // do nothing: $2 is an absolute path
	  strcpy(tmpstring, yyvsp[-1].c);
	}
	else{
	  // append $2 to the path of the parent file
	  strcpy(tmpstring, yyname);
	  i = strlen(yyname)-1 ;
	  while(i >= 0 && yyname[i] != '/' && yyname[i] != '\\') i-- ;
	  tmpstring[i+1] = '\0';
	  strcat(tmpstring, yyvsp[-1].c);
	}

	if((yyin = fopen(tmpstring,"r"))){
	  Msg(INFO, "Including '%s'", tmpstring); 
	  strcpy(yynameTab[RecursionLevel-1],yyname);
	  yylinenoTab[RecursionLevel-1]=yylineno;
	  yylineno=1;
	  strcpy(yyname,tmpstring);
	  while(!feof(yyin)){
	    yyparse();
	  }
	  // FIXME: If we do fclose, we cannot call a Function defined
	  // in another file...
	  //fclose(yyin);
	  yyin = yyinTab[--RecursionLevel];
	  strcpy(yyname,yynameTab[RecursionLevel]);
	  yylineno = yylinenoTab[RecursionLevel];
	}
	else{
	  yymsg(GERROR, "Unknown file '%s'", tmpstring) ;  
	  yyin = yyinTab[--RecursionLevel];
	}

      }
      else if(!strcmp(yyvsp[-2].c, "Print")){
#if defined(HAVE_FLTK)
	if(!CTX.batch) CreateOutputFile(yyvsp[-1].c, CTX.print.format);
#endif
      }
      else if(!strcmp(yyvsp[-2].c, "Save")){
#if defined(HAVE_FLTK)
	CreateOutputFile(yyvsp[-1].c, CTX.mesh.format);
#endif
      }

      else if(!strcmp(yyvsp[-2].c, "Merge")){

	FILE *ff = yyin;
	MergeProblem(yyvsp[-1].c);
	yyin = ff;

      }
      else if(!strcmp(yyvsp[-2].c, "MergeWithBoundingBox")){

	FILE *ff = yyin;
	MergeProblemWithBoundingBox(yyvsp[-1].c);
	yyin = ff;

      }
      else if(!strcmp(yyvsp[-2].c, "Open")){

	FILE *ff = yyin;
	OpenProblem(yyvsp[-1].c);
	yyin = ff;

      }
      else if(!strcmp(yyvsp[-2].c, "System")){
	
	SystemCall(yyvsp[-1].c);

      }
      else
	yymsg(GERROR, "Unknown command '%s'", yyvsp[-2].c);
    ;
    break;}
case 274:
#line 2038 "Gmsh.y"
{
      if(!strcmp(yyvsp[-2].c, "Sleep")){

	long sleep_time = GetTime();
	while(1){
	  if(GetTime() - sleep_time > (long)(yyvsp[-1].d*1.e6)) break;
	}
      
      }
      else if(!strcmp(yyvsp[-2].c, "Mesh")){

	//Maillage_Dimension_0(THEM);
	//mai3d(THEM,(int)$2);
	yymsg(GERROR, "Mesh directives are not (yet) allowed in scripts");

      }
      else
	yymsg(GERROR, "Unknown command '%s'", yyvsp[-2].c);
    ;
    break;}
case 275:
#line 2058 "Gmsh.y"
{
    if(CTX.default_plugins)
      GMSH_PluginManager::Instance()->Action(yyvsp[-4].c,yyvsp[-1].c,0); 
   ;
    break;}
case 276:
#line 2063 "Gmsh.y"
{
      exit(0);
    ;
    break;}
case 277:
#line 2067 "Gmsh.y"
{
#if defined(HAVE_FLTK)
      if(!CTX.batch){ // we're in interactive mode
	if(Tree_Nbr(THEM->Points) != Last_NumberOfPoints){
	  Last_NumberOfPoints = Tree_Nbr(THEM->Points);
	  Replot();
	  DrawUI();
	}
	else{
	  Draw();
	  DrawUI();
	}
      }
#endif
    ;
    break;}
case 278:
#line 2089 "Gmsh.y"
{
      LoopControlVariablesTab[ImbricatedLoop][0] = yyvsp[-3].d ;
      LoopControlVariablesTab[ImbricatedLoop][1] = yyvsp[-1].d ;
      LoopControlVariablesTab[ImbricatedLoop][2] = 1.0 ;
      LoopControlVariablesNameTab[ImbricatedLoop] = "" ;
      fgetpos( yyin, &yyposImbricatedLoopsTab[ImbricatedLoop]);
      yylinenoImbricatedLoopsTab[ImbricatedLoop] = yylineno;
      ImbricatedLoop++;
    ;
    break;}
case 279:
#line 2099 "Gmsh.y"
{
      LoopControlVariablesTab[ImbricatedLoop][0] = yyvsp[-5].d ;
      LoopControlVariablesTab[ImbricatedLoop][1] = yyvsp[-3].d ;
      LoopControlVariablesTab[ImbricatedLoop][2] = yyvsp[-1].d ;
      LoopControlVariablesNameTab[ImbricatedLoop] = "" ;
      fgetpos( yyin, &yyposImbricatedLoopsTab[ImbricatedLoop]);
      yylinenoImbricatedLoopsTab[ImbricatedLoop] = yylineno;
      ImbricatedLoop++;
    ;
    break;}
case 280:
#line 2109 "Gmsh.y"
{
      LoopControlVariablesTab[ImbricatedLoop][0] = yyvsp[-3].d ;
      LoopControlVariablesTab[ImbricatedLoop][1] = yyvsp[-1].d ;
      LoopControlVariablesTab[ImbricatedLoop][2] = 1.0 ;
      LoopControlVariablesNameTab[ImbricatedLoop] = yyvsp[-6].c ;
      
      TheSymbol.Name = yyvsp[-6].c;
      if (!(pSymbol = (Symbol*)List_PQuery(Symbol_L, &TheSymbol, CompareSymbols))){
	TheSymbol.val = List_Create(1,1,sizeof(double));
	List_Put(TheSymbol.val, 0, &yyvsp[-3].d);
	List_Add(Symbol_L, &TheSymbol);
      }
      else{
	List_Write(pSymbol->val, 0, &yyvsp[-3].d);
      }
      
      fgetpos( yyin, &yyposImbricatedLoopsTab[ImbricatedLoop]);
      yylinenoImbricatedLoopsTab[ImbricatedLoop] = yylineno;
      ImbricatedLoop++;
    ;
    break;}
case 281:
#line 2130 "Gmsh.y"
{
      LoopControlVariablesTab[ImbricatedLoop][0] = yyvsp[-5].d ;
      LoopControlVariablesTab[ImbricatedLoop][1] = yyvsp[-3].d ;
      LoopControlVariablesTab[ImbricatedLoop][2] = yyvsp[-1].d ;
      LoopControlVariablesNameTab[ImbricatedLoop] = yyvsp[-8].c ;

      TheSymbol.Name = yyvsp[-8].c;
      if (!(pSymbol = (Symbol*)List_PQuery(Symbol_L, &TheSymbol, CompareSymbols))){
	TheSymbol.val = List_Create(1,1,sizeof(double));
	List_Put(TheSymbol.val, 0, &yyvsp[-5].d);
	List_Add(Symbol_L, &TheSymbol);
      }
      else{
	List_Write(pSymbol->val, 0, &yyvsp[-5].d);
      }
      
      fgetpos( yyin, &yyposImbricatedLoopsTab[ImbricatedLoop]);
      yylinenoImbricatedLoopsTab[ImbricatedLoop] = yylineno;
      ImbricatedLoop++;
    ;
    break;}
case 282:
#line 2151 "Gmsh.y"
{
      if(LoopControlVariablesTab[ImbricatedLoop-1][1] >  
	 LoopControlVariablesTab[ImbricatedLoop-1][0]){
	LoopControlVariablesTab[ImbricatedLoop-1][0] +=
	  LoopControlVariablesTab[ImbricatedLoop-1][2];
	
	if(strlen(LoopControlVariablesNameTab[ImbricatedLoop-1])){
	  TheSymbol.Name = LoopControlVariablesNameTab[ImbricatedLoop-1];
	  pSymbol = (Symbol*)List_PQuery(Symbol_L, &TheSymbol, CompareSymbols);
	  *(double*)List_Pointer_Fast(pSymbol->val, 0) += 
	    LoopControlVariablesTab[ImbricatedLoop-1][2] ;
	}
	
	fsetpos( yyin, &yyposImbricatedLoopsTab[ImbricatedLoop-1]);
	yylineno = yylinenoImbricatedLoopsTab[ImbricatedLoop-1];
      }
      else{
	ImbricatedLoop--;
      }
    ;
    break;}
case 283:
#line 2172 "Gmsh.y"
{
      if(!FunctionManager::Instance()->createFunction(yyvsp[0].c,yyin,yyname,yylineno))
	yymsg(GERROR, "Redefinition of function %s",yyvsp[0].c);
      skip_until(NULL, "Return");
    ;
    break;}
case 284:
#line 2178 "Gmsh.y"
{
      if(!FunctionManager::Instance()->leaveFunction(&yyin,yyname,yylineno))
	yymsg(GERROR, "Error while exiting function");
    ;
    break;}
case 285:
#line 2183 "Gmsh.y"
{
      if(!FunctionManager::Instance()->enterFunction(yyvsp[-1].c,&yyin,yyname,yylineno))
	yymsg(GERROR, "Unknown function %s",yyvsp[-1].c);
    ;
    break;}
case 286:
#line 2188 "Gmsh.y"
{
      if(!yyvsp[-1].d) skip_until("If", "EndIf");
    ;
    break;}
case 287:
#line 2192 "Gmsh.y"
{
    ;
    break;}
case 288:
#line 2204 "Gmsh.y"
{
      Curve *pc, *prc;
      Extrude_ProtudePoint(TRANSLATE,(int)yyvsp[-4].d,yyvsp[-2].v[0],yyvsp[-2].v[1],yyvsp[-2].v[2],
			   0.,0.,0.,0.,0.,0.,0.,
			   &pc,&prc,1,NULL);
    ;
    break;}
case 289:
#line 2211 "Gmsh.y"
{
      Curve *pc, *prc;
      Extrude_ProtudePoint(ROTATE,(int)yyvsp[-8].d,0.,0.,0.,
			   yyvsp[-6].v[0],yyvsp[-6].v[1],yyvsp[-6].v[2],yyvsp[-4].v[0],yyvsp[-4].v[1],yyvsp[-4].v[2],yyvsp[-2].d,
			   &pc,&prc,1,NULL);
    ;
    break;}
case 290:
#line 2218 "Gmsh.y"
{
      Curve *pc, *prc;
      Extrude_ProtudePoint(TRANSLATE_ROTATE,(int)yyvsp[-10].d,yyvsp[-8].v[0],yyvsp[-8].v[1],yyvsp[-8].v[2],
			   yyvsp[-6].v[0],yyvsp[-6].v[1],yyvsp[-6].v[2],yyvsp[-4].v[0],yyvsp[-4].v[1],yyvsp[-4].v[2],yyvsp[-2].d,
			   &pc,&prc,1,NULL);
    ;
    break;}
case 291:
#line 2225 "Gmsh.y"
{
      extr.mesh.ExtrudeMesh = false;
      extr.mesh.Recombine = false;
    ;
    break;}
case 292:
#line 2230 "Gmsh.y"
{
      Curve *pc, *prc;
      Extrude_ProtudePoint(TRANSLATE,(int)yyvsp[-8].d,yyvsp[-6].v[0],yyvsp[-6].v[1],yyvsp[-6].v[2],
			   0.,0.,0.,0.,0.,0.,0.,
			   &pc,&prc,1,&extr);
    ;
    break;}
case 293:
#line 2237 "Gmsh.y"
{
      extr.mesh.ExtrudeMesh = false;
      extr.mesh.Recombine = false;
    ;
    break;}
case 294:
#line 2242 "Gmsh.y"
{
      Curve *pc, *prc;
      Extrude_ProtudePoint(ROTATE,(int)yyvsp[-12].d,0.,0.,0.,
			   yyvsp[-10].v[0],yyvsp[-10].v[1],yyvsp[-10].v[2],yyvsp[-8].v[0],yyvsp[-8].v[1],yyvsp[-8].v[2],yyvsp[-6].d,
			   &pc,&prc,1,&extr);
    ;
    break;}
case 295:
#line 2249 "Gmsh.y"
{
      extr.mesh.ExtrudeMesh = false;
      extr.mesh.Recombine = false;
    ;
    break;}
case 296:
#line 2254 "Gmsh.y"
{
      Curve *pc, *prc;
      Extrude_ProtudePoint(TRANSLATE_ROTATE,(int)yyvsp[-14].d,yyvsp[-12].v[0],yyvsp[-12].v[1],yyvsp[-12].v[2],
			   yyvsp[-10].v[0],yyvsp[-10].v[1],yyvsp[-10].v[2],yyvsp[-8].v[0],yyvsp[-8].v[1],yyvsp[-8].v[2],yyvsp[-6].d,
			   &pc,&prc,1,&extr);
    ;
    break;}
case 297:
#line 2264 "Gmsh.y"
{
      Extrude_ProtudeCurve(TRANSLATE,(int)yyvsp[-4].d,yyvsp[-2].v[0],yyvsp[-2].v[1],yyvsp[-2].v[2],
			   0.,0.,0.,0.,0.,0.,0.,1,NULL);
    ;
    break;}
case 298:
#line 2269 "Gmsh.y"
{
      Extrude_ProtudeCurve(ROTATE,(int)yyvsp[-8].d,0.,0.,0.,
			   yyvsp[-6].v[0],yyvsp[-6].v[1],yyvsp[-6].v[2],yyvsp[-4].v[0],yyvsp[-4].v[1],yyvsp[-4].v[2],yyvsp[-2].d,1,NULL);
    ;
    break;}
case 299:
#line 2274 "Gmsh.y"
{
      Extrude_ProtudeCurve(TRANSLATE_ROTATE,(int)yyvsp[-10].d,yyvsp[-8].v[0],yyvsp[-8].v[1],yyvsp[-8].v[2],
			   yyvsp[-6].v[0],yyvsp[-6].v[1],yyvsp[-6].v[2],yyvsp[-4].v[0],yyvsp[-4].v[1],yyvsp[-4].v[2],yyvsp[-2].d,1,NULL);
    ;
    break;}
case 300:
#line 2279 "Gmsh.y"
{
      extr.mesh.ExtrudeMesh = false;
      extr.mesh.Recombine = false;
    ;
    break;}
case 301:
#line 2284 "Gmsh.y"
{
      Extrude_ProtudeCurve(TRANSLATE,(int)yyvsp[-8].d,yyvsp[-6].v[0],yyvsp[-6].v[1],yyvsp[-6].v[2],
			   0.,0.,0.,0.,0.,0.,0.,1,&extr);
    ;
    break;}
case 302:
#line 2289 "Gmsh.y"
{
      extr.mesh.ExtrudeMesh = false;
      extr.mesh.Recombine = false;
    ;
    break;}
case 303:
#line 2294 "Gmsh.y"
{
      Extrude_ProtudeCurve(ROTATE,(int)yyvsp[-12].d,0.,0.,0.,
			   yyvsp[-10].v[0],yyvsp[-10].v[1],yyvsp[-10].v[2],yyvsp[-8].v[0],yyvsp[-8].v[1],yyvsp[-8].v[2],yyvsp[-6].d,1,&extr);
    ;
    break;}
case 304:
#line 2299 "Gmsh.y"
{
      extr.mesh.ExtrudeMesh = false;
      extr.mesh.Recombine = false;
    ;
    break;}
case 305:
#line 2304 "Gmsh.y"
{
      Extrude_ProtudeCurve(TRANSLATE_ROTATE,(int)yyvsp[-14].d,yyvsp[-12].v[0],yyvsp[-12].v[1],yyvsp[-12].v[2],
			   yyvsp[-10].v[0],yyvsp[-10].v[1],yyvsp[-10].v[2],yyvsp[-8].v[0],yyvsp[-8].v[1],yyvsp[-8].v[2],yyvsp[-6].d,1,&extr);
    ;
    break;}
case 306:
#line 2312 "Gmsh.y"
{
      Extrude_ProtudeSurface(TRANSLATE,(int)yyvsp[-4].d,yyvsp[-2].v[0],yyvsp[-2].v[1],yyvsp[-2].v[2],
			     0.,0.,0.,0.,0.,0.,0.,0,NULL);
    ;
    break;}
case 307:
#line 2317 "Gmsh.y"
{
      Extrude_ProtudeSurface(ROTATE,(int)yyvsp[-8].d,0.,0.,0.,
			     yyvsp[-6].v[0],yyvsp[-6].v[1],yyvsp[-6].v[2],yyvsp[-4].v[0],yyvsp[-4].v[1],yyvsp[-4].v[2],yyvsp[-2].d,0,NULL);
    ;
    break;}
case 308:
#line 2322 "Gmsh.y"
{
      Extrude_ProtudeSurface(TRANSLATE_ROTATE,(int)yyvsp[-10].d,yyvsp[-8].v[0],yyvsp[-8].v[1],yyvsp[-8].v[2],
			     yyvsp[-6].v[0],yyvsp[-6].v[1],yyvsp[-6].v[2],yyvsp[-4].v[0],yyvsp[-4].v[1],yyvsp[-4].v[2],yyvsp[-2].d,0,NULL);
    ;
    break;}
case 309:
#line 2327 "Gmsh.y"
{
      extr.mesh.ExtrudeMesh = false;
      extr.mesh.Recombine = false;
    ;
    break;}
case 310:
#line 2332 "Gmsh.y"
{
      int vol = NEWREG();
      Extrude_ProtudeSurface(TRANSLATE,(int)yyvsp[-8].d,yyvsp[-6].v[0],yyvsp[-6].v[1],yyvsp[-6].v[2],
			     0.,0.,0.,0.,0.,0.,0.,vol,&extr);
    ;
    break;}
case 311:
#line 2338 "Gmsh.y"
{
      extr.mesh.ExtrudeMesh = false;
      extr.mesh.Recombine = false;
    ;
    break;}
case 312:
#line 2344 "Gmsh.y"
{
      int vol = NEWREG();
      Extrude_ProtudeSurface(ROTATE,(int)yyvsp[-12].d,0.,0.,0.,
			     yyvsp[-10].v[0],yyvsp[-10].v[1],yyvsp[-10].v[2],yyvsp[-8].v[0],yyvsp[-8].v[1],yyvsp[-8].v[2],yyvsp[-6].d,vol,&extr);
    ;
    break;}
case 313:
#line 2350 "Gmsh.y"
{
      extr.mesh.ExtrudeMesh = false;
      extr.mesh.Recombine = false;
    ;
    break;}
case 314:
#line 2356 "Gmsh.y"
{
      int vol = NEWREG();
      Extrude_ProtudeSurface(TRANSLATE_ROTATE,(int)yyvsp[-14].d,yyvsp[-12].v[0],yyvsp[-12].v[1],yyvsp[-12].v[2],
			     yyvsp[-10].v[0],yyvsp[-10].v[1],yyvsp[-10].v[2],yyvsp[-8].v[0],yyvsp[-8].v[1],yyvsp[-8].v[2],yyvsp[-6].d,vol,&extr);
    ;
    break;}
case 315:
#line 2365 "Gmsh.y"
{
    ;
    break;}
case 316:
#line 2368 "Gmsh.y"
{
    ;
    break;}
case 317:
#line 2374 "Gmsh.y"
{
      double d;
      extr.mesh.ExtrudeMesh = true;
      extr.mesh.NbLayer = List_Nbr(yyvsp[-6].l);
      if(List_Nbr(yyvsp[-6].l) == List_Nbr(yyvsp[-4].l) && List_Nbr(yyvsp[-6].l) == List_Nbr(yyvsp[-2].l)){
	extr.mesh.NbElmLayer = (int*)Malloc(extr.mesh.NbLayer*sizeof(int));
	extr.mesh.ZonLayer = (int*)Malloc(extr.mesh.NbLayer*sizeof(int));
	extr.mesh.hLayer = (double*)Malloc(extr.mesh.NbLayer*sizeof(double));
	for(int i=0;i<List_Nbr(yyvsp[-6].l);i++){
	  List_Read(yyvsp[-6].l,i,&d);
	  extr.mesh.NbElmLayer[i] = (d>0)?(int)d:1;
	  List_Read(yyvsp[-4].l,i,&d);
	  extr.mesh.ZonLayer[i] = (int)d;
	  List_Read(yyvsp[-2].l,i,&d);
	  extr.mesh.hLayer[i] = d;
	}
      }
      else{
	yymsg(GERROR, "Wrong layer definition {%d, %d, %d}", 
	      List_Nbr(yyvsp[-6].l), List_Nbr(yyvsp[-4].l), List_Nbr(yyvsp[-2].l));
      }
      List_Delete(yyvsp[-6].l);
      List_Delete(yyvsp[-4].l);
      List_Delete(yyvsp[-2].l);
    ;
    break;}
case 318:
#line 2400 "Gmsh.y"
{
      double d;
      extr.mesh.ExtrudeMesh = true;
      extr.mesh.NbLayer = List_Nbr(yyvsp[-4].l);
      if(List_Nbr(yyvsp[-4].l) == List_Nbr(yyvsp[-2].l)){
	extr.mesh.NbElmLayer = (int*)Malloc(extr.mesh.NbLayer*sizeof(int));
	extr.mesh.ZonLayer = (int*)Malloc(extr.mesh.NbLayer*sizeof(int));
	extr.mesh.hLayer = (double*)Malloc(extr.mesh.NbLayer*sizeof(double));
	for(int i=0;i<List_Nbr(yyvsp[-4].l);i++){
	  List_Read(yyvsp[-4].l,i,&d);
	  extr.mesh.NbElmLayer[i] = (d>0)?(int)d:1;
	  extr.mesh.ZonLayer[i] = 0;
	  List_Read(yyvsp[-2].l,i,&d);
	  extr.mesh.hLayer[i] = d;
	}
      }
      else{
	yymsg(GERROR, "Wrong layer definition {%d, %d}", 
	      List_Nbr(yyvsp[-4].l), List_Nbr(yyvsp[-2].l));
      }
      List_Delete(yyvsp[-4].l);
      List_Delete(yyvsp[-2].l);
    ;
    break;}
case 319:
#line 2424 "Gmsh.y"
{
      extr.mesh.Recombine = true;
    ;
    break;}
case 320:
#line 2433 "Gmsh.y"
{
      Curve *c;
      for(i=0;i<List_Nbr(yyvsp[-3].l);i++){
	List_Read(yyvsp[-3].l,i,&d);
	j = (int)fabs(d);
        c = FindCurve(j,THEM);
	if(!c)
	  yymsg(WARNING, "Unknown Curve %d", j);
	else{
	  c->Method = TRANSFINI;
	  c->ipar[0] = (yyvsp[-1].d>2)?(int)yyvsp[-1].d:2;
	  c->ipar[1] = sign(d);
	  c->dpar[0] = 1.0;
	}
      }
      List_Delete(yyvsp[-3].l);
    ;
    break;}
case 321:
#line 2451 "Gmsh.y"
{
      Curve *c;
      for(i=0;i<List_Nbr(yyvsp[-6].l);i++){
	List_Read(yyvsp[-6].l,i,&d);
	j = (int)fabs(d);
        c = FindCurve(j,THEM);
	if(!c)
	  yymsg(WARNING, "Unknown Curve %d", j);
	else{
	  c->Method = TRANSFINI;
	  c->ipar[0] = (yyvsp[-4].d>2)?(int)yyvsp[-4].d:2;
	  c->ipar[1] = sign(d); /* Progresion : code 1 ou -1 */
	  c->dpar[0] = fabs(yyvsp[-1].d);
	}
      }
      List_Delete(yyvsp[-6].l);
    ;
    break;}
case 322:
#line 2469 "Gmsh.y"
{
      Curve *c;
      for(i=0;i<List_Nbr(yyvsp[-6].l);i++){
	List_Read(yyvsp[-6].l,i,&d);
	j = (int)fabs(d);
        c = FindCurve(j,THEM);
	if(!c)
	  yymsg(WARNING, "Unknown Curve %d", j);
	else{
	  c->Method = TRANSFINI;
	  c->ipar[0] = (yyvsp[-4].d>2)?(int)yyvsp[-4].d:2;
	  c->ipar[1] = 2*sign(d); /* Bump : code 2 ou -2 */
	  c->dpar[0] = fabs(yyvsp[-1].d);
	}
      }
      List_Delete(yyvsp[-6].l);
    ;
    break;}
case 323:
#line 2487 "Gmsh.y"
{
      Surface *s = FindSurface((int)yyvsp[-4].d,THEM);
      if(!s)
	yymsg(WARNING, "Unknown Surface %d", (int)yyvsp[-4].d);
      else{
	s->Method = TRANSFINI;
	k = List_Nbr(yyvsp[-1].l);
	if(k!=3 && k!=4){
	  yymsg(GERROR, "Wrong definition of Transfinite Surface %d: "
		"%d points instead of 3 or 4" , yyvsp[-4].d, k) ;
	}
	else{
	  for(i=0;i<k;i++){
	    List_Read(yyvsp[-1].l,i,&d);
	    j = (int)fabs(d);
	    s->ipar[i] = j;
	  }
	}
      }
      List_Delete(yyvsp[-1].l);
    ;
    break;}
case 324:
#line 2509 "Gmsh.y"
{
      Surface *s = FindSurface((int)yyvsp[-4].d,THEM);
      if(!s)
	yymsg(WARNING, "Unknown Surface %d", (int)yyvsp[-4].d);
      else{
        s->Method = ELLIPTIC;
        k = List_Nbr(yyvsp[-1].l);
        if(k != 4)
	  yymsg(GERROR, "Wrong definition of Elliptic Surface %d: "
		"%d points instead of 4" , yyvsp[-4].d, k) ;
        else{
	  for(i=0;i<k;i++){
	    List_Read(yyvsp[-1].l,i,&d);
	    j = (int)fabs(d);
	    s->ipar[i] = j;
	  }
	}
      }
      List_Delete(yyvsp[-1].l);
    ;
    break;}
case 325:
#line 2530 "Gmsh.y"
{
      Volume *v = FindVolume((int)yyvsp[-4].d,THEM);
      if(!v)
	yymsg(WARNING, "Unknown Volume %d", (int)yyvsp[-4].d);
      else{
	v->Method = TRANSFINI;
	k = List_Nbr(yyvsp[-1].l);
	if(k!=6 && k!=8)
	  yymsg(GERROR, "Wrong definition of Transfinite Volume %d: "
		"%d points instead of 6 or 8" , yyvsp[-4].d, k) ;
	else{
	  for(i=0;i<k;i++){
	    List_Read(yyvsp[-1].l,i,&d);
	    j = (int)fabs(d);
	    v->ipar[i] = j;
	  }
	}
      }
      List_Delete(yyvsp[-1].l);
    ;
    break;}
case 326:
#line 2551 "Gmsh.y"
{
      Surface *s;
      for(i=0;i<List_Nbr(yyvsp[-3].l);i++){
	List_Read(yyvsp[-3].l,i,&d);
	j = (int)d;
	s = FindSurface(j,THEM);
	if(s){
	  s->Recombine = 1;
	  s->RecombineAngle = (yyvsp[-1].d > 0 && yyvsp[-1].d < 90) ? yyvsp[-1].d : 90;
	}
      }
      List_Delete(yyvsp[-3].l);
    ;
    break;}
case 327:
#line 2565 "Gmsh.y"
{
      Surface *s;
      for(i=0;i<List_Nbr(yyvsp[-1].l);i++){
	List_Read(yyvsp[-1].l,i,&d);
	j = (int)d;
        s = FindSurface(j,THEM);
	if(s){
	  s->Recombine = 1;
	  s->RecombineAngle = 30.;
        }
      }
      List_Delete(yyvsp[-1].l);
    ;
    break;}
case 328:
#line 2585 "Gmsh.y"
{ 
      ReplaceAllDuplicates(THEM);
    ;
    break;}
case 329:
#line 2589 "Gmsh.y"
{ 
      IntersectAllSegmentsTogether();
    ;
    break;}
case 330:
#line 2598 "Gmsh.y"
{yyval.i = 1;;
    break;}
case 331:
#line 2599 "Gmsh.y"
{yyval.i = 0;;
    break;}
case 332:
#line 2600 "Gmsh.y"
{yyval.i = -1;;
    break;}
case 333:
#line 2601 "Gmsh.y"
{yyval.i = -1;;
    break;}
case 334:
#line 2602 "Gmsh.y"
{yyval.i = -1;;
    break;}
case 335:
#line 2606 "Gmsh.y"
{ yyval.d = yyvsp[0].d;           ;
    break;}
case 336:
#line 2607 "Gmsh.y"
{ yyval.d = yyvsp[-1].d ;          ;
    break;}
case 337:
#line 2608 "Gmsh.y"
{ yyval.d = -yyvsp[0].d ;         ;
    break;}
case 338:
#line 2609 "Gmsh.y"
{ yyval.d = yyvsp[0].d;           ;
    break;}
case 339:
#line 2610 "Gmsh.y"
{ yyval.d = !yyvsp[0].d ;         ;
    break;}
case 340:
#line 2611 "Gmsh.y"
{ yyval.d = yyvsp[-2].d - yyvsp[0].d ;     ;
    break;}
case 341:
#line 2612 "Gmsh.y"
{ yyval.d = yyvsp[-2].d + yyvsp[0].d ;     ;
    break;}
case 342:
#line 2613 "Gmsh.y"
{ yyval.d = yyvsp[-2].d * yyvsp[0].d ;     ;
    break;}
case 343:
#line 2615 "Gmsh.y"
{ 
      if(!yyvsp[0].d)
	yymsg(GERROR, "Division by zero in '%g / %g'", yyvsp[-2].d, yyvsp[0].d);
      else
	yyval.d = yyvsp[-2].d / yyvsp[0].d ;     
    ;
    break;}
case 344:
#line 2621 "Gmsh.y"
{ yyval.d = (int)yyvsp[-2].d % (int)yyvsp[0].d ;  ;
    break;}
case 345:
#line 2622 "Gmsh.y"
{ yyval.d = pow(yyvsp[-2].d,yyvsp[0].d) ;  ;
    break;}
case 346:
#line 2623 "Gmsh.y"
{ yyval.d = yyvsp[-2].d < yyvsp[0].d ;     ;
    break;}
case 347:
#line 2624 "Gmsh.y"
{ yyval.d = yyvsp[-2].d > yyvsp[0].d ;     ;
    break;}
case 348:
#line 2625 "Gmsh.y"
{ yyval.d = yyvsp[-2].d <= yyvsp[0].d ;    ;
    break;}
case 349:
#line 2626 "Gmsh.y"
{ yyval.d = yyvsp[-2].d >= yyvsp[0].d ;    ;
    break;}
case 350:
#line 2627 "Gmsh.y"
{ yyval.d = yyvsp[-2].d == yyvsp[0].d ;    ;
    break;}
case 351:
#line 2628 "Gmsh.y"
{ yyval.d = yyvsp[-2].d != yyvsp[0].d ;    ;
    break;}
case 352:
#line 2629 "Gmsh.y"
{ yyval.d = yyvsp[-2].d && yyvsp[0].d ;    ;
    break;}
case 353:
#line 2630 "Gmsh.y"
{ yyval.d = yyvsp[-2].d || yyvsp[0].d ;    ;
    break;}
case 354:
#line 2631 "Gmsh.y"
{ yyval.d = yyvsp[-4].d? yyvsp[-2].d : yyvsp[0].d ; ;
    break;}
case 355:
#line 2632 "Gmsh.y"
{ yyval.d = exp(yyvsp[-1].d);      ;
    break;}
case 356:
#line 2633 "Gmsh.y"
{ yyval.d = log(yyvsp[-1].d);      ;
    break;}
case 357:
#line 2634 "Gmsh.y"
{ yyval.d = log10(yyvsp[-1].d);    ;
    break;}
case 358:
#line 2635 "Gmsh.y"
{ yyval.d = sqrt(yyvsp[-1].d);     ;
    break;}
case 359:
#line 2636 "Gmsh.y"
{ yyval.d = sin(yyvsp[-1].d);      ;
    break;}
case 360:
#line 2637 "Gmsh.y"
{ yyval.d = asin(yyvsp[-1].d);     ;
    break;}
case 361:
#line 2638 "Gmsh.y"
{ yyval.d = cos(yyvsp[-1].d);      ;
    break;}
case 362:
#line 2639 "Gmsh.y"
{ yyval.d = acos(yyvsp[-1].d);     ;
    break;}
case 363:
#line 2640 "Gmsh.y"
{ yyval.d = tan(yyvsp[-1].d);      ;
    break;}
case 364:
#line 2641 "Gmsh.y"
{ yyval.d = atan(yyvsp[-1].d);     ;
    break;}
case 365:
#line 2642 "Gmsh.y"
{ yyval.d = atan2(yyvsp[-3].d,yyvsp[-1].d); ;
    break;}
case 366:
#line 2643 "Gmsh.y"
{ yyval.d = sinh(yyvsp[-1].d);     ;
    break;}
case 367:
#line 2644 "Gmsh.y"
{ yyval.d = cosh(yyvsp[-1].d);     ;
    break;}
case 368:
#line 2645 "Gmsh.y"
{ yyval.d = tanh(yyvsp[-1].d);     ;
    break;}
case 369:
#line 2646 "Gmsh.y"
{ yyval.d = fabs(yyvsp[-1].d);     ;
    break;}
case 370:
#line 2647 "Gmsh.y"
{ yyval.d = floor(yyvsp[-1].d);    ;
    break;}
case 371:
#line 2648 "Gmsh.y"
{ yyval.d = ceil(yyvsp[-1].d);     ;
    break;}
case 372:
#line 2649 "Gmsh.y"
{ yyval.d = fmod(yyvsp[-3].d,yyvsp[-1].d);  ;
    break;}
case 373:
#line 2650 "Gmsh.y"
{ yyval.d = fmod(yyvsp[-3].d,yyvsp[-1].d);  ;
    break;}
case 374:
#line 2651 "Gmsh.y"
{ yyval.d = sqrt(yyvsp[-3].d*yyvsp[-3].d+yyvsp[-1].d*yyvsp[-1].d); ;
    break;}
case 375:
#line 2652 "Gmsh.y"
{ yyval.d = yyvsp[-1].d*(double)rand()/(double)RAND_MAX; ;
    break;}
case 376:
#line 2654 "Gmsh.y"
{ yyval.d = exp(yyvsp[-1].d);      ;
    break;}
case 377:
#line 2655 "Gmsh.y"
{ yyval.d = log(yyvsp[-1].d);      ;
    break;}
case 378:
#line 2656 "Gmsh.y"
{ yyval.d = log10(yyvsp[-1].d);    ;
    break;}
case 379:
#line 2657 "Gmsh.y"
{ yyval.d = sqrt(yyvsp[-1].d);     ;
    break;}
case 380:
#line 2658 "Gmsh.y"
{ yyval.d = sin(yyvsp[-1].d);      ;
    break;}
case 381:
#line 2659 "Gmsh.y"
{ yyval.d = asin(yyvsp[-1].d);     ;
    break;}
case 382:
#line 2660 "Gmsh.y"
{ yyval.d = cos(yyvsp[-1].d);      ;
    break;}
case 383:
#line 2661 "Gmsh.y"
{ yyval.d = acos(yyvsp[-1].d);     ;
    break;}
case 384:
#line 2662 "Gmsh.y"
{ yyval.d = tan(yyvsp[-1].d);      ;
    break;}
case 385:
#line 2663 "Gmsh.y"
{ yyval.d = atan(yyvsp[-1].d);     ;
    break;}
case 386:
#line 2664 "Gmsh.y"
{ yyval.d = atan2(yyvsp[-3].d,yyvsp[-1].d); ;
    break;}
case 387:
#line 2665 "Gmsh.y"
{ yyval.d = sinh(yyvsp[-1].d);     ;
    break;}
case 388:
#line 2666 "Gmsh.y"
{ yyval.d = cosh(yyvsp[-1].d);     ;
    break;}
case 389:
#line 2667 "Gmsh.y"
{ yyval.d = tanh(yyvsp[-1].d);     ;
    break;}
case 390:
#line 2668 "Gmsh.y"
{ yyval.d = fabs(yyvsp[-1].d);     ;
    break;}
case 391:
#line 2669 "Gmsh.y"
{ yyval.d = floor(yyvsp[-1].d);    ;
    break;}
case 392:
#line 2670 "Gmsh.y"
{ yyval.d = ceil(yyvsp[-1].d);     ;
    break;}
case 393:
#line 2671 "Gmsh.y"
{ yyval.d = fmod(yyvsp[-3].d,yyvsp[-1].d);  ;
    break;}
case 394:
#line 2672 "Gmsh.y"
{ yyval.d = fmod(yyvsp[-3].d,yyvsp[-1].d);  ;
    break;}
case 395:
#line 2673 "Gmsh.y"
{ yyval.d = sqrt(yyvsp[-3].d*yyvsp[-3].d+yyvsp[-1].d*yyvsp[-1].d); ;
    break;}
case 396:
#line 2674 "Gmsh.y"
{ yyval.d = yyvsp[-1].d*(double)rand()/(double)RAND_MAX; ;
    break;}
case 397:
#line 2683 "Gmsh.y"
{ yyval.d = yyvsp[0].d; ;
    break;}
case 398:
#line 2684 "Gmsh.y"
{ yyval.d = 3.141592653589793; ;
    break;}
case 399:
#line 2685 "Gmsh.y"
{ yyval.d = ParUtil::Instance()->rank(); ;
    break;}
case 400:
#line 2686 "Gmsh.y"
{ yyval.d = ParUtil::Instance()->size(); ;
    break;}
case 401:
#line 2691 "Gmsh.y"
{
      TheSymbol.Name = yyvsp[0].c ;
      if (!(pSymbol = (Symbol*)List_PQuery(Symbol_L, &TheSymbol, CompareSymbols))) {
	yymsg(GERROR, "Unknown variable '%s'", yyvsp[0].c) ;
	yyval.d = 0. ;
      }
      else
	yyval.d = *(double*)List_Pointer_Fast(pSymbol->val, 0) ;
    ;
    break;}
case 402:
#line 2702 "Gmsh.y"
{
      TheSymbol.Name = yyvsp[-3].c ;
      if (!(pSymbol = (Symbol*)List_PQuery(Symbol_L, &TheSymbol, CompareSymbols))) {
	yymsg(GERROR, "Unknown variable '%s'", yyvsp[-3].c) ;
	yyval.d = 0. ;
      }
      else{
	if((pd = (double*)List_Pointer_Test(pSymbol->val, (int)yyvsp[-1].d)))
	  yyval.d = *pd ;
	else{
	  yymsg(GERROR, "Uninitialized variable '%s[%d]'", yyvsp[-3].c, (int)yyvsp[-1].d) ;
	  yyval.d = 0. ;
	}
      }
    ;
    break;}
case 403:
#line 2719 "Gmsh.y"
{
      TheSymbol.Name = yyvsp[-1].c ;
      if (!(pSymbol = (Symbol*)List_PQuery(Symbol_L, &TheSymbol, CompareSymbols))) {
	yymsg(GERROR, "Unknown variable '%s'", yyvsp[-1].c) ;
	yyval.d = 0. ;
      }
      else
	yyval.d = (*(double*)List_Pointer_Fast(pSymbol->val, 0) += yyvsp[0].i) ;
    ;
    break;}
case 404:
#line 2730 "Gmsh.y"
{
      TheSymbol.Name = yyvsp[-4].c ;
      if (!(pSymbol = (Symbol*)List_PQuery(Symbol_L, &TheSymbol, CompareSymbols))) {
	yymsg(GERROR, "Unknown variable '%s'", yyvsp[-4].c) ;
	yyval.d = 0. ;
      }
      else{
	if((pd = (double*)List_Pointer_Test(pSymbol->val, (int)yyvsp[-2].d)))
	  yyval.d = (*pd += yyvsp[0].i) ;
	else{
	  yymsg(GERROR, "Uninitialized variable '%s[%d]'", yyvsp[-4].c, (int)yyvsp[-2].d) ;
	  yyval.d = 0. ;
	}
      }
    ;
    break;}
case 405:
#line 2749 "Gmsh.y"
{
      if(!(pNumCat = Get_NumberOptionCategory(yyvsp[-2].c))){
	yymsg(GERROR, "Unknown numeric option class '%s'", yyvsp[-2].c);
	yyval.d = 0. ;
      }
      else{
	if(!(pNumOpt =  (double (*) (int, int, double))Get_NumberOption(yyvsp[0].c, pNumCat))){
	  yymsg(GERROR, "Unknown numeric option '%s.%s'", yyvsp[-2].c, yyvsp[0].c);
	  yyval.d = 0. ;
	}
	else
	  yyval.d = pNumOpt(0, GMSH_GET, 0);
      }
    ;
    break;}
case 406:
#line 2765 "Gmsh.y"
{
      if(!(pNumCat = Get_NumberOptionCategory(yyvsp[-5].c))){
	yymsg(GERROR, "Unknown numeric option class '%s'", yyvsp[-5].c);
	yyval.d = 0. ;
      }
      else{
	if(!(pNumOpt =  (double (*) (int, int, double))Get_NumberOption(yyvsp[0].c, pNumCat))){
	  yymsg(GERROR, "Unknown numeric option '%s[%d].%s'", yyvsp[-5].c, (int)yyvsp[-3].d, yyvsp[0].c);
	  yyval.d = 0. ;
	}
	else
	  yyval.d = pNumOpt((int)yyvsp[-3].d, GMSH_GET, 0);
      }
    ;
    break;}
case 407:
#line 2781 "Gmsh.y"
{
      if(!(pNumCat = Get_NumberOptionCategory(yyvsp[-3].c))){
	yymsg(GERROR, "Unknown numeric option class '%s'", yyvsp[-3].c);
	yyval.d = 0. ;
      }
      else{
	if(!(pNumOpt =  (double (*) (int, int, double))Get_NumberOption(yyvsp[-1].c, pNumCat))){
	  yymsg(GERROR, "Unknown numeric option '%s.%s'", yyvsp[-3].c, yyvsp[-1].c);
	  yyval.d = 0. ;
	}
	else
	  yyval.d = pNumOpt(0, GMSH_SET|GMSH_GUI, pNumOpt(0, GMSH_GET, 0)+yyvsp[0].i);
      }
    ;
    break;}
case 408:
#line 2797 "Gmsh.y"
{
      if(!(pNumCat = Get_NumberOptionCategory(yyvsp[-6].c))){
	yymsg(GERROR, "Unknown numeric option class '%s'", yyvsp[-6].c);
	yyval.d = 0. ;
      }
      else{
	if(!(pNumOpt =  (double (*) (int, int, double))Get_NumberOption(yyvsp[-1].c, pNumCat))){
	  yymsg(GERROR, "Unknown numeric option '%s[%d].%s'", yyvsp[-6].c, (int)yyvsp[-4].d, yyvsp[-1].c);
	  yyval.d = 0. ;
	}
	else
	  yyval.d = pNumOpt((int)yyvsp[-4].d, GMSH_SET|GMSH_GUI, pNumOpt((int)yyvsp[-4].d, GMSH_GET, 0)+yyvsp[0].i);
      }
    ;
    break;}
case 409:
#line 2815 "Gmsh.y"
{
      memcpy(yyval.v, yyvsp[0].v, 5*sizeof(double)) ;
    ;
    break;}
case 410:
#line 2819 "Gmsh.y"
{
      for(i=0 ; i<5 ; i++) yyval.v[i] = -yyvsp[0].v[i] ;
    ;
    break;}
case 411:
#line 2823 "Gmsh.y"
{ 
      for(i=0 ; i<5 ; i++) yyval.v[i] = yyvsp[0].v[i];
    ;
    break;}
case 412:
#line 2827 "Gmsh.y"
{ 
      for(i=0 ; i<5 ; i++) yyval.v[i] = yyvsp[-2].v[i] - yyvsp[0].v[i] ;
    ;
    break;}
case 413:
#line 2831 "Gmsh.y"
{
      for(i=0 ; i<5 ; i++) yyval.v[i] = yyvsp[-2].v[i] + yyvsp[0].v[i] ;
    ;
    break;}
case 414:
#line 2838 "Gmsh.y"
{ 
      yyval.v[0]=yyvsp[-9].d;  yyval.v[1]=yyvsp[-7].d;  yyval.v[2]=yyvsp[-5].d;  yyval.v[3]=yyvsp[-3].d; yyval.v[4]=yyvsp[-1].d;
    ;
    break;}
case 415:
#line 2842 "Gmsh.y"
{ 
      yyval.v[0]=yyvsp[-7].d;  yyval.v[1]=yyvsp[-5].d;  yyval.v[2]=yyvsp[-3].d;  yyval.v[3]=yyvsp[-1].d; yyval.v[4]=1.0;
    ;
    break;}
case 416:
#line 2846 "Gmsh.y"
{
      yyval.v[0]=yyvsp[-5].d;  yyval.v[1]=yyvsp[-3].d;  yyval.v[2]=yyvsp[-1].d;  yyval.v[3]=0.0; yyval.v[4]=1.0;
    ;
    break;}
case 417:
#line 2850 "Gmsh.y"
{
      yyval.v[0]=yyvsp[-5].d;  yyval.v[1]=yyvsp[-3].d;  yyval.v[2]=yyvsp[-1].d;  yyval.v[3]=0.0; yyval.v[4]=1.0;
    ;
    break;}
case 418:
#line 2857 "Gmsh.y"
{
    ;
    break;}
case 419:
#line 2860 "Gmsh.y"
{
    ;
    break;}
case 420:
#line 2866 "Gmsh.y"
{
    ;
    break;}
case 421:
#line 2869 "Gmsh.y"
{
    ;
    break;}
case 422:
#line 2875 "Gmsh.y"
{
    ;
    break;}
case 423:
#line 2878 "Gmsh.y"
{
       yyval.l=yyvsp[-1].l;
    ;
    break;}
case 424:
#line 2882 "Gmsh.y"
{
       yyval.l=yyvsp[-1].l;
    ;
    break;}
case 425:
#line 2889 "Gmsh.y"
{
      yyval.l = List_Create(2,1,sizeof(List_T*)) ;
      List_Add(yyval.l, &(yyvsp[0].l)) ;
    ;
    break;}
case 426:
#line 2894 "Gmsh.y"
{
      List_Add(yyval.l, &(yyvsp[0].l)) ;
    ;
    break;}
case 427:
#line 2902 "Gmsh.y"
{
      yyval.l = List_Create(2,1,sizeof(double)) ;
      List_Add(yyval.l, &(yyvsp[0].d)) ;
    ;
    break;}
case 428:
#line 2907 "Gmsh.y"
{
      yyval.l = yyvsp[0].l ;
    ;
    break;}
case 429:
#line 2911 "Gmsh.y"
{
      yyval.l=yyvsp[-1].l;
    ;
    break;}
case 430:
#line 2915 "Gmsh.y"
{
      yyval.l=yyvsp[-1].l;
      for(i=0 ; i<List_Nbr(yyval.l) ; i++){
	pd = (double*)List_Pointer(yyval.l, i);
	(*pd) = - (*pd);
      }
    ;
    break;}
case 431:
#line 2926 "Gmsh.y"
{ 
      yyval.l = List_Create(2,1,sizeof(double)) ; 
      for(d=yyvsp[-2].d ; (yyvsp[-2].d<yyvsp[0].d)?(d<=yyvsp[0].d):(d>=yyvsp[0].d) ; (yyvsp[-2].d<yyvsp[0].d)?(d+=1.):(d-=1.)) 
	List_Add(yyval.l, &d) ;
    ;
    break;}
case 432:
#line 2932 "Gmsh.y"
{
      yyval.l = List_Create(2,1,sizeof(double)) ; 
      if(!yyvsp[0].d || (yyvsp[-4].d<yyvsp[-2].d && yyvsp[0].d<0) || (yyvsp[-4].d>yyvsp[-2].d && yyvsp[0].d>0)){
        yymsg(GERROR, "Wrong increment in '%g:%g:%g'", yyvsp[-4].d, yyvsp[-2].d, yyvsp[0].d) ;
	List_Add(yyval.l, &(yyvsp[-4].d)) ;
      }
      else
	for(d=yyvsp[-4].d ; (yyvsp[0].d>0)?(d<=yyvsp[-2].d):(d>=yyvsp[-2].d) ; d+=yyvsp[0].d)
	  List_Add(yyval.l, &d) ;
   ;
    break;}
case 433:
#line 2943 "Gmsh.y"
{
      yyval.l = List_Create(2,1,sizeof(double)) ;
      TheSymbol.Name = yyvsp[-2].c ;
      if (!(pSymbol = (Symbol*)List_PQuery(Symbol_L, &TheSymbol, CompareSymbols))) {
	yymsg(GERROR, "Unknown variable '%s'", yyvsp[-2].c) ;
	d = 0.0 ;
	List_Add(yyval.l, &d);
      }
      else{
	for(i = 0 ; i < List_Nbr(pSymbol->val) ; i++)
	  List_Add(yyval.l, (double*)List_Pointer_Fast(pSymbol->val, i)) ;
      }
    ;
    break;}
case 434:
#line 2957 "Gmsh.y"
{
      yyval.l = List_Create(2,1,sizeof(double)) ;
      TheSymbol.Name = yyvsp[-2].c ;
      if (!(pSymbol = (Symbol*)List_PQuery(Symbol_L, &TheSymbol, CompareSymbols))) {
	yymsg(GERROR, "Unknown variable '%s'", yyvsp[-2].c) ;
	d = 0.0 ;
	List_Add(yyval.l, &d);
      }
      else{
	for(i = 0 ; i < List_Nbr(pSymbol->val) ; i++){
	  d = - *(double*)List_Pointer_Fast(pSymbol->val, i);
	  List_Add(yyval.l, &d) ;
	}
      }
    ;
    break;}
case 435:
#line 2973 "Gmsh.y"
{
      yyval.l = List_Create(2,1,sizeof(double)) ;
      TheSymbol.Name = yyvsp[-5].c ;
      if (!(pSymbol = (Symbol*)List_PQuery(Symbol_L, &TheSymbol, CompareSymbols))) {
	yymsg(GERROR, "Unknown variable '%s'", yyvsp[-5].c) ;
	d = 0.0 ;
	List_Add(yyval.l, &d);
      }
      else{
	for(i = 0 ; i < List_Nbr(yyvsp[-2].l) ; i++){
	  j = (int)(*(double*)List_Pointer_Fast(yyvsp[-2].l, i));
	  if((pd = (double*)List_Pointer_Test(pSymbol->val, j)))
	    List_Add(yyval.l, pd) ;
	  else
	    yymsg(GERROR, "Uninitialized variable '%s[%d]'", yyvsp[-5].c, j) ;	  
	}
      }
      List_Delete(yyvsp[-2].l);
    ;
    break;}
case 436:
#line 2993 "Gmsh.y"
{
      yyval.l = List_Create(2,1,sizeof(double)) ;
      TheSymbol.Name = yyvsp[-5].c ;
      if (!(pSymbol = (Symbol*)List_PQuery(Symbol_L, &TheSymbol, CompareSymbols))) {
	yymsg(GERROR, "Unknown variable '%s'", yyvsp[-5].c) ;
	d = 0.0 ;
	List_Add(yyval.l, &d);
      }
      else{
	for(i = 0 ; i < List_Nbr(yyvsp[-2].l) ; i++){
	  j = (int)(*(double*)List_Pointer_Fast(yyvsp[-2].l, i));
	  if((pd = (double*)List_Pointer_Test(pSymbol->val, j))){
	    d = - *pd;
	    List_Add(yyval.l, &d) ;
	  }
	  else
	    yymsg(GERROR, "Uninitialized variable '%s[%d]'", yyvsp[-5].c, j) ;	  
	}
      }
      List_Delete(yyvsp[-2].l);
    ;
    break;}
case 437:
#line 3018 "Gmsh.y"
{
      yyval.l = List_Create(2,1,sizeof(double)) ;
      List_Add(yyval.l, &(yyvsp[0].d)) ;
    ;
    break;}
case 438:
#line 3023 "Gmsh.y"
{
      yyval.l = yyvsp[0].l ;
    ;
    break;}
case 439:
#line 3027 "Gmsh.y"
{
      List_Add(yyval.l, &(yyvsp[0].d)) ;
    ;
    break;}
case 440:
#line 3031 "Gmsh.y"
{
      for(i=0 ; i<List_Nbr(yyvsp[0].l) ; i++){
	List_Read(yyvsp[0].l, i, &d) ;
	List_Add(yyval.l, &d) ;
      }
      List_Delete(yyvsp[0].l);
    ;
    break;}
case 441:
#line 3043 "Gmsh.y"
{
      yyval.u = PACK_COLOR((int)yyvsp[-7].d, (int)yyvsp[-5].d, (int)yyvsp[-3].d, (int)yyvsp[-1].d);
    ;
    break;}
case 442:
#line 3047 "Gmsh.y"
{
      yyval.u = PACK_COLOR((int)yyvsp[-5].d, (int)yyvsp[-3].d, (int)yyvsp[-1].d, 255);
    ;
    break;}
case 443:
#line 3058 "Gmsh.y"
{
      yyval.u = Get_ColorForString(ColorString, -1, yyvsp[0].c, &flag);
      if(flag) yymsg(GERROR, "Unknown color '%s'", yyvsp[0].c);
    ;
    break;}
case 444:
#line 3063 "Gmsh.y"
{
      if(!(pColCat = Get_ColorOptionCategory(yyvsp[-4].c))){
	yymsg(GERROR, "Unknown color option class '%s'", yyvsp[-4].c);
	yyval.u = 0 ;
      }
      else{
	if(!(pColOpt =  (unsigned int (*) (int, int, unsigned int))Get_ColorOption(yyvsp[0].c, pColCat))){
	  yymsg(GERROR, "Unknown color option '%s.Color.%s'", yyvsp[-4].c, yyvsp[0].c);
	  yyval.u = 0 ;
	}
	else{
	  yyval.u = pColOpt(0,GMSH_GET,0) ;
	}
      }
    ;
    break;}
case 445:
#line 3082 "Gmsh.y"
{
      yyval.l = yyvsp[-1].l;
    ;
    break;}
case 446:
#line 3086 "Gmsh.y"
{
      yyval.l = List_Create(256,10,sizeof(unsigned int)) ;
      GmshColorTable *ct = Get_ColorTable((int)yyvsp[-3].d);
      if(!ct)
	yymsg(GERROR, "View[%d] does not exist", (int)yyvsp[-3].d);
      else{
	for(i=0 ; i<ct->size ; i++) 
	  List_Add(yyval.l, &ct->table[i]);
      }
    ;
    break;}
case 447:
#line 3100 "Gmsh.y"
{
      yyval.l = List_Create(256,10,sizeof(unsigned int)) ;
      List_Add(yyval.l, &(yyvsp[0].u)) ;
    ;
    break;}
case 448:
#line 3105 "Gmsh.y"
{
      List_Add(yyval.l, &(yyvsp[0].u)) ;
    ;
    break;}
case 449:
#line 3112 "Gmsh.y"
{
      yyval.c = yyvsp[0].c;
    ;
    break;}
case 450:
#line 3116 "Gmsh.y"
{
      yyval.c = (char *)Malloc((strlen(yyvsp[-3].c)+strlen(yyvsp[-1].c)+1)*sizeof(char)) ;
      strcpy(yyval.c, yyvsp[-3].c) ;  
      strcat(yyval.c, yyvsp[-1].c) ;
      Free(yyvsp[-3].c);
      Free(yyvsp[-1].c);
    ;
    break;}
case 451:
#line 3124 "Gmsh.y"
{
      yyval.c = (char *)Malloc((strlen(yyvsp[-1].c)+1)*sizeof(char)) ;
      for(i=strlen(yyvsp[-1].c)-1; i>=0; i--){
	if(yyvsp[-1].c[i] == '.'){
	  strncpy(yyval.c,yyvsp[-1].c,i);
	  yyval.c[i]='\0';
	  break;
	}
      }
      if(i<=0) strcpy(yyval.c,yyvsp[-1].c);
      Free(yyvsp[-1].c);
    ;
    break;}
case 452:
#line 3137 "Gmsh.y"
{
      yyval.c = yyvsp[-1].c;
    ;
    break;}
case 453:
#line 3141 "Gmsh.y"
{
      i = PrintListOfDouble(yyvsp[-3].c,yyvsp[-1].l,tmpstring);
      if(i<0){
	yymsg(GERROR, "Too few arguments in Sprintf");
	yyval.c = yyvsp[-3].c;
      }
      else if(i>0){
	yymsg(GERROR, "Too many arguments (%d) in Sprintf", i);
	yyval.c = yyvsp[-3].c;
      }
      else{
	yyval.c = (char*)Malloc((strlen(tmpstring)+1)*sizeof(char));
	strcpy(yyval.c, tmpstring);
	Free(yyvsp[-3].c);
      }
      List_Delete(yyvsp[-1].l);
    ;
    break;}
case 454:
#line 3159 "Gmsh.y"
{ 
      if(!(pStrCat = Get_StringOptionCategory(yyvsp[-3].c)))
	yymsg(GERROR, "Unknown string option class '%s'", yyvsp[-3].c);
      else{
	if(!(pStrOpt = (char *(*) (int, int, char *))Get_StringOption(yyvsp[-1].c, pStrCat)))
	  yymsg(GERROR, "Unknown string option '%s.%s'", yyvsp[-3].c, yyvsp[-1].c);
	else{
	  str = pStrOpt(0,GMSH_GET,NULL) ;
	  yyval.c = (char*)Malloc((strlen(str)+1)*sizeof(char));
	  strcpy(yyval.c, str);
	}
      }
    ;
    break;}
case 455:
#line 3173 "Gmsh.y"
{ 
      if(!(pStrCat = Get_StringOptionCategory(yyvsp[-6].c)))
	yymsg(GERROR, "Unknown string option class '%s'", yyvsp[-6].c);
      else{
	if(!(pStrOpt = (char *(*) (int, int, char *))Get_StringOption(yyvsp[-1].c, pStrCat)))
	  yymsg(GERROR, "Unknown string option '%s[%d].%s'", yyvsp[-6].c, (int)yyvsp[-4].d, yyvsp[-1].c);
	else{
	  str = pStrOpt((int)yyvsp[-4].d,GMSH_GET,NULL) ;
	  yyval.c = (char*)Malloc((strlen(str)+1)*sizeof(char));
	  strcpy(yyval.c, str);
	}
      }
    ;
    break;}
}

#line 705 "/usr/share/bison/bison.simple"


  yyvsp -= yylen;
  yyssp -= yylen;
#if YYLSP_NEEDED
  yylsp -= yylen;
#endif

#if YYDEBUG
  if (yydebug)
    {
      short *yyssp1 = yyss - 1;
      YYFPRINTF (stderr, "state stack now");
      while (yyssp1 != yyssp)
	YYFPRINTF (stderr, " %d", *++yyssp1);
      YYFPRINTF (stderr, "\n");
    }
#endif

  *++yyvsp = yyval;
#if YYLSP_NEEDED
  *++yylsp = yyloc;
#endif

  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTBASE] + *yyssp;
  if (yystate >= 0 && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTBASE];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;

#ifdef YYERROR_VERBOSE
      yyn = yypact[yystate];

      if (yyn > YYFLAG && yyn < YYLAST)
	{
	  YYSIZE_T yysize = 0;
	  char *yymsg;
	  int yyx, yycount;

	  yycount = 0;
	  /* Start YYX at -YYN if negative to avoid negative indexes in
	     YYCHECK.  */
	  for (yyx = yyn < 0 ? -yyn : 0;
	       yyx < (int) (sizeof (yytname) / sizeof (char *)); yyx++)
	    if (yycheck[yyx + yyn] == yyx)
	      yysize += yystrlen (yytname[yyx]) + 15, yycount++;
	  yysize += yystrlen ("parse error, unexpected ") + 1;
	  yysize += yystrlen (yytname[YYTRANSLATE (yychar)]);
	  yymsg = (char *) YYSTACK_ALLOC (yysize);
	  if (yymsg != 0)
	    {
	      char *yyp = yystpcpy (yymsg, "parse error, unexpected ");
	      yyp = yystpcpy (yyp, yytname[YYTRANSLATE (yychar)]);

	      if (yycount < 5)
		{
		  yycount = 0;
		  for (yyx = yyn < 0 ? -yyn : 0;
		       yyx < (int) (sizeof (yytname) / sizeof (char *));
		       yyx++)
		    if (yycheck[yyx + yyn] == yyx)
		      {
			const char *yyq = ! yycount ? ", expecting " : " or ";
			yyp = yystpcpy (yyp, yyq);
			yyp = yystpcpy (yyp, yytname[yyx]);
			yycount++;
		      }
		}
	      yyerror (yymsg);
	      YYSTACK_FREE (yymsg);
	    }
	  else
	    yyerror ("parse error; also virtual memory exhausted");
	}
      else
#endif /* defined (YYERROR_VERBOSE) */
	yyerror ("parse error");
    }
  goto yyerrlab1;


/*--------------------------------------------------.
| yyerrlab1 -- error raised explicitly by an action |
`--------------------------------------------------*/
yyerrlab1:
  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse lookahead token after an
	 error, discard it.  */

      /* return failure if at end of input */
      if (yychar == YYEOF)
	YYABORT;
      YYDPRINTF ((stderr, "Discarding token %d (%s).\n",
		  yychar, yytname[yychar1]));
      yychar = YYEMPTY;
    }

  /* Else will try to reuse lookahead token after shifting the error
     token.  */

  yyerrstatus = 3;		/* Each real token shifted decrements this */

  goto yyerrhandle;


/*-------------------------------------------------------------------.
| yyerrdefault -- current state does not do anything special for the |
| error token.                                                       |
`-------------------------------------------------------------------*/
yyerrdefault:
#if 0
  /* This is wrong; only states that explicitly want error tokens
     should shift them.  */

  /* If its default is to accept any token, ok.  Otherwise pop it.  */
  yyn = yydefact[yystate];
  if (yyn)
    goto yydefault;
#endif


/*---------------------------------------------------------------.
| yyerrpop -- pop the current state because it cannot handle the |
| error token                                                    |
`---------------------------------------------------------------*/
yyerrpop:
  if (yyssp == yyss)
    YYABORT;
  yyvsp--;
  yystate = *--yyssp;
#if YYLSP_NEEDED
  yylsp--;
#endif

#if YYDEBUG
  if (yydebug)
    {
      short *yyssp1 = yyss - 1;
      YYFPRINTF (stderr, "Error: state stack now");
      while (yyssp1 != yyssp)
	YYFPRINTF (stderr, " %d", *++yyssp1);
      YYFPRINTF (stderr, "\n");
    }
#endif

/*--------------.
| yyerrhandle.  |
`--------------*/
yyerrhandle:
  yyn = yypact[yystate];
  if (yyn == YYFLAG)
    goto yyerrdefault;

  yyn += YYTERROR;
  if (yyn < 0 || yyn > YYLAST || yycheck[yyn] != YYTERROR)
    goto yyerrdefault;

  yyn = yytable[yyn];
  if (yyn < 0)
    {
      if (yyn == YYFLAG)
	goto yyerrpop;
      yyn = -yyn;
      goto yyreduce;
    }
  else if (yyn == 0)
    goto yyerrpop;

  if (yyn == YYFINAL)
    YYACCEPT;

  YYDPRINTF ((stderr, "Shifting error token, "));

  *++yyvsp = yylval;
#if YYLSP_NEEDED
  *++yylsp = yylloc;
#endif

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

/*---------------------------------------------.
| yyoverflowab -- parser overflow comes here.  |
`---------------------------------------------*/
yyoverflowlab:
  yyerror ("parser stack overflow");
  yyresult = 2;
  /* Fall through.  */

yyreturn:
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
  return yyresult;
}
#line 3188 "Gmsh.y"


void InitSymbols(void){
  if(!Symbol_L)
    Symbol_L = List_Create(50,10,sizeof(Symbol));
  else
    List_Reset(Symbol_L);
}

void DeleteSymbols(void){
  int i;
  for(i = 0 ; i < List_Nbr(Symbol_L) ; i++)
    List_Delete(((Symbol*)List_Pointer_Fast(Symbol_L,i))->val);
  List_Delete(Symbol_L);
}

int CompareSymbols (const void *a, const void *b){
  return(strcmp(((Symbol*)a)->Name,((Symbol*)b)->Name));
}

int PrintListOfDouble(char *format, List_T *list, char *buffer){
  int i, j, k;
  char tmp1[256], tmp2[256];

  j=0;
  while(format[j]!='%') j++;
  strncpy(buffer, format, j); 
  buffer[j]='\0'; 
  for(i = 0 ; i<List_Nbr(list) ; i++){
    k = j;
    j++;
    if(j<(int)strlen(format)){
      if(format[j]=='%'){
	strcat(buffer, "%");
	j++;
      }
      while(format[j]!='%' && j<(int)strlen(format)) j++;
      if(k != j){
	strncpy(tmp1, &(format[k]),j-k);
	tmp1[j-k]='\0';
	sprintf(tmp2, tmp1, *(double*)List_Pointer(list,i)); 
	strcat(buffer, tmp2);
      }
    }
    else{
      return List_Nbr(list)-i;
      break ;
    }
  }
  if(j != (int)strlen(format))
    return -1;
  return 0;
}

void yyerror(char *s){
  Msg(GERROR, "'%s', line %d : %s (%s)",yyname,yylineno-1,s,yytext);
  yyerrorstate=1;
}

void yymsg(int type, char *fmt, ...){
  va_list args;
  char tmp[1024];

  va_start (args, fmt);
  vsprintf (tmp, fmt, args);
  va_end (args);

  Msg(type, "'%s', line %d : %s", yyname, yylineno-1, tmp);

  if(type == GERROR) yyerrorstate=1;
}


