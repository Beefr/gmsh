#FLAGS = -O3 -funroll-all-loops -ansi -pedantic -Wall -U DEBUG
# Flags for different diagnostics: 
#FLAGS = -g -ansi -pedantic -Wall -fprofile-arcs -ftest-coverage -pg
#FLAGS = -g -ansi -pedantic -Wall -pg 

# If gmp.h is not found de facto (e.g. when it is privately intalled), 
# its path should be put here
#INCL  = 

#LIBS   = -lgmp
#LIBDIR = .
#SRC    = gmp_normal_form.c gmp_matrix_io.c gmp_matrix.c gmp_blas.c

# The compiler options are for gcc. If it is not available, 
# suitable flags must be set for the compiler
#CC     = gcc
#RM     = rm -f
#RANLIB = ranlib

#libkbi.a: $(SRC) 
#	$(RM) *.o
#	$(CC) -c $(FLAGS) $(SRC)
#	ar r libkbi.a *.o
#	$(RM) *.o
#	$(RANLIB) libkbi.a 

#compute_normal_form: libkbi compute_normal_form.c 
#	$(CC) $(FLAGS) -L $(LIBDIR) $(INCL) compute_normal_form.c -o compute_normal_form -lkbi $(LIBS)
#clean:
#	$(RM) compute_normal_form
#	$(RM) *.o

##

include ../../variables

LIB = ../../lib/libGmshKbi${LIBEXT}

INC = ${DASH}I.

CFLAGS = ${OPTIM} ${FLAGS} ${INC} ${SYSINCLUDE} -lgmp

SRC = gmp_normal_form.c gmp_matrix_io.c gmp_matrix.c gmp_blas.c
      
OBJ = ${SRC:.c=${OBJEXT}}

.SUFFIXES: ${OBJEXT} .c

${LIB}: ${OBJ}
	${AR} ${ARFLAGS}${LIB} ${OBJ}
	${RANLIB} ${LIB}

cpobj: ${OBJ} 
	cp -f ${OBJ} ../../lib/

.c${OBJEXT}:
	${CC} ${CFLAGS} ${DASH}c $<
       
clean:
	${RM} *.o *.obj
	
depend:
	(sed '/^# DO NOT DELETE THIS LINE/q' Makefile && \
         ${CXX} -MM ${CFLAGS} ${SRC} | sed 's/.o:/$${OBJEXT}:/g' \
        ) > Makefile.new
	cp Makefile Makefile.bak
	cp Makefile.new Makefile
	rm -f Makefile.new

# DO NOT DELETE THIS LINE	
gmp_normal_form${OBJEXT}: gmp_normal_form.c gmp_blas.h gmp_matrix.h \
  gmp_normal_form.h
gmp_matrix_io${OBJEXT}: gmp_matrix_io.c gmp_matrix_io.h gmp_matrix.h gmp_blas.h
gmp_matrix${OBJEXT}: gmp_matrix.c gmp_matrix.h gmp_blas.h
gmp_blas${OBJEXT}: gmp_blas.c gmp_blas.h
